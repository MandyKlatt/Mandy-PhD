)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95
) +
scale_color_viridis_d(option = "A",
end = 0.8
) +
scale_linetype_manual(values = c(1, 6)
) +
scale_x_continuous(expand = c(0.01,0)
) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 15,
t = 20,
b = 10)
) -> loess_hr
df_heart_rate_std |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_continuous(expand = c(0, 0.25)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 30,
t = 20,
b = 10)
) -> loess_hr_std
loess_comp <- grid.arrange(loess_hr,
loess_hr_std,
ncol = 2)
loess_comp <- annotate_figure(p = loess_comp,
bottom = text_grob("Time (in Minutes)",
face = "plain",
size = 12,
family = "Times")
)
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.pdf",
width = 20,
height = 12,
units = "cm")
df_heart_rate |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95
) +
scale_color_viridis_d(option = "A",
end = 0.8
) +
scale_linetype_manual(values = c(1, 6)
) +
scale_x_continuous(expand = c(0.01,0)
) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 15,
t = 20,
b = 10),
text = element_text(family = "Times")
) -> loess_hr
df_heart_rate_std |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_continuous(expand = c(0, 0.25)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 30,
t = 20,
b = 10),
text = element_text(family = "Times")
) -> loess_hr_std
loess_comp <- grid.arrange(loess_hr,
loess_hr_std,
ncol = 2)
loess_comp <- annotate_figure(p = loess_comp,
bottom = text_grob("Time (in Minutes)",
face = "plain",
size = 12,
family = "Times")
)
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.pdf",
width = 20,
height = 12,
units = "cm")
df_heart_rate |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95
) +
scale_color_viridis_d(option = "A",
end = 0.8
) +
scale_linetype_manual(values = c(1, 6)
) +
scale_x_continuous(expand = c(0.01,0)
) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 15,
t = 20,
b = 5),
text = element_text(family = "Times")
) -> loess_hr
df_heart_rate_std |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_continuous(expand = c(0, 0.25)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 30,
t = 20,
b = 5),
text = element_text(family = "Times")
) -> loess_hr_std
loess_comp <- grid.arrange(loess_hr,
loess_hr_std,
ncol = 2)
loess_comp <- annotate_figure(p = loess_comp,
bottom = text_grob("Time (in Minutes)",
face = "plain",
size = 12,
family = "Times")
)
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.pdf",
width = 20,
height = 12,
units = "cm")
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.pdf",
width = 25,
height = 15,
units = "cm")
box_plot <-
main_single_hr |>
filter(time_span != "overall") |>
dplyr::select("ID",
"time_span",
"heart_rate_std") |>
mutate(time_span = fct_recode(time_span,
"Pre-teaching Interval" = "preparation",
"Teaching Interval" = "teaching",
"Post-teaching Interval" = "post",
"Interview Interval" = "interview",
"End Interval" = "end"
),
time_span = factor(time_span,
levels = c("Pre-teaching Interval",
"Teaching Interval",
"Post-teaching Interval",
"Interview Interval",
"End Interval"
),
labels = c("Pre-Teaching\nInterval",
"Teaching\nInterval",
"Post-Teaching\nInterval",
"Interview\nInterval",
"End\nInterval")
)
) |>
distinct() |>
group_by(ID, time_span) |>
summarise(mean_hr_std =
mean(heart_rate_std,
na.rm = TRUE)
) |>
ggplot(mapping = aes(x = time_span,
y = mean_hr_std
)
) +
geom_boxplot()+
scale_y_continuous(breaks=seq(-2, 2, 1),
limits=c(-2, 2)
) +
# geom_jitter(width = 0.2) +
theme_apa() +
theme(text = element_text(family = "Times"),
axis.text.x = element_text(
color="black",
size = 12,
family = "Times"),
plot.caption = element_text(hjust = 0)
) +
labs(x = "",
y = "Mean Standardized Heart Rate",
caption = expression(
paste(italic("Note: N"),
"= 81 participants per interval. Fig. shows median (bold line), interquartile range (box) and outliers (dots)."
)
))
ggsave(filename = "plots_publication/box_plot.pdf",
plot = box_plot,
width = 20,
height = 12,
units = "cm")
plot_list_appendix <- list(
`Preparation Phase` = list(name = "Pre-Teaching Interval", mod = mods$preparation, data = graph_data$preparation),
`Teaching Phase` = list(name = "Teaching Interval", mod = mods$teaching, data = graph_data$teaching),
`Post Teaching Phase` = list(name = "Post-Teaching Interval", mod = mods$post, data = graph_data$post),
`Interview Phase` = list(name = "Interview Interval", mod = mods$interview, data = graph_data$interview),
`End Phase` = list(name = "End Interval", mod = mods$end, data = graph_data$end)
) %>%
map(~ ggplot(data = .$data,
mapping = aes(x = time,  # Use the appropriate 'x' value (like 'work_hrs' in the original)
y = heart_rate_std,  # Use the appropriate 'y' value (like 'inc')
group = ID)) +
geom_line(mapping = aes(y = fitted(.$mod)),  # Line for fitted values from the model
color = "blue",  # Adjust color for clarity
size = 1) +  # Line thickness
geom_point(alpha = 0.5, size = 0.5) +  # Points with transparency and size
facet_wrap(~ ID, nrow = 8) +  # Arrange plots by 'ID'
xlab('Time (in Seconds)') +  # X-axis label (similar to 'Arbeitsstunden pro Woche')
ylab('Heart Rate (Standardized)') +  # Y-axis label (similar to 'Nettoeinkommen')
scale_x_continuous(breaks = c(0, 5, 10)) +  # Customize x-axis breaks as needed
labs(title = .$name) +  # Title for each plot based on phase name
theme_bw() + # Use a clean theme
theme(text = element_text(family = "Times")
)
)
preparation_plot <- plot_list_appendix$`Preparation Phase`
teaching_plot <- plot_list_appendix$`Teaching Phase`
post_teaching_plot <- plot_list_appendix$`Post Teaching Phase`
interview_plot <- plot_list_appendix$`Interview Phase`
end_plot <- plot_list_appendix$`End Phase`
ggsave(preparation_plot,
filename = "plots_publication/plot_preparation_appendix.pdf",
width = 25,
height = 30,
units = "cm")
ggsave(preparation_plot,
filename = "plots_publication/plot_preparation_appendix.pdf",
width = 25,
height = 30,
units = "cm")
ggsave(teaching_plot,
filename = "plots_publication/plot_teaching_appendix.pdf",
width = 25,
height = 30,
units = "cm")
ggsave(post_teaching_plot,
filename = "plots_publication/plot_post_teaching_appendix.pdf",
width = 25,
height = 30,
units = "cm")
ggsave(interview_plot,
filename = "plots_publication/plot_interview_appendix.pdf",
width = 25,
height = 30,
units = "cm")
ggsave(end_plot,
filename = "plots_publication/plot_end_appendix.pdf",
width = 25,
height = 30,
units = "cm")
df_heart_rate |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95
) +
scale_color_viridis_d(option = "A",
end = 0.8
) +
scale_linetype_manual(values = c(1, 6)
) +
scale_x_continuous(expand = c(0.01,0)
) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 15,
t = 20,
b = 5),
text = element_text(family = "Times",
size = 14)
) -> loess_hr
df_heart_rate_std |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_continuous(expand = c(0, 0.25)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 30,
t = 20,
b = 5),
text = element_text(family = "Times",
size = 14)
) -> loess_hr_std
loess_comp <- grid.arrange(loess_hr,
loess_hr_std,
ncol = 2)
loess_comp <- annotate_figure(p = loess_comp,
bottom = text_grob("Time (in Minutes)",
face = "plain",
size = 14,
family = "Times")
)
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.pdf",
width = 25,
height = 15,
units = "cm")
box_plot <-
main_single_hr |>
filter(time_span != "overall") |>
dplyr::select("ID",
"time_span",
"heart_rate_std") |>
mutate(time_span = fct_recode(time_span,
"Pre-teaching Interval" = "preparation",
"Teaching Interval" = "teaching",
"Post-teaching Interval" = "post",
"Interview Interval" = "interview",
"End Interval" = "end"
),
time_span = factor(time_span,
levels = c("Pre-teaching Interval",
"Teaching Interval",
"Post-teaching Interval",
"Interview Interval",
"End Interval"
),
labels = c("Pre-Teaching\nInterval",
"Teaching\nInterval",
"Post-Teaching\nInterval",
"Interview\nInterval",
"End\nInterval")
)
) |>
distinct() |>
group_by(ID, time_span) |>
summarise(mean_hr_std =
mean(heart_rate_std,
na.rm = TRUE)
) |>
ggplot(mapping = aes(x = time_span,
y = mean_hr_std
)
) +
geom_boxplot()+
scale_y_continuous(breaks=seq(-2, 2, 1),
limits=c(-2, 2)
) +
# geom_jitter(width = 0.2) +
theme_apa() +
theme(text = element_text(family = "Times"),
axis.text.x = element_text(
color="black",
size = 14,
family = "Times"),
plot.caption = element_text(hjust = 0)
) +
labs(x = "",
y = "Mean Standardized Heart Rate",
caption = expression(
paste(italic("Note: N"),
"= 81 participants per interval. Fig. shows median (bold line), interquartile range (box) and outliers (dots)."
)
))
ggsave(filename = "plots_publication/box_plot.pdf",
plot = box_plot,
width = 25,
height = 15,
units = "cm")
library(tinytex)
<<<<<<< Updated upstream
tlmgr_install(pkgs = 'natbib')
knitr::opts_chunk$set(echo = FALSE, fig.width = 8, fig.height = 4, cache = TRUE)
df_heart_rate |>
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = F,
size = 0.5,
colour = "black"              ) +
scale_color_viridis_d(option = "A",
end = 0.8
) +
scale_linetype_manual(values = c(1, 6)
) +
scale_x_continuous(expand = c(0.01,0)
) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y"
) +
theme(plot.margin = margin(r = 15,
t = 20,
b = 5),
text = element_text(family = "Times",
size = 14)
) -> loess_hr
install.packages("extrafont")
=======
>>>>>>> Stashed changes
---
title: "From heartbeat to data – Using wearable fitness trackers as an affordable approach to assess teacher stress"
---
title: "From heartbeat to data – Using wearable fitness trackers as an affordable approach to assess teacher stress"
library(tinytex)
tlmgr_install(pkgs = 'citeapa')
tlmgr_install(pkgs = 'apacite')
