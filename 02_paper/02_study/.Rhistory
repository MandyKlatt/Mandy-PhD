kurtosis() %>%
round(., digits = 2) ->
quest.table.expert[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table.expert[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table.expert) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table.expert,
caption = "Scale analysis for experts' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
quest.data %>%
dplyr::select(contains("LM")) %>%
as.data.frame() %>%
tab_itemscale(CSS = list(
css.firsttablerow.col7 = "'cronbachs alpha';"
))
View(quest.data)
quest.data %>%
dplyr::select(contains("LB")) %>%
as.data.frame() %>%
tab_itemscale()
quest.data %>%
dplyr::select(contains("LP")) %>%
as.data.frame() %>%
tab_itemscale()
quest.data %>%
dplyr::select(contains("LV")) %>%
as.data.frame() %>%
tab_itemscale()
quest.data %>%
dplyr::select(contains("LM")) %>%
as.data.frame() %>%
tab_itemscale(CSS = list(
css.firsttablerow.col7 = "'cronbachs alpha';"
))
############## EXPERT TABLE #########################
# creating a matrix
quest.table.expert <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table.expert) <- c("LM", "LB", "LP", "LV")
colnames(quest.table.expert) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","alpha")
# creating a loop
# i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data.expert %>%
dplyr::select(starts_with(match = i))
quest.table.expert[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table.expert[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table.expert[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table.expert[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table.expert[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table.expert[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table.expert[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table.expert[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table.expert) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table.expert,
caption = "Scale analysis for experts' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# read in data and select and rename relevant columns with transmute
demo.data <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(Group = LI06_05,
Gender = LI02_01_1,
Age = LI03_01,
`Teaching Experience` = LI04_01,
`Type of School` = LI18,
Grade = LI16_05,
Subject = LI10_05,
Semester = LI11_01,
Internship = LI13_01,
`Extracurricular Teaching Experience` = LI14,
`Secondary Teaching Activities` = LI17
)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender to count female gender (male = 2 --> 0)
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character Gender into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# changing character Semester into numeric
demo.data$Semester <- as.numeric(demo.data$Semester)
# creating new column with percent of gender
demo.data <- demo.data %>%
group_by(Group) %>%
mutate(Gender_Sum=n())
# changing `Extracurricular Teaching Experience` to count experience (no experience = 2 --> 0)
demo.data$`Extracurricular Teaching Experience` = ifelse(demo.data$`Extracurricular Teaching Experience` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Extracurricular Teaching Experience` <- as.numeric(demo.data$`Extracurricular Teaching Experience`)
# changing `Secondary Teaching Activities` to count experience (no experience = 2 --> 0)
demo.data$`Secondary Teaching Activities` = ifelse(demo.data$`Secondary Teaching Activities` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Secondary Teaching Activities` <- as.numeric(demo.data$`Secondary Teaching Activities`)
# create new columns that give proportion of Gender
# percent = female gender divided by all female Gender
# demo.data <- demo.data  %>%
#   group_by(Group) %>%
#   mutate(Gender_percent = Gender/Gender_Sum) %>%
#   mutate(Gender_percent = round(sum(Gender_percent)*100, digits=0))
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Gender female in percent" = round(sum(Gender/Gender_Sum) * 100, digits = 1),
"M Age in years" = round(mean(Age), 1),
"SD Age in years" = round(sd(Age), 1),
"Min Age in years" = min(Age),
"Max Age in years" = max(Age)
)
# format and insert table in manuscript
demo.table %>%
papaja::apa_table(
caption = "Demographic Information",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# create a basic table (tibble) using tidyverse functions
exp.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"M Exp. in years" = round(mean(`Teaching Experience`), 1),
"SD Exp. in years" = round(sd(`Teaching Experience`), 1),
"Min Exp. in years" = min(`Teaching Experience`),
"Max Exp. in years" = max(`Teaching Experience`),
"M Semester" = round(mean(Semester), 1),
"SD Semester" = round(sd(Semester), 1),
"Min Semester" = min(Semester),
"Max Semester" = max(Semester),
"M Internship in teaching units" = round(mean(Internship), 1),
"SD Internship in teaching units" = round(sd(Internship), 1),
"Min Internship in teaching units" = min(Internship),
"Max Internship in teaching units" = max(Internship),
"Extracurricular Teaching Experience in percent" = round(sum(`Extracurricular Teaching Experience`/Gender_Sum) * 100, digits = 1),
"Secondary Teaching Activities in percent" = round(sum(`Secondary Teaching Activities`/Gender_Sum) * 100)
)
# format and insert table in manuscript
exp.table %>%
papaja::apa_table(
caption = "Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# read in data and select and rename relevant columns with transmute
demo.data <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(Group = LI06_05,
Gender = LI02_01_1,
Age = LI03_01,
`Teaching Experience` = LI04_01,
`Type of School` = LI18,
Grade = LI16_05,
Subject = LI10_05,
Semester = LI11_01,
Internship = LI13_01,
`Extracurricular Teaching Experience` = LI14,
`Secondary Teaching Activities` = LI17
)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender to count female gender (male = 2 --> 0)
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character Gender into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# changing character Semester into numeric
demo.data$Semester <- as.numeric(demo.data$Semester)
# creating new column with percent of gender
demo.data <- demo.data %>%
group_by(Group) %>%
mutate(Gender_Sum=n())
# changing `Extracurricular Teaching Experience` to count experience (no experience = 2 --> 0)
demo.data$`Extracurricular Teaching Experience` = ifelse(demo.data$`Extracurricular Teaching Experience` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Extracurricular Teaching Experience` <- as.numeric(demo.data$`Extracurricular Teaching Experience`)
# changing `Secondary Teaching Activities` to count experience (no experience = 2 --> 0)
demo.data$`Secondary Teaching Activities` = ifelse(demo.data$`Secondary Teaching Activities` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Secondary Teaching Activities` <- as.numeric(demo.data$`Secondary Teaching Activities`)
# create new columns that give proportion of Gender
# percent = female gender divided by all female Gender
# demo.data <- demo.data  %>%
#   group_by(Group) %>%
#   mutate(Gender_percent = Gender/Gender_Sum) %>%
#   mutate(Gender_percent = round(sum(Gender_percent)*100, digits=0))
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Gender female in percent" = round(sum(Gender/Gender_Sum) * 100, digits = 1),
"M Age in years" = round(mean(Age), 1),
"SD Age in years" = round(sd(Age), 1),
"Min Age in years" = min(Age),
"Max Age in years" = max(Age)
)
# format and insert table in manuscript
demo.table %>%
papaja::apa_table(
caption = "Demographic Information",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# create a basic table (tibble) using tidyverse functions
exp.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"M Exp. in years" = round(mean(`Teaching Experience`), 1),
"SD Exp. in years" = round(sd(`Teaching Experience`), 1),
"Min Exp. in years" = min(`Teaching Experience`),
"Max Exp. in years" = max(`Teaching Experience`),
"M Semester" = round(mean(Semester), 1),
"SD Semester" = round(sd(Semester), 1),
"Min Semester" = min(Semester),
"Max Semester" = max(Semester),
"M Internship in teaching units" = round(mean(Internship), 1),
"SD Internship in teaching units" = round(sd(Internship), 1),
"Min Internship in teaching units" = min(Internship),
"Max Internship in teaching units" = max(Internship),
"Extracurricular Teaching Experience in percent" = round(sum(`Extracurricular Teaching Experience`/Gender_Sum) * 100, digits = 1),
"Secondary Teaching Activities in percent" = round(sum(`Secondary Teaching Activities`/Gender_Sum) * 100)
)
# format and insert table in manuscript
exp.table %>%
papaja::apa_table(
caption = "Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# load packages
library(needs)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# remove NAs
df_sjt <- na.omit(df_sjt)
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
# define expert and novice with ifelse function
df_sjt_long$Group = ifelse(df_sjt_long$Group < 200, "Novice","Expert")
# plotting mean of all aspects
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_classic()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 14),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 25))
mean_plot
#################### MEAN, SD, N ############
# mean SJT ALL
sjt_mean <- df_sjt_long %>%
filter(`Facets Classroom Management` == "All") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Managing Momentum
sjt_mm <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Managing momentum") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Monitoring
sjt_m <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Monitoring") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Rules and routins
sjt_r <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Rules and routines") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
View(df_sjt)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
View(df_sjt)
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
View(df_sjt)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
View(df_sjt)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
View(df_sjt)
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
View(df_sjt)
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>%
select(UI06_05,
SJT_AL_gek,
SJT_ST_gek,
SJT_R_gek,
SJT_KF_gek)
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>%
select(UI06_05,
SJT_AL_gek,
SJT_ST_gek,
SJT_R_gek,
SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
View(df_sjt)
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>%
select(UI06_05,
SJT_AL_gek,
SJT_ST_gek,
SJT_R_gek,
SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
View(df_sjt)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>%
select(UI06_05,
SJT_AL_gek,
SJT_ST_gek,
SJT_R_gek,
SJT_KF_gek)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
