"M Semester" = round(mean(Semester), 1),
"SD Semester" = round(sd(Semester), 1),
"Min Semester" = min(Semester),
"Max Semester" = max(Semester),
"M Internship in teaching units" = round(mean(Internship), 1),
"SD Internship in teaching units" = round(sd(Internship), 1),
"Min Internship in teaching units" = min(Internship),
"Max Internship in teaching units" = max(Internship),
"Extracurricular Teaching Experience in percentage" = round(sum(`Extracurricular Teaching Experience`/Gender_Sum) * 100, digits = 1),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
View(demo.data)
demo.data$`Secondary Teaching Activities` = ifelse(demo.data$`Secondary Teaching Activities` == 1, "1","0")
View(demo.data)
demo.data$`Secondary Teaching Activities` <- as.numeric(demo.data$`Secondary Teaching Activities`)
View(demo.data)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Gender female in percentage" = round(sum(Gender/Gender_Sum) * 100, digits = 1),
"M Age in years" = round(mean(Age), 1),
"SD Age in years" = round(sd(Age), 1),
"Min Age in years" = min(Age),
"Max Age in years" = max(Age),
"M Exp. in years" = round(mean(`Teaching Experience`), 1),
"SD Exp. in years" = round(sd(`Teaching Experience`), 1),
"Min Exp. in years" = min(`Teaching Experience`),
"Max Exp. in years" = max(`Teaching Experience`),
"M Semester" = round(mean(Semester), 1),
"SD Semester" = round(sd(Semester), 1),
"Min Semester" = min(Semester),
"Max Semester" = max(Semester),
"M Internship in teaching units" = round(mean(Internship), 1),
"SD Internship in teaching units" = round(sd(Internship), 1),
"Min Internship in teaching units" = min(Internship),
"Max Internship in teaching units" = max(Internship),
"Extracurricular Teaching Experience in percentage" = round(sum(`Extracurricular Teaching Experience`/Gender_Sum) * 100, digits = 1),
"Secondary Teaching Activities in percentage" = round(sum(`Secondary Teaching Activities`/Gender_Sum) * 100)
)
View(demo.table)
View(demo.data)
View(demo.table)
View(demo.data)
View(quest.data)
# select relevant columns
quest.data <- quest.data %>% dplyr::select(LM01_01:LO01_02, LI06_05)
# rename columns
quest.data <- rename(quest.data, c("Group" = "LI06_05"))
# define expert and novice with ifelse function
quest.data$Group = ifelse(quest.data$Group < 200, "Novice","Expert")
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
colnames(quest.table) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","alpha")
# creating a loop
# i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
alpha$alpha
quest.table[i, "alpha"] <- round(alpha$alpha,2)
}
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
apa_table(
quest.table,
caption = "Scale analysis for teachers' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
apa_table
View(quest.data)
apa_table(
quest.table,
caption = "Scale analysis for teachers' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(quest.table)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot)
# if a package is not installed on the current machine, it will install it
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(papaja)) install.packages("papaja"); library(papaja)
if (!require(psych)) install.packages('psych'); library(psych) # stats
if (!require(moments)) install.packages('moments'); library(moments) # skewness & kurtosis
if (!require(sjPlot)) install.packages('sjPlot'); library(sjPlot) # item analysis of a scale or index
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# prepare data (selected from questionnaire data)
quest.raw.data<-read.table("./data/short_questionnaire_data_2701211.txt", dec=",", sep="\t", header=T)
# knock out NAs
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA")
# create a basic table (tibble) using tidyverse functions
demo.quest.table <- quest.raw.data %>%
filter(what == "head") %>%
group_by(group) %>%
summarise(N=n(),
"Male" = sum(gender),
"M age" = round(mean(age), 2),
"Min age" = min(age),
"Max age" = max(age),
"SD age" = round(sd(age), 2),
"M exp." = round(mean(experience), 2),
"Min exp." = min(experience),
"Max exp." = max(experience),
"SD exp." = round(sd(experience), 2),
)
# format and insert table in manuscript
apa_table(
demo.quest.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
knitr::include_graphics("./pictures/datacollection.png", dpi = 108)
# # How to insert images in papaja
# - pictures must be png
# - I created a pictures folder in the main folder, just dumb pictures there
# - you just need to hand the name and path of the picture to the knitr::: function (see above)
# - the dpi argument is for adjusting the size on the page in pixels
# in order to write the caption, you have to use the line just above the code chunk (ref:YOURTEXT-caption) and then just write behind it
# the code chunk then opens and after "r" it needs to provide a name for the code chunk, must be unique in the document
# the fig.cap = then calls the text from the line just above
# fig.align allows to position the pic on page, center ist probablby best
# echo = false ensures that the code chunk does not occur in the pdf
# Now, go and try putting your own images in the paper
#
# TIP = check line 46 in this manuscript. THis section ets global properties for how graphs are put in the paper.
#         if floatsintext      : yes  --> pics, graphs, tables will be put where the code chunk is
#         if floatsintext      : no   --> pics, graphs, tables will be put at the end as is required by some journals
# TIP: check the folder "papaja_example&tutorial" that I put in this folder for paper1
# Tip: make a bookmark of this and skim through it: http://frederikaust.com/papaja_man/
# prepare data (selected from questionnaire data) - only equal items and without observer
quest.raw.data<-read.table("./data/short_questionnaire_data_150221.txt", dec=",", sep="\t", header=T)
# knock out NAs and duration of speaking time
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA",
itemID != "8",
perspective == "self-assessment")
# value sometimes contained text before filtering, we have to convert the numbers to numeric
quest.raw.data <- quest.raw.data %>%  mutate(value = as.numeric(value))
##############################################
# calculate Cronbach's Alpha for each scale
# activation & support
self.as.wide <- quest.raw.data %>%
filter (scale == "Activation and support") %>%
select(shortID, value) %>%
group_by(shortID) %>%
mutate(id=row_number()) %>%
spread(shortID, value)
#clarity & structuredness
self.cs.wide <- quest.raw.data %>%
filter (scale == "Clarity and structuredness") %>%
select(shortID, value) %>%
group_by(shortID) %>%
mutate(id=row_number()) %>%
spread(shortID, value)
View(quest.data)
tab_itemscale(quest.data[,-1], show.shapiro = TRUE, show.kurtosis = TRUE)
quest.table <- quest.table %>% group_by(Group)
View(quest.table)
# splitting into two groups
quest.table <- quest.table %>% group_by(Group)
knitr::opts_chunk$set(include = FALSE)
library("papaja")
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot)
# load data files
quest.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns from first questionnaire
demo.data <- quest.data %>% dplyr::select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05,
LI10_05,
LI11_01,
LI13_01,
LI14,
LI18,
LI16_05,
LI17
)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01",
"Type of School" = "LI18",
"Grade" = "LI16_05",
"Subject" = "LI10_05",
"Semester" = "LI11_01",
"Internship" = "LI13_01",
"Extracurricular Teaching Experience" = "LI14",
"Secondary Teaching Activities" = "LI17"
))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender to count female gender (male = 2 --> 0)
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character Gender into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# changing character Semester into numeric
demo.data$Semester <- as.numeric(demo.data$Semester)
# creating new column with percentage of gender
demo.data <- demo.data %>%
group_by(Group) %>%
mutate(Gender_Sum=n())
# changing `Extracurricular Teaching Experience` to count experience (no experience = 2 --> 0)
demo.data$`Extracurricular Teaching Experience` = ifelse(demo.data$`Extracurricular Teaching Experience` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Extracurricular Teaching Experience` <- as.numeric(demo.data$`Extracurricular Teaching Experience`)
# changing `Secondary Teaching Activities` to count experience (no experience = 2 --> 0)
demo.data$`Secondary Teaching Activities` = ifelse(demo.data$`Secondary Teaching Activities` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Secondary Teaching Activities` <- as.numeric(demo.data$`Secondary Teaching Activities`)
# create new columns that give proportion of Gender
# percentage = female gender divided by all female Gender
# demo.data <- demo.data  %>%
#   group_by(Group) %>%
#   mutate(Gender_percentage = Gender/Gender_Sum) %>%
#   mutate(Gender_percentage = round(sum(Gender_percentage)*100, digits=0))
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Gender female in percentage" = round(sum(Gender/Gender_Sum) * 100, digits = 1),
"M Age in years" = round(mean(Age), 1),
"SD Age in years" = round(sd(Age), 1),
"Min Age in years" = min(Age),
"Max Age in years" = max(Age),
"M Exp. in years" = round(mean(`Teaching Experience`), 1),
"SD Exp. in years" = round(sd(`Teaching Experience`), 1),
"Min Exp. in years" = min(`Teaching Experience`),
"Max Exp. in years" = max(`Teaching Experience`),
"M Semester" = round(mean(Semester), 1),
"SD Semester" = round(sd(Semester), 1),
"Min Semester" = min(Semester),
"Max Semester" = max(Semester),
"M Internship in teaching units" = round(mean(Internship), 1),
"SD Internship in teaching units" = round(sd(Internship), 1),
"Min Internship in teaching units" = min(Internship),
"Max Internship in teaching units" = max(Internship),
"Extracurricular Teaching Experience in percentage" = round(sum(`Extracurricular Teaching Experience`/Gender_Sum) * 100, digits = 1),
"Secondary Teaching Activities in percentage" = round(sum(`Secondary Teaching Activities`/Gender_Sum) * 100)
)
# format and insert table in manuscript
demo.table %>%
apa_table(
format = "latex",
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
knitr::include_graphics("./pictures/tobiiglasses2.png", dpi = 108)
knitr::include_graphics("./pictures/teachergazepoint.png", dpi = 108)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra)
kable(
x = demo.table,
format = "latex",
booktabs = TRUE
)
kable(
x = demo.table,
format = "latex",
booktabs = TRUE
)
something <-
kable(
x = demo.table,
format = "latex",
booktabs = TRUE
)
kable(
x = demo.table,
format = "latex",
booktabs = TRUE
)
rm(something)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable)
demo.table %>%
table()
demo.table %>%
as.matrix() %>%
table()
quest.table %>%
as.matrix() %>%
table()
# select relevant columns
quest.data <- quest.data %>% dplyr::select(LM01_01:LO01_02, LI06_05)
# rename columns
quest.data <- rename(quest.data, c("Group" = "LI06_05"))
# define expert and novice with ifelse function
quest.data$Group = ifelse(quest.data$Group < 200, "Novice","Expert")
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
colnames(quest.table) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","alpha")
# creating a loop
# i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
alpha$alpha
quest.table[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table,
caption = "Scale analysis for teachers' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
something2 <-
quest.table %>%
as.matrix() %>%
table() %>%
xtable()
# item analysis of a scale or index using the tab_itemscale() function of the sjPlot package
# Classroom Management
quest.table %>%
as.matrix() %>%
table()
View(quest.table)
quest.table %>%
table()
quest.table %>%
table() %>%
xtable()
quest.table %>%
xtable()
print(something2)
?apa_table
?apa_table.data.frame
