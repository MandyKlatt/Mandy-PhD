category_table
##################### NUMBER OF FIXATION ON AOI DISRUPTIVE PERSON ########################
# Define disruptions and categories
disruptions <- c("Chatting_with_neighbour", "Clicking_pen", "Drawing",
"Drumming_with_hands", "Head_on_table", "Heckling",
"Looking_at_phone", "Snipping_with_fingers", "Whispering")
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Filter and prepare data
df_aoi_disrup <- df_aoi %>%
filter(TOI %in% disruptions) %>%
dplyr::select(Group, Participant, TOI, Duration_of_interval,
"Number_of_fixations.Disruptive_Person") %>%
mutate(
Group = as_factor(Group),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
),
Duration_of_interval_sec = Duration_of_interval / 1000
) %>%
filter(!is.na(Disruption_Category))
# Summarize data
disruption_summary <- df_aoi_disrup %>%
group_by(Group, Participant, Disruption_Category) %>%
summarize(
total_duration_sec = sum(Duration_of_interval_sec, na.rm = TRUE),
fixation_count = sum(`Number_of_fixations.Disruptive_Person`, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(fixations_per_second = fixation_count / total_duration_sec)
# Individual-level aggregation
individual_summary <- disruption_summary %>%
group_by(Group, Participant) %>%
summarize(
mean_fixations_per_second = mean(fixations_per_second, na.rm = TRUE),
.groups = "drop"
)
# 1. APA-Conform Table: Overall Fixation Rate
overall_stats <- individual_summary %>%
group_by(Group) %>%
summarise(
N = n(),
M = round(mean(mean_fixations_per_second, na.rm = TRUE), 2),
SD = round(sd(mean_fixations_per_second, na.rm = TRUE), 2),
Min = round(min(mean_fixations_per_second, na.rm = TRUE), 2),
Max = round(max(mean_fixations_per_second, na.rm = TRUE), 2)
)
# Render table for overall fixation rate
overall_table <- knitr::kable(
overall_stats,
caption = "Descriptive Statistics for Overall Fixation Rate (AOI Disruptive Person)",
col.names = c("Group", "N", "M", "SD", "Min", "Max")
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Display overall table
overall_table
# 2. APA-Conform Table: Fixation Rate by Category Clustered by Disruption Category
category_stats <- disruption_summary %>%
group_by(Disruption_Category, Group) %>%  # Group by category first, then by group
summarise(
N = n(),
M = round(mean(fixations_per_second, na.rm = TRUE), 2),
SD = round(sd(fixations_per_second, na.rm = TRUE), 2),
Min = round(min(fixations_per_second, na.rm = TRUE), 2),
Max = round(max(fixations_per_second, na.rm = TRUE), 2),
.groups = "drop"  # Ungroup after summarization
)
# Render the table clustered by Disruption Categories
category_table <- knitr::kable(
category_stats,
caption = "Descriptive Statistics for Fixation Rate by Disruption Category (AOI Disruptive Person)",
col.names = c("Disruption Category", "Group", "N", "M", "SD", "Min", "Max")
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
kableExtra::group_rows(
index = table(category_stats$Disruption_Category)  # Automatically cluster by category
)
# Display the clustered category-specific table
category_table
# 3. Plot: Overall Fixation Rate
plot_overall <- individual_summary %>%
ggplot(mapping = aes(x = Group, y = mean_fixations_per_second)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim (0, 1) +
labs(x = "", y = "Mean Fixations per Second per Participant") +
ggtitle("Overall Fixation Rate per Participant\n(AOI disruptive person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(legend.position = "none")
# 4. Plot: Fixation Rate by Disruption Category
plot_category <- disruption_summary %>%
ggplot(mapping = aes(x = Group, y = fixations_per_second, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) + # Wrap long facet labels
labs(x = "", y = "Fixations per Second") +
ggtitle("Fixation Rate by Disruption Category\n(AOI disruptive person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(
legend.position = "none",
strip.text = element_text(size = 10) # Adjust facet text size if necessary
)
# Display plots
plot_overall
plot_category
# Step 5: Statistical Tests by Category
category_results <- list()
for (category in unique(df_ttff_disrup$Disruption_Category)) {
cat_data <- df_ttff_disrup %>% filter(Disruption_Category == category)
t_cat <- t.test(Disrup_time_fixation_sec ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(Disrup_time_fixation_sec ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single table
category_stats <- do.call(rbind, category_results)
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 5: Statistical Tests by Category
category_results <- list()
for (category in unique(disruption_summary$Disruption_Category)) {
cat_data <- disruption_summary %>% filter(Disruption_Category == category)
t_cat <- t.test(fixations_per_second ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(fixations_per_second ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single data frame
category_stats <- do.call(rbind, lapply(category_results, function(x) {
names(x) <- c("Group Comparison", "Disruption Category", "t-value", "df",
"p-value", "Mean Difference", "Cohen's d", "95% CI (d)")
return(x)
}))
# Render the table
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Fixation Rate by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 5: Statistical Tests by Category
category_results <- list()
for (category in unique(disruption_summary$Disruption_Category)) {
cat_data <- disruption_summary %>% filter(Disruption_Category == category)
t_cat <- t.test(fixations_per_second ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(fixations_per_second ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single data frame and include Disruption Category
category_stats <- do.call(rbind, lapply(names(category_results), function(cat) {
result <- category_results[[cat]]
result$Disruption_Category <- cat  # Add Disruption Category as a column
return(result)
}))
# Remove redundant Disruption Category column from the table
category_stats <- category_stats %>%
relocate(Disruption_Category) %>%
arrange(Disruption_Category) %>%  # Ensure proper order by category
select(-Disruption_Category)  # Drop the column after adding grouping below
# Render the table with grouped rows
knitr::kable(
category_stats,
caption = "t-Test and Effect Size for Fixation Rate by Disruption Category",
col.names = c("Group Comparison", "t-value", "df", "p-value", "Mean Difference", "Cohen's d", "95% CI (d)")
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
kableExtra::group_rows(
group_label = "**Lack of eagerness to learn**",
start_row = 1,
end_row = 1
) %>%
kableExtra::group_rows(
group_label = "**Physical disruptions**",
start_row = 2,
end_row = 2
) %>%
kableExtra::group_rows(
group_label = "**Verbal disruptions**",
start_row = 3,
end_row = 3
)
# Render the table with grouped rows
knitr::kable(
category_stats,
caption = "t-Test and Effect Size for Fixation Rate by Disruption Category",
col.names = c("Group Comparison", "t-value", "df", "p-value", "Mean Difference", "Cohen's d", "95% CI (d)")
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
kableExtra::group_rows(
group_label = "Lack of eagerness to learn",
start_row = 1,
end_row = 1
) %>%
kableExtra::group_rows(
group_label = "Physical disruptions",
start_row = 2,
end_row = 2
) %>%
kableExtra::group_rows(
group_label = "Verbal disruptions",
start_row = 3,
end_row = 3
)
# Step 1: Define AOI categories with correct column names for fixation duration
aoi_columns <- list(
"AOI_Students" = c(
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)"
),
"AOI_Disruptive_Person" = c("Total_duration_of_fixations.Disruptive_Person"),
"AOI_Teacher_Material" = c(
"Total_duration_of_fixations.Board_Screen",
"Total_duration_of_fixations.Material_Teacher"
),
"AOI_Student_Desk" = c(
"Total_duration_of_fixations.Nametag_Anna",
"Total_duration_of_fixations.Nametag_Bianca",
"Total_duration_of_fixations.Nametag_Carl(a)",
"Total_duration_of_fixations.Material_Students"
),
"AOI_Classroom_Others" = c("Total_duration_of_fixations.Classroom_Others")
)
# Step 2: Filter data for "Lesson" and select relevant columns for fixation duration
df_durations <- df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant, Group, starts_with("Total_duration_of_fixations"))
# Step 3: Calculate total fixation duration per participant, excluding "Disruptive Person"
relevant_columns <- unlist(aoi_columns[c("AOI_Students", "AOI_Teacher_Material", "AOI_Student_Desk", "AOI_Classroom_Others")])
df_durations <- df_durations %>%
mutate(Total_duration_excluding_disruptive = rowSums(across(all_of(relevant_columns)), na.rm = TRUE))
# Step 4: Calculate fixation duration percentages for each AOI based on the adjusted total duration
aoi_durations_percentages <- df_durations %>%
rowwise() %>%
mutate(
AOI_Students_pct = sum(c_across(any_of(aoi_columns$AOI_Students)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100,
AOI_Disruptive_Person_pct = sum(c_across(any_of(aoi_columns$AOI_Disruptive_Person)), na.rm = TRUE) / (
Total_duration_excluding_disruptive + sum(c_across(any_of(aoi_columns$AOI_Disruptive_Person)), na.rm = TRUE)
) * 100,
AOI_Teacher_Material_pct = sum(c_across(any_of(aoi_columns$AOI_Teacher_Material)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100,
AOI_Student_Desk_pct = sum(c_across(any_of(aoi_columns$AOI_Student_Desk)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100,
AOI_Classroom_Others_pct = sum(c_across(any_of(aoi_columns$AOI_Classroom_Others)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100
) %>%
ungroup()
# Step 5: Summarize fixation duration percentages by Group and arrange in descending order
grouped_aoi_durations_percentages <- aoi_durations_percentages %>%
group_by(Group) %>%
summarise(
Mean_AOI_Students_pct = round(mean(AOI_Students_pct, na.rm = TRUE), 2),
Mean_AOI_Disruptive_Person_pct = round(mean(AOI_Disruptive_Person_pct, na.rm = TRUE), 2),
Mean_AOI_Teacher_Material_pct = round(mean(AOI_Teacher_Material_pct, na.rm = TRUE), 2),
Mean_AOI_Student_Desk_pct = round(mean(AOI_Student_Desk_pct, na.rm = TRUE), 2),
Mean_AOI_Classroom_Others_pct = round(mean(AOI_Classroom_Others_pct, na.rm = TRUE), 2)
) %>%
pivot_longer(cols = starts_with("Mean_AOI"), names_to = "AOI", values_to = "Duration_Percentage") %>%
mutate(AOI = recode(AOI,
"Mean_AOI_Students_pct" = "Students",
"Mean_AOI_Disruptive_Person_pct" = "Disruptive Person",
"Mean_AOI_Teacher_Material_pct" = "Teacher Material",
"Mean_AOI_Student_Desk_pct" = "Student Desk",
"Mean_AOI_Classroom_Others_pct" = "Classroom/Others")) %>%
arrange(Group, desc(Duration_Percentage))
# Step 6: Plot the fixation duration percentages by AOI and Group
ggplot(grouped_aoi_durations_percentages, aes(x = reorder(AOI, -Duration_Percentage), y = Duration_Percentage, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0(Duration_Percentage, "%")),
position = position_dodge(width = 0.8),
vjust = -0.3, size = 3) +
labs(
title = "Total Fixation Duration Percentage by AOI and Group (Descending Order)",
x = "AOI",
y = "Fixation Duration Percentage (%)"
) +
scale_fill_brewer(palette = "RdBu") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
guides(fill = guide_legend(title = "Group")) +
ylim(0, 100)  # Set y-axis limit to 100%
# Step 7: Perform a t-test between Experts and Novices on the duration percentages and calculate Cohen's d
aoi_list <- c("AOI_Students_pct", "AOI_Disruptive_Person_pct", "AOI_Teacher_Material_pct", "AOI_Student_Desk_pct", "AOI_Classroom_Others_pct")
results <- data.frame()
for (column_name in aoi_list) {
if (column_name %in% names(aoi_durations_percentages)) {
aoi_data <- aoi_durations_percentages %>%
select(Group, !!sym(column_name)) %>%
rename(Duration_Percentage = !!sym(column_name))
expert_data <- aoi_data$Duration_Percentage[aoi_data$Group == "Expert"]
novice_data <- aoi_data$Duration_Percentage[aoi_data$Group == "Novice"]
if (length(expert_data) > 0 && length(novice_data) > 0) {
t_test_result <- t.test(expert_data, novice_data, var.equal = TRUE)
cohen_d_value <- cohen.d(expert_data, novice_data, pooled = TRUE)$estimate
results <- rbind(
results,
data.frame(
"AOI" = gsub("_pct", "", column_name),
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_result$statistic, 2),
"df" = t_test_result$parameter,
"p-value" = format.pval(t_test_result$p.value, digits = 3, eps = .001),
"Mean Difference" = round(t_test_result$estimate[1] - t_test_result$estimate[2], 2),
"Cohen's d" = round(cohen_d_value, 2),
"95% CI (d)" = paste0("[", round(t_test_result$conf.int[1], 2), ", ", round(t_test_result$conf.int[2], 2), "]")
)
)
} else {
results <- rbind(
results,
data.frame(
"AOI" = gsub("_pct", "", column_name),
"Group Comparison" = "Experts vs. Novices",
"t-value" = NA,
"df" = NA,
"p-value" = NA,
"Mean Difference" = NA,
"Cohen's d" = NA,
"95% CI (d)" = NA
)
)
}
}
}
# Map AOI names to clean versions for readability in the final results table
results$AOI <- recode(results$AOI,
"AOI_Students" = "Students",
"AOI_Disruptive_Person" = "Disruptive Person",
"AOI_Teacher_Material" = "Teacher Material",
"AOI_Student_Desk" = "Student Desk",
"AOI_Classroom_Others" = "Classroom/Others")
# Display the t-Test and Effect Size table in APA style
knitr::kable(results,
caption = "t-Test and Effect Size for Fixation Duration Percentage across AOIs (Experts vs. Novices)",
row.names = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
View(overall_stats)
# Define the different types of disruptions and categories
disruptions <- c("Chatting_with_neighbour", "Clicking_pen", "Drawing",
"Drumming_with_hands", "Head_on_table", "Heckling",
"Looking_at_phone", "Snipping_with_fingers", "Whispering")
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Filter and prepare the data
df_aoi_disrup <- df_aoi %>%
filter(TOI %in% disruptions) %>% # Filter rows based on the disruption list
select(Group, Participant, TOI, Duration_of_interval, "Number_of_fixations.Disruptive_Person") %>%
mutate(
Group = as_factor(Group), # Convert Group column to a factor
Disruption_Category = case_when( # Assign categories based on disruption type
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
),
Duration_of_interval_sec = round(Duration_of_interval / 1000, 2) # Convert duration to seconds
) %>%
filter(!is.na(Disruption_Category)) # Keep only rows with valid categories
View(df_aoi_disrup)
# Step 2: Summarize data by disruption category
disruption_summary <- df_aoi_disrup %>%
group_by(Group, Participant, Disruption_Category) %>%
summarise(
total_duration_sec = round(sum(Duration_of_interval_sec, na.rm = TRUE), 2), # Total time in seconds
fixation_count = round(sum(`Number_of_fixations.Disruptive_Person`, na.rm = TRUE), 2), # Total fixations
fixations_per_second = round(fixation_count / total_duration_sec, 2), # Fixation rate per second
.groups = "drop"
)
View(disruption_summary)
# Step 3: Summarize by participant
individual_summary <- disruption_summary %>%
group_by(Group, Participant) %>%
summarise(
mean_fixations_per_second = round(mean(fixations_per_second, na.rm = TRUE), 2), # Mean fixation rate
.groups = "drop"
)
View(individual_summary)
##################### AVERAGE DURATION ON AOI DISRUPTIVE PERSON ########################
# 1. Data Preparation: Filter and Calculate Average Duration of Fixations on AOI Disruptive Person
df_aoi_disrup <- df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(
Group,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
mutate(
Group = as_factor(Group),
Average_duration_disrup = round(Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person, 2) # In milliseconds
) %>%
drop_na()
# 2. Descriptive Statistics Table
dur_disrup_table <- df_aoi_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in ms" = round(mean(Average_duration_disrup, na.rm = TRUE), 2),
"SD in ms" = round(sd(Average_duration_disrup, na.rm = TRUE), 2),
"Min in ms" = round(min(Average_duration_disrup, na.rm = TRUE), 2),
"Max in ms" = round(max(Average_duration_disrup, na.rm = TRUE), 2)
)
# Display the descriptive table in APA style
knitr::kable(dur_disrup_table,
caption = "N, M, SD, Min & Max Average Duration of Fixations in Milliseconds (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# 3. Plotting Average Duration on AOI Disruptive Person
# Calculate values for annotation
mean_novice_disrup <- round(mean(df_aoi_disrup$Average_duration_disrup[df_aoi_disrup$Group == "Novice"], na.rm = TRUE), 2)
sd_novice_disrup <- round(sd(df_aoi_disrup$Average_duration_disrup[df_aoi_disrup$Group == "Novice"], na.rm = TRUE), 2)
mean_expert_disrup <- round(mean(df_aoi_disrup$Average_duration_disrup[df_aoi_disrup$Group == "Expert"], na.rm = TRUE), 2)
sd_expert_disrup <- round(sd(df_aoi_disrup$Average_duration_disrup[df_aoi_disrup$Group == "Expert"], na.rm = TRUE), 2)
# Maximum y-axis value for plot
y_max_disrup <- max(df_aoi_disrup$Average_duration_disrup, na.rm = TRUE) * 1.2
# Conduct t-test
t_test_disrup <- t.test(
Average_duration_disrup ~ Group,
data = df_aoi_disrup,
var.equal = TRUE
)
# Extract p-value
p_value_disrup <- round(t_test_disrup$p.value, 3)
# Calculate Cohen's d (full result object)
d_dur_disrup_full <- cohen.d(Average_duration_disrup ~ Group, data = df_aoi_disrup, pooled = TRUE)
# Extract Cohen's d and confidence interval
d_dur_disrup <- round(d_dur_disrup_full$estimate, 2)
d_conf_int_disrup <- paste0("[", round(d_dur_disrup_full$conf.int[1], 2), ", ", round(d_dur_disrup_full$conf.int[2], 2), "]")
# Annotated Plot
plot_average_duration_disrup <- df_aoi_disrup %>%
ggplot(mapping = aes(x = Group, y = Average_duration_disrup)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA, width = 0.5) +
geom_jitter(
width = 0.15, height = 0.1, alpha = 0.5, color = "black", size = 1.5
) +
ylim(0, y_max_disrup) +
labs(x = "", y = "Milliseconds") +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Average Duration of Fixations\n(AOI Disruptive Person)") +
theme_cowplot() +
theme(legend.position = "none") +
# Annotate mean (M) and SD
annotate("text", x = 1, y = y_max_disrup * 0.85,
label = paste0("atop(italic(M) == ", mean_novice_disrup, ", italic(SD) == ", sd_novice_disrup, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
annotate("text", x = 2, y = y_max_disrup * 0.85,
label = paste0("atop(italic(M) == ", mean_expert_disrup, ", italic(SD) == ", sd_expert_disrup, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
# Annotate p-value and Cohen's d
annotate("text", x = 1.5, y = y_max_disrup * 0.95,
label = paste0("p = ", p_value_disrup, "\nd = ", d_dur_disrup),
hjust = 0.5, size = 4, fontface = "italic")
plot_average_duration_disrup
# 4. t-Test and Effect Size Results Table
t_test_disrup_result <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_disrup$statistic, 2),
"df" = t_test_disrup$parameter,
"p-value" = round(t_test_disrup$p.value, 3),
"Mean Difference" = round(t_test_disrup$estimate[1] - t_test_disrup$estimate[2], 2),
"Cohen's d" = d_dur_disrup,
"95% CI (d)" = d_conf_int_disrup
)
# Display the t-Test and Effect Size results table in APA style
knitr::kable(t_test_disrup_result,
caption = "t-Test and Effect Size for Average Fixation Duration on AOI Disruptive Person (milliseconds)",
row.names = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
