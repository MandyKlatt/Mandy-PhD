kable(
category_stats,
caption = "Descriptive Statistics (N, Mean, SD, Min, Max) for Fixation Rate by Group and Category",
col.names = c("Group", "Category", "N", "M", "SD", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### PLOTS ########################
# Calculate values for annotations
mean_novice <- round(mean(individual_summary$mean_fixations_per_second[individual_summary$Group == "Novice"], na.rm = TRUE), 2)
sd_novice <- round(sd(individual_summary$mean_fixations_per_second[individual_summary$Group == "Novice"], na.rm = TRUE), 2)
mean_expert <- round(mean(individual_summary$mean_fixations_per_second[individual_summary$Group == "Expert"], na.rm = TRUE), 2)
sd_expert <- round(sd(individual_summary$mean_fixations_per_second[individual_summary$Group == "Expert"], na.rm = TRUE), 2)
# t-Test and effect size
t_test <- t.test(mean_fixations_per_second ~ Group, data = individual_summary, var.equal = TRUE)
p_value <- round(t_test$p.value, 3)
cohen_d <- round(cohen.d(mean_fixations_per_second ~ Group, data = individual_summary)$estimate, 2)
# Overall fixation rate plot with annotations
y_max_overall <- max(individual_summary$mean_fixations_per_second, na.rm = TRUE) * 1.5
plot_overall <- ggplot(individual_summary, aes(x = Group, y = mean_fixations_per_second, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.1, alpha = 0.7, color = "black", size = 1.5) +
labs(x = "", y = "Mean Fixations per Second per Participant") +
ggtitle("Overall Fixation Rate per Participant\n(AOI Disruptive Person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
ylim(0, y_max_overall) +
theme(legend.position = "none") +
annotate("text", x = 1, y = y_max_overall * 0.85,
label = paste0("M = ", mean_novice, "\nSD = ", sd_novice),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = y_max_overall * 0.85,
label = paste0("M = ", mean_expert, "\nSD = ", sd_expert),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 1.5, y = y_max_overall * 0.95,
label = paste0("p = ", p_value, "\nd = ", cohen_d),
hjust = 0.5, size = 4, fontface = "italic")
##################### STATISTICAL TESTS ########################
# Table summarizing overall t-test and Cohen's d
overall_effect <- data.frame(
Group = c("Overall"),
`t-value` = round(t_test$statistic, 2),
`p-value` = p_value,
`Cohen's d` = cohen_d
)
# Display t-test and effect size table
kable(
overall_effect,
caption = "Overall t-Test and Effect Size for Fixation Rate",
col.names = c("Group", "t-value", "p-value", "Cohen's d"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
y_max_overall
plot_overall
# First Plot: Overall fixation rate by Group (using aggregated individual data)
plot_overall <- individual_summary %>%
ggplot(mapping = aes(x = Group, y = mean_fixations_per_second)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim (0, 1) +
labs(x = "", y = "Mean Fixations per Second per Participant") +
ggtitle("Overall Fixation Rate per Participant\n(AOI disruptive person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(legend.position = "none")
# Second Plot: Fixation rate by Group and Disruption_Category (no aggregation, shows all data points)
plot_category <- disruption_summary %>%
ggplot(mapping = aes(x = Group, y = fixations_per_second, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) + # Wrap long facet labels
labs(x = "", y = "Fixations per Second") +
ggtitle("Fixation Rate by Disruption Category\n(AOI disruptive person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(
legend.position = "none",
strip.text = element_text(size = 10) # Adjust facet text size if necessary
)
# Display both plots
plot_overall
plot_category
##################### NUMBER OF FIXATIONS ON AOI DISRUPTIVE PERSON ########################
# Define the different types of disruptions and categories
disruptions <- c("Chatting_with_neighbour", "Clicking_pen", "Drawing",
"Drumming_with_hands", "Head_on_table", "Heckling",
"Looking_at_phone", "Snipping_with_fingers", "Whispering")
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Filter and prepare the data
df_aoi_disrup <- df_aoi %>%
filter(TOI %in% disruptions) %>% # Filter rows based on the disruption list
select(Group, Participant, TOI, Duration_of_interval, "Number_of_fixations.Disruptive_Person") %>%
mutate(
Group = as_factor(Group), # Convert Group column to a factor
Disruption_Category = case_when( # Assign categories based on disruption type
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
),
Duration_of_interval_sec = round(Duration_of_interval / 1000, 2) # Convert duration to seconds
) %>%
filter(!is.na(Disruption_Category)) # Keep only rows with valid categories
# Step 2: Summarize data by disruption category
disruption_summary <- df_aoi_disrup %>%
group_by(Group, Participant, Disruption_Category) %>%
summarise(
total_duration_sec = round(sum(Duration_of_interval_sec, na.rm = TRUE), 2), # Total time in seconds
fixation_count = round(sum(`Number_of_fixations.Disruptive_Person`, na.rm = TRUE), 2), # Total fixations
fixations_per_second = round(fixation_count / total_duration_sec, 2), # Fixation rate per second
.groups = "drop"
)
# Step 3: Summarize by participant
individual_summary <- disruption_summary %>%
group_by(Group, Participant) %>%
summarise(
mean_fixations_per_second = round(mean(fixations_per_second, na.rm = TRUE), 2), # Mean fixation rate
.groups = "drop"
)
##################### DESCRIPTIVE STATISTICS ########################
# Descriptive statistics for overall fixation rate
overall_stats <- individual_summary %>%
group_by(Group) %>%
summarise(
N = n(), # Number of participants
Mean = round(mean(mean_fixations_per_second, na.rm = TRUE), 2), # Mean fixation rate
SD = round(sd(mean_fixations_per_second, na.rm = TRUE), 2), # Standard deviation
Min = round(min(mean_fixations_per_second, na.rm = TRUE), 2), # Minimum value
Max = round(max(mean_fixations_per_second, na.rm = TRUE), 2), # Maximum value
.groups = "drop"
)
# Display the overall descriptive statistics table
kable(
overall_stats,
caption = "Descriptive Statistics (N, Mean, SD, Min, Max) for Overall Fixation Rate by Group",
col.names = c("Group", "N", "M", "SD", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Descriptive statistics by disruption category
category_stats <- disruption_summary %>%
group_by(Group, Disruption_Category) %>%
summarise(
N = n(), # Number of data points
Mean = round(mean(fixations_per_second, na.rm = TRUE), 2), # Mean fixation rate
SD = round(sd(fixations_per_second, na.rm = TRUE), 2), # Standard deviation
Min = round(min(fixations_per_second, na.rm = TRUE), 2), # Minimum value
Max = round(max(fixations_per_second, na.rm = TRUE), 2), # Maximum value
.groups = "drop"
)
# Display the descriptive statistics table by category
kable(
category_stats,
caption = "Descriptive Statistics (N, Mean, SD, Min, Max) for Fixation Rate by Group and Category",
col.names = c("Group", "Category", "N", "M", "SD", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### PLOTS ########################
##################### FIRST PLOT: FIXATION RATE OVERALL ########################
# Calculate values for annotations
mean_novice <- round(mean(individual_summary$mean_fixations_per_second[individual_summary$Group == "Novice"], na.rm = TRUE), 2)
sd_novice <- round(sd(individual_summary$mean_fixations_per_second[individual_summary$Group == "Novice"], na.rm = TRUE), 2)
mean_expert <- round(mean(individual_summary$mean_fixations_per_second[individual_summary$Group == "Expert"], na.rm = TRUE), 2)
sd_expert <- round(sd(individual_summary$mean_fixations_per_second[individual_summary$Group == "Expert"], na.rm = TRUE), 2)
# t-Test and effect size
t_test <- t.test(mean_fixations_per_second ~ Group, data = individual_summary, var.equal = TRUE)
p_value <- round(t_test$p.value, 3)
cohen_d <- round(cohen.d(mean_fixations_per_second ~ Group, data = individual_summary)$estimate, 2)
# Overall fixation rate plot with annotations
y_max_overall <- max(individual_summary$mean_fixations_per_second, na.rm = TRUE) * 1.5
plot_overall <- ggplot(individual_summary, aes(x = Group, y = mean_fixations_per_second, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.1, alpha = 0.7, color = "black", size = 1.5) +
labs(x = "", y = "Mean Fixations per Second per Participant") +
ggtitle("Overall Fixation Rate per Participant\n(AOI Disruptive Person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
ylim(0, y_max_overall) +
theme(legend.position = "none") +
annotate("text", x = 1, y = y_max_overall * 0.85,
label = paste0("M = ", mean_novice, "\nSD = ", sd_novice),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = y_max_overall * 0.85,
label = paste0("M = ", mean_expert, "\nSD = ", sd_expert),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 1.5, y = y_max_overall * 0.95,
label = paste0("p = ", p_value, "\nd = ", cohen_d),
hjust = 0.5, size = 4, fontface = "italic")
##################### SECOND PLOT: FIXATION RATE BY CATEGORY ########################
# Calculate metrics (mean, SD, p, d) by Disruption_Category and Group
category_stats_with_tests <- disruption_summary %>%
group_by(Disruption_Category) %>%
summarise(
M_Novice = round(mean(fixations_per_second[Group == "Novice"], na.rm = TRUE), 2),
SD_Novice = round(sd(fixations_per_second[Group == "Novice"], na.rm = TRUE), 2),
M_Expert = round(mean(fixations_per_second[Group == "Expert"], na.rm = TRUE), 2),
SD_Expert = round(sd(fixations_per_second[Group == "Expert"], na.rm = TRUE), 2),
p_value = round(t.test(fixations_per_second ~ Group, var.equal = TRUE)$p.value, 3),
cohen_d = round(cohen.d(fixations_per_second ~ Group)$estimate, 2),
.groups = "drop"
)
# Create annotations for each category
annotation_labels <- category_stats_with_tests %>%
mutate(
label = paste0(
"M (N) = ", M_Novice, ", SD (N) = ", SD_Novice, "\n",
"M (E) = ", M_Expert, ", SD (E) = ", SD_Expert, "\n",
"p = ", p_value, ", d = ", cohen_d
)
) %>%
select(Disruption_Category, label)
# Join annotations with the data
disruption_summary_annotated <- disruption_summary %>%
left_join(annotation_labels, by = "Disruption_Category")
# Plot with facets and annotations
plot_category <- disruption_summary_annotated %>%
ggplot(mapping = aes(x = Group, y = fixations_per_second, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) + # Wrap long facet labels
labs(x = "", y = "Fixations per Second") +
ggtitle("Fixation Rate by Disruption Category\n(AOI disruptive person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(
legend.position = "none",
strip.text = element_text(size = 10) # Adjust facet text size if necessary
) +
geom_text(
data = disruption_summary_annotated %>%
distinct(Disruption_Category, label) %>%
mutate(Group = "Novice", fixations_per_second = 0), # Position annotations
aes(label = label),
inherit.aes = FALSE,
x = 1.5, y = 1.1 * max(disruption_summary$fixations_per_second, na.rm = TRUE),
size = 3, hjust = 0.5, vjust = 1
)
# Display the both plots
plot_overall
plot_category
##################### STATISTICAL TESTS ########################
# Table summarizing overall t-test and Cohen's d
overall_effect <- data.frame(
Group = c("Overall"),
`t-value` = round(t_test$statistic, 2),
`p-value` = p_value,
`Cohen's d` = cohen_d
)
# Display t-test and effect size table
kable(
overall_effect,
caption = "Overall t-Test and Effect Size for Fixation Rate",
col.names = c("Group", "t-value", "p-value", "Cohen's d"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Calculate metrics (mean, SD, p, d) by Disruption_Category and Group
category_stats_with_tests <- disruption_summary %>%
group_by(Disruption_Category) %>%
summarise(
M_Novice = round(mean(fixations_per_second[Group == "Novice"], na.rm = TRUE), 2),
SD_Novice = round(sd(fixations_per_second[Group == "Novice"], na.rm = TRUE), 2),
M_Expert = round(mean(fixations_per_second[Group == "Expert"], na.rm = TRUE), 2),
SD_Expert = round(sd(fixations_per_second[Group == "Expert"], na.rm = TRUE), 2),
t_test = list(t.test(fixations_per_second ~ Group, var.equal = TRUE)), # Perform t-test
p_value = round(t.test(fixations_per_second ~ Group, var.equal = TRUE)$p.value, 3),
cohen_d = round(cohen.d(fixations_per_second ~ Group)$estimate, 2),
.groups = "drop"
) %>%
mutate(
label = paste0(
"M (N) = ", M_Novice, ", SD (N) = ", SD_Novice, "\n",
"M (E) = ", M_Expert, ", SD (E) = ", SD_Expert, "\n",
"p = ", p_value, ", d = ", cohen_d
)
)
# Join annotation labels with the main dataset
disruption_summary_annotated <- disruption_summary %>%
left_join(category_stats_with_tests %>% select(Disruption_Category, label), by = "Disruption_Category")
# Determine y-axis max value for each category for better placement of annotations
y_max_by_category <- disruption_summary %>%
group_by(Disruption_Category) %>%
summarise(y_max = max(fixations_per_second, na.rm = TRUE) * 1.1, .groups = "drop")
# Merge y_max values into the dataset for consistent annotation placement
disruption_summary_annotated <- disruption_summary_annotated %>%
left_join(y_max_by_category, by = "Disruption_Category")
# Plot with facets and annotations
plot_category <- disruption_summary_annotated %>%
ggplot(mapping = aes(x = Group, y = fixations_per_second, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) + # Wrap long facet labels
labs(x = "", y = "Fixations per Second") +
ggtitle("Fixation Rate by Disruption Category\n(AOI disruptive person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(
legend.position = "none",
strip.text = element_text(size = 10) # Adjust facet text size if necessary
) +
geom_text(
data = disruption_summary_annotated %>%
distinct(Disruption_Category, label, y_max), # Ensure unique labels per facet
aes(x = 1.5, y = y_max, label = label),
inherit.aes = FALSE,
size = 3.5, hjust = 0.5, vjust = 0
)
# Display the both plots
plot_overall
plot_category
# Step 1: Define AOI categories
aoi_columns <- list(
"AOI_Students" = c(
"Number_of_fixations.Anna",
"Number_of_fixations.Bianca",
"Number_of_fixations.Carl(a)"
),
"AOI_Disruptive_Person" = c("Number_of_fixations.Disruptive_Person"),
"AOI_Teacher_Material" = c(
"Number_of_fixations.Board_Screen",
"Number_of_fixations.Material_Teacher"
),
"AOI_Student_Desk" = c(
"Number_of_fixations.Nametag_Anna",
"Number_of_fixations.Nametag_Bianca",
"Number_of_fixations.Nametag_Carl(a)",
"Number_of_fixations.Material_Students"
),
"AOI_Classroom_Others" = c("Number_of_fixations.Classroom_Others")
)
# Step 2: Filter data for "Lesson" and select relevant columns
df_fixations <- df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant, Group, starts_with("Number_of_fixations"))
# Step 3: Calculate total fixations per participant, excluding "Disruptive Person"
# Extract relevant column names excluding "Disruptive Person"
relevant_columns <- unlist(aoi_columns[c("AOI_Students", "AOI_Teacher_Material", "AOI_Student_Desk", "AOI_Classroom_Others")])
# Calculate row sums for the relevant columns and add as a new column
df_fixations <- df_fixations %>%
mutate(Total_fixations_excluding_disruptive = rowSums(across(all_of(relevant_columns)), na.rm = TRUE))
# Step 4: Calculate fixation percentages for each AOI based on the adjusted total
aoi_percentages <- df_fixations %>%
rowwise() %>%
mutate(
AOI_Students_pct = sum(c_across(any_of(
aoi_columns$AOI_Students
)), na.rm = TRUE) / Total_fixations_excluding_disruptive * 100,
AOI_Disruptive_Person_pct = sum(c_across(
any_of(aoi_columns$AOI_Disruptive_Person)
), na.rm = TRUE) / (
Total_fixations_excluding_disruptive + sum(c_across(
any_of(aoi_columns$AOI_Disruptive_Person)
), na.rm = TRUE)
) * 100,
AOI_Teacher_Material_pct = sum(c_across(
any_of(aoi_columns$AOI_Teacher_Material)
), na.rm = TRUE) / Total_fixations_excluding_disruptive * 100,
AOI_Student_Desk_pct = sum(c_across(any_of(
aoi_columns$AOI_Student_Desk
)), na.rm = TRUE) / Total_fixations_excluding_disruptive * 100,
AOI_Classroom_Others_pct = sum(c_across(
any_of(aoi_columns$AOI_Classroom_Others)
), na.rm = TRUE) / Total_fixations_excluding_disruptive * 100
) %>%
ungroup()
# Step 5: Summarize fixation percentages by Group and arrange in descending order
grouped_aoi_percentages <- aoi_percentages %>%
group_by(Group) %>%
summarise(
Mean_AOI_Students_pct = round(mean(AOI_Students_pct, na.rm = TRUE), 2),
Mean_AOI_Disruptive_Person_pct = round(mean(AOI_Disruptive_Person_pct, na.rm = TRUE), 2),
Mean_AOI_Teacher_Material_pct = round(mean(AOI_Teacher_Material_pct, na.rm = TRUE), 2),
Mean_AOI_Student_Desk_pct = round(mean(AOI_Student_Desk_pct, na.rm = TRUE), 2),
Mean_AOI_Classroom_Others_pct = round(mean(AOI_Classroom_Others_pct, na.rm = TRUE), 2)
) %>%
pivot_longer(cols = starts_with("Mean_AOI"), names_to = "AOI", values_to = "Fixation_Percentage") %>%
mutate(AOI = recode(AOI,
"Mean_AOI_Students_pct" = "Students",
"Mean_AOI_Disruptive_Person_pct" = "Disruptive Person",
"Mean_AOI_Teacher_Material_pct" = "Teacher Material",
"Mean_AOI_Student_Desk_pct" = "Student Desk",
"Mean_AOI_Classroom_Others_pct" = "Classroom/Others")) %>%
arrange(Group, desc(Fixation_Percentage))
# # Step 6: Display the table with APA style
# kable(grouped_aoi_percentages,
#       col.names = c("AOI", "Expert (%)", "Novice (%)"),
#       caption = "Average Fixation Percentage per AOI by Group (Novice vs. Expert) - Descending Order") %>%
#   kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE) %>%
#   add_header_above(c(" " = 1, "Fixation Percentage" = 2)) %>%
#   row_spec(0, bold = TRUE) %>%
#   column_spec(2:3, width = "3em", border_left = TRUE)
# Step 7: Plot with descending AOI order, y-axis limit set to 100%, and percentage labels inside the bars
ggplot(grouped_aoi_percentages, aes(x = reorder(AOI, -Fixation_Percentage), y = Fixation_Percentage, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0(Fixation_Percentage, "%")),
position = position_dodge(width = 0.8),
vjust = -0.3, size = 3) +
labs(
title = "Average Fixation Percentage by AOI and Group (Descending Order)",
x = "AOI",
y = "Fixation Percentage (%)"
) +
scale_fill_brewer(palette = "RdBu") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
guides(fill = guide_legend(title = "Group")) +
ylim(0, 100)  # Set y-axis limit to 100%
# Step 8: Perform a t-test between Experts and Novices on the percentage values and calculate Cohen's d
# Define the AOIs you want to analyze with names matching those generated in Step 4
aoi_list <- c("AOI_Students_pct", "AOI_Disruptive_Person_pct", "AOI_Teacher_Material_pct", "AOI_Student_Desk_pct", "AOI_Classroom_Others_pct")
# Initialize an empty data frame to store the results
results <- data.frame()
# Loop over each AOI and calculate t-test and Cohen's d
for (column_name in aoi_list) {
# Ensure that the column exists in the data
if (column_name %in% names(aoi_percentages)) {
# Filter the data for the current AOI and rename the column to Fixation_Percentage for consistency
aoi_data <- aoi_percentages %>%
select(Group, !!sym(column_name)) %>%
rename(Fixation_Percentage = !!sym(column_name))
# Separate data for each group
expert_data <- aoi_data$Fixation_Percentage[aoi_data$Group == "Expert"]
novice_data <- aoi_data$Fixation_Percentage[aoi_data$Group == "Novice"]
# Check if both groups have at least one observation
if (length(expert_data) > 0 && length(novice_data) > 0) {
# Perform a t-test between Experts and Novices on the current AOI's fixation percentage
t_test_result <- t.test(expert_data, novice_data, var.equal = TRUE)
# Calculate Cohen's d for the current AOI
cohen_d_value <- cohen.d(expert_data, novice_data, pooled = TRUE)$estimate
# Format the results for the current AOI and add to the results data frame
results <- rbind(
results,
data.frame(
"AOI" = gsub("_pct", "", column_name),  # Remove "_pct" suffix for readability
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_result$statistic, 2),
"df" = t_test_result$parameter,
"p-value" = format.pval(t_test_result$p.value, digits = 3, eps = .001),
"Mean Difference" = round(t_test_result$estimate[1] - t_test_result$estimate[2], 2),
"Cohen's d" = round(cohen_d_value, 2),
"95% CI (d)" = paste0("[", round(t_test_result$conf.int[1], 2), ", ", round(t_test_result$conf.int[2], 2), "]")
)
)
} else {
# If one group has no data, append N/A values for this AOI
results <- rbind(
results,
data.frame(
"AOI" = gsub("_pct", "", column_name),  # Remove "_pct" suffix for readability
"Group Comparison" = "Experts vs. Novices",
"t-value" = NA,
"df" = NA,
"p-value" = NA,
"Mean Difference" = NA,
"Cohen's d" = NA,
"95% CI (d)" = NA
)
)
}
}
}
# Clean up AOI names for readability in the final table
aoi_name_mapping <- c(
"AOI_Students" = "Students",
"AOI_Disruptive_Person" = "Disruptive Person",
"AOI_Teacher_Material" = "Teacher Material",
"AOI_Student_Desk" = "Student Desk",
"AOI_Classroom_Others" = "Classroom/Others"
)
results$AOI <- aoi_name_mapping[results$AOI]
# Display the combined results table in APA style without row names
knitr::kable(results, caption = "t-Test and Effect Size for Fixation Percentage across AOIs (Experts vs. Novices)", row.names = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
