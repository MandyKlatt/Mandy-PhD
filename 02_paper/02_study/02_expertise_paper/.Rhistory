theme(legend.position = "none") +
ylim(0, y_max) +
annotate("text", x = 1, y = y_max * 0.85,
label = paste0("M = ", summary_stats$Mean[summary_stats$Group == "Novice"],
"\nSD = ", summary_stats$SD[summary_stats$Group == "Novice"],
"\nMedian = ", summary_stats$Median[summary_stats$Group == "Novice"]),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = y_max * 0.85,
label = paste0("M = ", summary_stats$Mean[summary_stats$Group == "Expert"],
"\nSD = ", summary_stats$SD[summary_stats$Group == "Expert"],
"\nMedian = ", summary_stats$Median[summary_stats$Group == "Expert"]),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 1.5, y = y_max * 0.95,
label = paste0("Mann-Whitney U p = ", format.pval(mann_whitney_test$p.value, digits = 3)),
hjust = 0.5, size = 4, fontface = "italic")
plot_duration_group
# Plot 2: Disruption Duration by Group and Category
plot_duration_category <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group and Category") +
theme(legend.position = "none") +
ylim(0, y_max)
plot_duration_category
##################### RESULTS TABLES ########################
# 6. Display Normality Test Results
kable(
normality_tests,
caption = "Shapiro-Wilk Test for Normality by Group",
col.names = c("Group", "Shapiro-Wilk p-value"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# 7. Display Mann-Whitney U-Test Results
mann_whitney_results <- data.frame(
"Test" = "Mann-Whitney U",
"W" = round(mann_whitney_test$statistic, 2),
"p-value" = round(mann_whitney_test$p.value, 3)
)
kable(
mann_whitney_results,
caption = "Mann-Whitney U-Test Results for Disruption Duration",
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Kruskal-Wallis test for differences between categories
kruskal_test <- kruskal.test(Duration_of_interval_sec ~ Disruption_Category, data = df_aoi_disrup)
# Display results
kruskal_results <- data.frame(
"Test" = "Kruskal-Wallis",
"Chi-squared" = round(kruskal_test$statistic, 2),
"df" = kruskal_test$parameter,
"p-value" = round(kruskal_test$p.value, 3)
)
# Display Kruskal-Wallis Test Results
kable(
kruskal_results,
caption = "Kruskal-Wallis Test Results for Differences Between Disruption Categories",
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Pairwise Wilcoxon test with Bonferroni correction
pairwise_wilcox <- pairwise.wilcox.test(
x = df_aoi_disrup$Duration_of_interval_sec,
g = df_aoi_disrup$Disruption_Category,
p.adjust.method = "bonferroni" # Adjust for multiple comparisons
)
# Display results
pairwise_results <- as.data.frame(pairwise_wilcox$p.value)
kable(
pairwise_results,
caption = "Pairwise Wilcoxon Test Results (Bonferroni Corrected)",
row.names = TRUE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### DATA PREPARATION ########################
# Prepare data for analysis: filter, calculate, and categorize disruptions
df_aoi_disrup <- df_aoi %>%
filter(TOI %in% disruptions, Duration_of_interval <= 30000) %>%
select(Group, Participant, TOI, Duration_of_interval) %>%
mutate(
Group = as_factor(Group),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
),
Duration_of_interval_sec = round(Duration_of_interval / 1000, 2)
) %>%
filter(!is.na(Disruption_Category)) %>%
drop_na()
##################### DESCRIPTIVE STATISTICS ########################
# Descriptive Statistics by Group
summary_stats_group <- df_aoi_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
Mean = round(mean(Duration_of_interval_sec, na.rm = TRUE), 2),
SD = round(sd(Duration_of_interval_sec, na.rm = TRUE), 2),
Median = round(median(Duration_of_interval_sec, na.rm = TRUE), 2),
IQR = round(IQR(Duration_of_interval_sec, na.rm = TRUE), 2),
Min = round(min(Duration_of_interval_sec, na.rm = TRUE), 2),
Max = round(max(Duration_of_interval_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Descriptive Statistics by Category and Group
summary_stats_category_group <- df_aoi_disrup %>%
group_by(Disruption_Category, Group) %>%
summarise(
N = n(),
Mean = round(mean(Duration_of_interval_sec, na.rm = TRUE), 2),
SD = round(sd(Duration_of_interval_sec, na.rm = TRUE), 2),
Median = round(median(Duration_of_interval_sec, na.rm = TRUE), 2),
IQR = round(IQR(Duration_of_interval_sec, na.rm = TRUE), 2),
Min = round(min(Duration_of_interval_sec, na.rm = TRUE), 2),
Max = round(max(Duration_of_interval_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Display Descriptive Tables
kable(
summary_stats_group,
caption = "Descriptive Statistics for Disruption Duration by Group",
col.names = c("Group", "N", "Mean", "SD", "Median", "IQR", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
kable(
summary_stats_category_group,
caption = "Descriptive Statistics for Disruption Duration by Category and Group",
col.names = c("Category", "Group", "N", "Mean", "SD", "Median", "IQR", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### PLOTS ########################
# Plot 1: Disruption Duration by Group
plot_duration_group <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group") +
theme(legend.position = "none") +
annotate("text", x = 1, y = max(df_aoi_disrup$Duration_of_interval_sec) * 0.9,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Novice"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Novice"]),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = max(df_aoi_disrup$Duration_of_interval_sec) * 0.9,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Expert"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Expert"]),
hjust = 0.5, size = 4, fontface = "italic")
plot_duration_group
# Plot 2: Disruption Duration by Group and Category
plot_duration_category <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group and Category") +
theme(legend.position = "none")
plot_duration_category
##################### STATISTICAL TESTS ########################
# Normality Tests (Shapiro-Wilk)
normality_tests <- df_aoi_disrup %>%
group_by(Group) %>%
summarise(
Shapiro_Wilk_p = round(shapiro.test(Duration_of_interval_sec)$p.value, 3),
.groups = "drop"
)
kable(
normality_tests,
caption = "Shapiro-Wilk Test for Normality by Group",
col.names = c("Group", "Shapiro-Wilk p-value"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Mann-Whitney U-Test and Effect Size
mann_whitney_test <- wilcox.test(Duration_of_interval_sec ~ Group, data = df_aoi_disrup, exact = FALSE)
# Effect Size Calculation for Mann-Whitney (r)
n1 <- nrow(df_aoi_disrup %>% filter(Group == "Novice"))
n2 <- nrow(df_aoi_disrup %>% filter(Group == "Expert"))
r_effect <- abs(mann_whitney_test$statistic - (n1 * n2 / 2)) / sqrt((n1 * n2 * (n1 + n2 + 1)) / 12)
mann_whitney_results <- data.frame(
"Test" = "Mann-Whitney U",
"W" = round(mann_whitney_test$statistic, 2),
"p-value" = round(mann_whitney_test$p.value, 3),
"Effect Size (r)" = round(r_effect, 3)
)
kable(
mann_whitney_results,
caption = "Mann-Whitney U-Test Results for Disruption Duration",
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Kruskal-Wallis Test and Pairwise Comparisons
kruskal_test <- kruskal.test(Duration_of_interval_sec ~ Disruption_Category, data = df_aoi_disrup)
kruskal_results <- data.frame(
"Test" = "Kruskal-Wallis",
"Chi-squared" = round(kruskal_test$statistic, 2),
"df" = kruskal_test$parameter,
"p-value" = round(kruskal_test$p.value, 3)
)
kable(
kruskal_results,
caption = "Kruskal-Wallis Test Results for Differences Between Disruption Categories",
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Pairwise Wilcoxon Comparisons
pairwise_wilcox <- pairwise.wilcox.test(
x = df_aoi_disrup$Duration_of_interval_sec,
g = df_aoi_disrup$Disruption_Category,
p.adjust.method = "bonferroni"
)
pairwise_results <- as.data.frame(pairwise_wilcox$p.value)
kable(
pairwise_results,
caption = "Pairwise Wilcoxon Test Results (Bonferroni Corrected)",
row.names = TRUE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Plot 1: Disruption Duration by Group
plot_duration_group <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
ylim(0, 30) +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group") +
theme(legend.position = "none") +
annotate("text", x = 1, y = max(df_aoi_disrup$Duration_of_interval_sec) * 0.9,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Novice"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Novice"]),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = max(df_aoi_disrup$Duration_of_interval_sec) * 0.9,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Expert"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Expert"]),
hjust = 0.5, size = 4, fontface = "italic")
plot_duration_group
# Plot 2: Disruption Duration by Group and Category
plot_duration_category <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
ylim(0, 30) +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group and Category") +
theme(legend.position = "none")
plot_duration_category
plot_duration_group
# Plot 1: Disruption Duration by Group
plot_duration_group <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group") +
theme(legend.position = "none") +
annotate("text", x = 1, y = max(df_aoi_disrup$Duration_of_interval_sec) + 2,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Novice"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Novice"]),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = max(df_aoi_disrup$Duration_of_interval_sec) + 2,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Expert"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Expert"]),
hjust = 0.5, size = 4, fontface = "italic")
plot_duration_group
# Plot 1: Disruption Duration by Group
plot_duration_group <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group") +
theme(legend.position = "none") +
annotate("text", x = 1, y = max(df_aoi_disrup$Duration_of_interval_sec) + 4,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Novice"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Novice"]),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = max(df_aoi_disrup$Duration_of_interval_sec) + 4,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Expert"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Expert"]),
hjust = 0.5, size = 4, fontface = "italic")
plot_duration_group
# Plot 1: Disruption Duration by Group
plot_duration_group <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group") +
theme(legend.position = "none") +
annotate("text", x = 1, y = max(df_aoi_disrup$Duration_of_interval_sec) + 4,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Novice"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Novice"]),
hjust = 0.5, size = 4) +
annotate("text", x = 2, y = max(df_aoi_disrup$Duration_of_interval_sec) + 4,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Expert"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Expert"]),
hjust = 0.5, size = 4)
plot_duration_group
##################### DATA PREPARATION ########################
# Prepare data for analysis: filter, calculate, and categorize disruptions
df_aoi_disrup <- df_aoi %>%
filter(TOI %in% disruptions, Duration_of_interval <= 30000) %>%
select(Group, Participant, TOI, Duration_of_interval) %>%
mutate(
Group = as_factor(Group),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
),
Duration_of_interval_sec = round(Duration_of_interval / 1000, 2)
) %>%
filter(!is.na(Disruption_Category)) %>%
drop_na()
##################### DESCRIPTIVE STATISTICS ########################
# Descriptive Statistics by Group
summary_stats_group <- df_aoi_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
Mean = round(mean(Duration_of_interval_sec, na.rm = TRUE), 2),
SD = round(sd(Duration_of_interval_sec, na.rm = TRUE), 2),
Median = round(median(Duration_of_interval_sec, na.rm = TRUE), 2),
IQR = round(IQR(Duration_of_interval_sec, na.rm = TRUE), 2),
Min = round(min(Duration_of_interval_sec, na.rm = TRUE), 2),
Max = round(max(Duration_of_interval_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Descriptive Statistics by Category and Group
summary_stats_category_group <- df_aoi_disrup %>%
group_by(Disruption_Category, Group) %>%
summarise(
N = n(),
Mean = round(mean(Duration_of_interval_sec, na.rm = TRUE), 2),
SD = round(sd(Duration_of_interval_sec, na.rm = TRUE), 2),
Median = round(median(Duration_of_interval_sec, na.rm = TRUE), 2),
IQR = round(IQR(Duration_of_interval_sec, na.rm = TRUE), 2),
Min = round(min(Duration_of_interval_sec, na.rm = TRUE), 2),
Max = round(max(Duration_of_interval_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Display Descriptive Tables
kable(
summary_stats_group,
caption = "Descriptive Statistics for Disruption Duration by Group",
col.names = c("Group", "N", "Mean", "SD", "Median", "IQR", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
kable(
summary_stats_category_group,
caption = "Descriptive Statistics for Disruption Duration by Category and Group",
col.names = c("Category", "Group", "N", "Mean", "SD", "Median", "IQR", "Min", "Max"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### PLOTS ########################
# Plot 1: Disruption Duration by Group
plot_duration_group <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group") +
theme(legend.position = "none") +
annotate("text", x = 1, y = max(df_aoi_disrup$Duration_of_interval_sec) + 4,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Novice"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Novice"]),
hjust = 0.5, size = 4) +
annotate("text", x = 2, y = max(df_aoi_disrup$Duration_of_interval_sec) + 4,
label = paste0("Median = ", summary_stats_group$Median[summary_stats_group$Group == "Expert"],
"\nIQR = ", summary_stats_group$IQR[summary_stats_group$Group == "Expert"]),
hjust = 0.5, size = 4)
plot_duration_group
# Plot 2: Disruption Duration by Group and Category
plot_duration_category <- ggplot(df_aoi_disrup, aes(x = Group, y = Duration_of_interval_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.15, alpha = 0.5, color = "black", size = 1.5) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) +
labs(x = "Group", y = "Disruption Duration (seconds)") +
theme_cowplot() +
ylim(0, 30) +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Disruption Duration by Group and Category") +
theme(legend.position = "none")
plot_duration_category
##################### STATISTICAL TESTS ########################
# Normality Tests (Shapiro-Wilk)
normality_tests <- df_aoi_disrup %>%
group_by(Group) %>%
summarise(
Shapiro_Wilk_p = round(shapiro.test(Duration_of_interval_sec)$p.value, 3),
.groups = "drop"
)
kable(
normality_tests,
caption = "Shapiro-Wilk Test for Normality by Group",
col.names = c("Group", "Shapiro-Wilk p-value"),
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Mann-Whitney U-Test and Effect Size
mann_whitney_test <- wilcox.test(Duration_of_interval_sec ~ Group, data = df_aoi_disrup, exact = FALSE)
# Effect Size Calculation for Mann-Whitney (r)
n1 <- nrow(df_aoi_disrup %>% filter(Group == "Novice"))
n2 <- nrow(df_aoi_disrup %>% filter(Group == "Expert"))
r_effect <- abs(mann_whitney_test$statistic - (n1 * n2 / 2)) / sqrt((n1 * n2 * (n1 + n2 + 1)) / 12)
mann_whitney_results <- data.frame(
"Test" = "Mann-Whitney U",
"W" = round(mann_whitney_test$statistic, 2),
"p-value" = round(mann_whitney_test$p.value, 3),
"Effect Size (r)" = round(r_effect, 3)
)
kable(
mann_whitney_results,
caption = "Mann-Whitney U-Test Results for Disruption Duration",
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Kruskal-Wallis Test and Pairwise Comparisons
kruskal_test <- kruskal.test(Duration_of_interval_sec ~ Disruption_Category, data = df_aoi_disrup)
kruskal_results <- data.frame(
"Test" = "Kruskal-Wallis",
"Chi-squared" = round(kruskal_test$statistic, 2),
"df" = kruskal_test$parameter,
"p-value" = round(kruskal_test$p.value, 3)
)
kable(
kruskal_results,
caption = "Kruskal-Wallis Test Results for Differences Between Disruption Categories",
row.names = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Pairwise Wilcoxon Comparisons
pairwise_wilcox <- pairwise.wilcox.test(
x = df_aoi_disrup$Duration_of_interval_sec,
g = df_aoi_disrup$Disruption_Category,
p.adjust.method = "bonferroni"
)
pairwise_results <- as.data.frame(pairwise_wilcox$p.value)
kable(
pairwise_results,
caption = "Pairwise Wilcoxon Test Results (Bonferroni Corrected)",
row.names = TRUE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Pairwise Wilcoxon test with Bonferroni correction
pairwise_wilcox <- pairwise.wilcox.test(
x = df_aoi_disrup$Duration_of_interval_sec,
g = df_aoi_disrup$Disruption_Category,
p.adjust.method = "bonferroni"
)
# Extract and round the p-values to 3 decimal places
pairwise_results <- as.data.frame(pairwise_wilcox$p.value) %>%
mutate(across(everything(), ~ round(., 3)))
# Display the results with rounded p-values
kable(
pairwise_results,
caption = "Pairwise Wilcoxon Test Results (Bonferroni Corrected)",
row.names = TRUE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Pairwise Wilcoxon test with Bonferroni correction
pairwise_wilcox <- pairwise.wilcox.test(
x = df_aoi_disrup$Duration_of_interval_sec,
g = df_aoi_disrup$Disruption_Category,
p.adjust.method = "bonferroni"
)
# Extract and round the p-values to 3 decimal places
pairwise_results <- as.data.frame(pairwise_wilcox$p.value) %>%
mutate(across(everything(), ~ round(., 4)))
# Display the results with rounded p-values
kable(
pairwise_results,
caption = "Pairwise Wilcoxon Test Results (Bonferroni Corrected)",
row.names = TRUE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Pairwise Wilcoxon test with Bonferroni correction
pairwise_wilcox <- pairwise.wilcox.test(
x = df_aoi_disrup$Duration_of_interval_sec,
g = df_aoi_disrup$Disruption_Category,
p.adjust.method = "bonferroni"
)
# Extract and round the p-values to 3 decimal places
pairwise_results <- as.data.frame(pairwise_wilcox$p.value) %>%
mutate(across(everything(), ~ round(., 3)))
# Display the results with rounded p-values
kable(
pairwise_results,
caption = "Pairwise Wilcoxon Test Results (Bonferroni Corrected)",
row.names = TRUE
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
