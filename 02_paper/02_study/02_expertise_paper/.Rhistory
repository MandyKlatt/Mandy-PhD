theme(legend.position = "none") +
# Add annotations for mean (M) and SD
annotate("text", x = 1, y = y_max_fixation * 0.85,
label = paste0("atop(italic(M) == ", mean_novice_fixation, ", italic(SD) == ", sd_novice_fixation, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
annotate("text", x = 2, y = y_max_fixation * 0.85,
label = paste0("atop(italic(M) == ", mean_expert_fixation, ", italic(SD) == ", sd_expert_fixation, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
# Add p-value and Cohen's d annotations
annotate("text", x = 1.5, y = y_max_fixation * 0.95,
label = paste0("p = ", p_value_fixation, "\nd = ", cohen_d_fixation),
hjust = 0.5, size = 4, fontface = "italic")
plot_avg_fixation_group
# 7. Format the t-Test and Cohen's d results for APA Table without the first column
t_test_result <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_fixation$statistic, 2),
"df" = t_test_fixation$parameter,
"p-value" = round(t_test_fixation$p.value, 2),
"Mean Difference" = round(t_test_fixation$estimate[1] - t_test_fixation$estimate[2], 2),
"Cohen's d" = cohen_d_fixation,
"95% CI (d)" = paste0("[", round(t_test_fixation$conf.int[1], 2), ", ", round(t_test_fixation$conf.int[2], 2), "]")
)
# Display t-Test and Effect Size results in APA style without row names
knitr::kable(t_test_result, caption = "t-Test and Effect Size for Average Fixation Duration (Micro-Teaching Unit)", row.names = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 1: Define AOI categories with correct column names for fixation duration
aoi_columns <- list(
"AOI_Students" = c(
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)"
),
"AOI_Disruptive_Person" = c("Total_duration_of_fixations.Disruptive_Person"),
"AOI_Teacher_Material" = c(
"Total_duration_of_fixations.Board_Screen",
"Total_duration_of_fixations.Material_Teacher"
),
"AOI_Student_Desk" = c(
"Total_duration_of_fixations.Nametag_Anna",
"Total_duration_of_fixations.Nametag_Bianca",
"Total_duration_of_fixations.Nametag_Carl(a)",
"Total_duration_of_fixations.Material_Students"
),
"AOI_Classroom_Others" = c("Total_duration_of_fixations.Classroom_Others")
)
# Step 2: Filter data for "Lesson" and select relevant columns for fixation duration
df_durations <- df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant, Group, starts_with("Total_duration_of_fixations"))
# Step 3: Calculate total fixation duration per participant, excluding "Disruptive Person"
relevant_columns <- unlist(aoi_columns[c("AOI_Students", "AOI_Teacher_Material", "AOI_Student_Desk", "AOI_Classroom_Others")])
df_durations <- df_durations %>%
mutate(Total_duration_excluding_disruptive = rowSums(across(all_of(relevant_columns)), na.rm = TRUE))
# Step 4: Calculate fixation duration percentages for each AOI based on the adjusted total duration
aoi_durations_percentages <- df_durations %>%
rowwise() %>%
mutate(
AOI_Students_pct = sum(c_across(any_of(aoi_columns$AOI_Students)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100,
AOI_Disruptive_Person_pct = sum(c_across(any_of(aoi_columns$AOI_Disruptive_Person)), na.rm = TRUE) / (
Total_duration_excluding_disruptive + sum(c_across(any_of(aoi_columns$AOI_Disruptive_Person)), na.rm = TRUE)
) * 100,
AOI_Teacher_Material_pct = sum(c_across(any_of(aoi_columns$AOI_Teacher_Material)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100,
AOI_Student_Desk_pct = sum(c_across(any_of(aoi_columns$AOI_Student_Desk)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100,
AOI_Classroom_Others_pct = sum(c_across(any_of(aoi_columns$AOI_Classroom_Others)), na.rm = TRUE) / Total_duration_excluding_disruptive * 100
) %>%
ungroup()
# Step 5: Summarize fixation duration percentages by Group and arrange in descending order
grouped_aoi_durations_percentages <- aoi_durations_percentages %>%
group_by(Group) %>%
summarise(
Mean_AOI_Students_pct = round(mean(AOI_Students_pct, na.rm = TRUE), 2),
Mean_AOI_Disruptive_Person_pct = round(mean(AOI_Disruptive_Person_pct, na.rm = TRUE), 2),
Mean_AOI_Teacher_Material_pct = round(mean(AOI_Teacher_Material_pct, na.rm = TRUE), 2),
Mean_AOI_Student_Desk_pct = round(mean(AOI_Student_Desk_pct, na.rm = TRUE), 2),
Mean_AOI_Classroom_Others_pct = round(mean(AOI_Classroom_Others_pct, na.rm = TRUE), 2)
) %>%
pivot_longer(cols = starts_with("Mean_AOI"), names_to = "AOI", values_to = "Duration_Percentage") %>%
mutate(AOI = recode(AOI,
"Mean_AOI_Students_pct" = "Students",
"Mean_AOI_Disruptive_Person_pct" = "Disruptive Person",
"Mean_AOI_Teacher_Material_pct" = "Teacher Material",
"Mean_AOI_Student_Desk_pct" = "Student Desk",
"Mean_AOI_Classroom_Others_pct" = "Classroom/Others")) %>%
arrange(Group, desc(Duration_Percentage))
# Step 6: Plot the fixation duration percentages by AOI and Group
ggplot(grouped_aoi_durations_percentages, aes(x = reorder(AOI, -Duration_Percentage), y = Duration_Percentage, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0(Duration_Percentage, "%")),
position = position_dodge(width = 0.8),
vjust = -0.3, size = 3) +
labs(
title = "Total Fixation Duration Percentage by AOI and Group (Descending Order)",
x = "AOI",
y = "Fixation Duration Percentage (%)"
) +
scale_fill_brewer(palette = "RdBu") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
guides(fill = guide_legend(title = "Group")) +
ylim(0, 100)  # Set y-axis limit to 100%
# Step 7: Perform a t-test between Experts and Novices on the duration percentages and calculate Cohen's d
aoi_list <- c("AOI_Students_pct", "AOI_Disruptive_Person_pct", "AOI_Teacher_Material_pct", "AOI_Student_Desk_pct", "AOI_Classroom_Others_pct")
results <- data.frame()
for (column_name in aoi_list) {
if (column_name %in% names(aoi_durations_percentages)) {
aoi_data <- aoi_durations_percentages %>%
select(Group, !!sym(column_name)) %>%
rename(Duration_Percentage = !!sym(column_name))
expert_data <- aoi_data$Duration_Percentage[aoi_data$Group == "Expert"]
novice_data <- aoi_data$Duration_Percentage[aoi_data$Group == "Novice"]
if (length(expert_data) > 0 && length(novice_data) > 0) {
t_test_result <- t.test(expert_data, novice_data, var.equal = TRUE)
cohen_d_value <- cohen.d(expert_data, novice_data, pooled = TRUE)$estimate
results <- rbind(
results,
data.frame(
"AOI" = gsub("_pct", "", column_name),
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_result$statistic, 2),
"df" = t_test_result$parameter,
"p-value" = format.pval(t_test_result$p.value, digits = 2, eps = .05),
"Mean Difference" = round(t_test_result$estimate[1] - t_test_result$estimate[2], 2),
"Cohen's d" = round(cohen_d_value, 2),
"95% CI (d)" = paste0("[", round(t_test_result$conf.int[1], 2), ", ", round(t_test_result$conf.int[2], 2), "]")
)
)
} else {
results <- rbind(
results,
data.frame(
"AOI" = gsub("_pct", "", column_name),
"Group Comparison" = "Experts vs. Novices",
"t-value" = NA,
"df" = NA,
"p-value" = NA,
"Mean Difference" = NA,
"Cohen's d" = NA,
"95% CI (d)" = NA
)
)
}
}
}
# Map AOI names to clean versions for readability in the final results table
results$AOI <- recode(results$AOI,
"AOI_Students" = "Students",
"AOI_Disruptive_Person" = "Disruptive Person",
"AOI_Teacher_Material" = "Teacher Material",
"AOI_Student_Desk" = "Student Desk",
"AOI_Classroom_Others" = "Classroom/Others")
# Display the t-Test and Effect Size table in APA style
knitr::kable(results,
caption = "t-Test and Effect Size for Fixation Duration Percentage across AOIs (Experts vs. Novices)",
row.names = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### AVERAGE DURATION ON AOI STUDENTS ########################
# 1. Data Preparation: Filter and Calculate Average Duration of Fixations on AOI Students
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Group,
Duration_of_interval,
Participant,
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)",
"Number_of_fixations.Anna",
"Number_of_fixations.Bianca",
"Number_of_fixations.Carl(a)"
) %>%
rowwise() %>%
transmute(
Group = as_factor(Group),
Participant = Participant,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Duration_of_interval_sec = round(Duration_of_interval/1000, digits = 2),
Stud_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Stud_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Stud_number_fixation_min = round(Stud_number_fixation / Duration_of_interval_min, digits = 2),
Stud_number_fixation_sec = round(Stud_number_fixation / Duration_of_interval_sec, digits = 2),
Average_duration_stud = round(Stud_duration_fixation / Stud_number_fixation, digits = 0)
) -> df_aoi_stud
# 2. Descriptive Statistics Table
dur_stud_table <- df_aoi_stud %>%
group_by(Group) %>%
summarise(
N = n(),
"M in ms" = round(mean(Average_duration_stud, na.rm = TRUE), 2),
"SD in ms" = round(sd(Average_duration_stud, na.rm = TRUE), 2),
"Min in ms" = round(min(Average_duration_stud, na.rm = TRUE), 2),
"Max in ms" = round(max(Average_duration_stud, na.rm = TRUE), 2)
)
# Display the descriptive table in APA style
knitr::kable(dur_stud_table,
caption = "N, M, SD, Min & Max Average Duration of Fixations in Milliseconds (AOI Students)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# 3. Plotting Average Duration on AOI Students
# Calculate values for annotation
mean_novice_stud <- round(mean(df_aoi_stud$Average_duration_stud[df_aoi_stud$Group == "Novice"], na.rm = TRUE), 2)
sd_novice_stud <- round(sd(df_aoi_stud$Average_duration_stud[df_aoi_stud$Group == "Novice"], na.rm = TRUE), 2)
mean_expert_stud <- round(mean(df_aoi_stud$Average_duration_stud[df_aoi_stud$Group == "Expert"], na.rm = TRUE), 2)
sd_expert_stud <- round(sd(df_aoi_stud$Average_duration_stud[df_aoi_stud$Group == "Expert"], na.rm = TRUE), 2)
# Maximum y-axis value for plot
y_max_stud <- max(df_aoi_stud$Average_duration_stud) * 1.2
# Conduct t-test
t_test_stud <- t.test(
Average_duration_stud ~ Group,
data = df_aoi_stud,
var.equal = TRUE
)
# Extract p-value
p_value_stud <- round(t_test_stud$p.value, 2)
# Calculate Cohen's d (full result object)
d_aver_stud_full <- cohen.d(Average_duration_stud ~ Group, data = df_aoi_stud, pooled = TRUE)
# Extract Cohen's d and confidence interval
d_aver_stud <- round(d_aver_stud_full$estimate, 2)
d_conf_int <- paste0("[", round(d_aver_stud_full$conf.int[1], 2), ", ", round(d_aver_stud_full$conf.int[2], 2), "]")
# Annotated Plot
plot_average_duration_stud <- df_aoi_stud %>%
ggplot(mapping = aes(x = Group, y = Average_duration_stud)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA, width = 0.5) +
geom_jitter(
width = 0.15, height = 0.1, alpha = 0.5, color = "black", size = 1.5
) +
ylim(0, y_max_stud) +
labs(x = "", y = "Average Fixation Duration (ms)") +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Average Duration of Fixations\n(AOI Students)") +
theme_cowplot() +
theme(legend.position = "none") +
# Annotate mean (M) and SD
annotate("text", x = 1, y = y_max_stud * 0.85,
label = paste0("atop(italic(M) == ", mean_novice_stud, ", italic(SD) == ", sd_novice_stud, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
annotate("text", x = 2, y = y_max_stud * 0.85,
label = paste0("atop(italic(M) == ", mean_expert_stud, ", italic(SD) == ", sd_expert_stud, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
# Annotate p-value and Cohen's d
annotate("text", x = 1.5, y = y_max_stud * 0.95,
label = paste0("p = ", p_value_stud, "\nd = ", d_aver_stud),
hjust = 0.5, size = 4, fontface = "italic")
plot_average_duration_stud
# 4. t-Test and Effect Size Results Table
t_test_stud_result <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_stud$statistic, 2),
"df" = t_test_stud$parameter,
"p-value" = round(t_test_stud$p.value, 2),
"Mean Difference" = round(t_test_stud$estimate[1] - t_test_stud$estimate[2], 2),
"Cohen's d" = d_aver_stud,
"95% CI (d)" = d_conf_int
)
# Display the t-Test and Effect Size results table in APA style
knitr::kable(t_test_stud_result,
caption = "t-Test and Effect Size for Average Fixation Duration on AOI Students (milliseconds)",
row.names = FALSE) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### AVERAGE DURATION ON AOI DISRUPTIVE PERSON ########################
##################### DATA PREPARATION ########################
# Define the different types of disruptions and categories
disruptions <- c("Chatting_with_neighbour", "Clicking_pen", "Drawing",
"Drumming_with_hands", "Head_on_table", "Heckling",
"Looking_at_phone", "Snipping_with_fingers", "Whispering")
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Filter and prepare the data
df_aoi_disrup <- df_aoi %>%
filter(TOI %in% disruptions) %>% # Filter rows based on the disruption list
select(Group, Participant, TOI,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person") %>%
mutate(
Group = as_factor(Group), # Convert Group column to a factor
Disruption_Category = case_when( # Assign categories based on disruption type
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
),
Average_duration_disrup = round(Total_duration_of_fixations.Disruptive_Person /
Number_of_fixations.Disruptive_Person, 2) # Average duration in milliseconds
) %>%
filter(!is.na(Disruption_Category) & !is.na(Average_duration_disrup)) # Remove NAs
##################### DESCRIPTIVE STATISTICS ########################
# Step 2: Summarize data by disruption category
disruption_summary <- df_aoi_disrup %>%
group_by(Group, Participant, Disruption_Category) %>%
summarise(
mean_duration_ms = round(mean(Average_duration_disrup, na.rm = TRUE), 2),
.groups = "drop"
)
# Step 3: Summarize by participant
individual_summary <- disruption_summary %>%
group_by(Group, Participant) %>%
summarise(
mean_duration = round(mean(mean_duration_ms, na.rm = TRUE), 2), # Mean duration per participant
.groups = "drop"
)
# Overall descriptive statistics
overall_stats <- individual_summary %>%
group_by(Group) %>%
summarise(
N = n(), # Number of participants
Mean = round(mean(mean_duration, na.rm = TRUE), 2), # Mean duration
SD = round(sd(mean_duration, na.rm = TRUE), 2), # Standard deviation
Min = round(min(mean_duration, na.rm = TRUE), 2), # Minimum value
Max = round(max(mean_duration, na.rm = TRUE), 2), # Maximum value
.groups = "drop"
)
# Display the overall descriptive statistics table
knitr::kable(
overall_stats,
caption = "Descriptive Statistics (N, Mean, SD, Min, Max) for Average Duration by Group",
col.names = c("Group", "N", "M", "SD", "Min", "Max"),
row.names = FALSE
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Descriptive statistics by category
category_stats <- disruption_summary %>%
group_by(Disruption_Category, Group) %>%
summarise(
N = n(), # Number of data points
Mean = round(mean(mean_duration_ms, na.rm = TRUE), 2), # Mean duration
SD = round(sd(mean_duration_ms, na.rm = TRUE), 2), # Standard deviation
Min = round(min(mean_duration_ms, na.rm = TRUE), 2), # Minimum value
Max = round(max(mean_duration_ms, na.rm = TRUE), 2), # Maximum value
.groups = "drop"
)
# Display the descriptive statistics table by category
knitr::kable(
category_stats,
caption = "Descriptive Statistics (N, Mean, SD, Min, Max) for Average Duration by Group and Category",
col.names = c("Category", "Group", "N", "M", "SD", "Min", "Max"),
row.names = FALSE
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### PLOTTING ########################
# Overall plot
mean_novice <- round(mean(individual_summary$mean_duration[individual_summary$Group == "Novice"], na.rm = TRUE), 2)
sd_novice <- round(sd(individual_summary$mean_duration[individual_summary$Group == "Novice"], na.rm = TRUE), 2)
mean_expert <- round(mean(individual_summary$mean_duration[individual_summary$Group == "Expert"], na.rm = TRUE), 2)
sd_expert <- round(sd(individual_summary$mean_duration[individual_summary$Group == "Expert"], na.rm = TRUE), 2)
# t-Test and effect size
t_test <- t.test(mean_duration ~ Group, data = individual_summary, var.equal = TRUE)
p_value <- round(t_test$p.value, 2)
cohen_d <- round(effsize::cohen.d(mean_duration ~ Group, data = individual_summary)$estimate, 2)
# Overall plot
y_max_overall <- max(individual_summary$mean_duration, na.rm = TRUE) * 1.5
plot_overall <- ggplot(individual_summary, aes(x = Group, y = mean_duration, fill = Group)) +
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.1, alpha = 0.7, color = "black", size = 1.5) +
labs(x = "", y = "Mean Duration (ms) per Participant") +
ggtitle("Average Duration per Participant\n(AOI Disruptive Person)") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
ylim(0, y_max_overall) +
theme(legend.position = "none") +
annotate("text", x = 1, y = y_max_overall * 0.85,
label = paste0("M = ", mean_novice, "\nSD = ", sd_novice),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 2, y = y_max_overall * 0.85,
label = paste0("M = ", mean_expert, "\nSD = ", sd_expert),
hjust = 0.5, size = 4, fontface = "italic") +
annotate("text", x = 1.5, y = y_max_overall * 0.95,
label = paste0("p = ", p_value, "\nd = ", cohen_d),
hjust = 0.5, size = 4, fontface = "italic")
# Plot by category
plot_category <- disruption_summary %>%
ggplot(aes(x = Group, y = mean_duration_ms, fill = Group)) +  # Ensure using correct column name here
geom_boxplot(outlier.shape = NA, width = 0.5) +
geom_jitter(width = 0.1, alpha = 0.7, size = 1.5, color = "black") +
facet_wrap(~Disruption_Category, scales = "fixed", labeller = label_wrap_gen(width = 20)) +
ylim(0, 2000) +
labs(x = "", y = "Mean Duration (ms)") +
ggtitle("Average Duration of Fixations by Disruption Category and Group") +
scale_fill_brewer(palette = "RdBu") +
theme_cowplot() +
theme(
legend.position = "none",
strip.text = element_text(size = 10)
)
# Display plots
plot_overall
plot_category
##################### REPEATED MEASURES ANOVA ########################
# Perform the repeated-measures ANOVA with `mean_duration_ms` as the dependent variable
anova_afex <- afex::aov_ez(
id = "Participant",  # Random effect
dv = "mean_duration_ms",  # Dependent variable
between = "Group",  # Between-subject factor
within = "Disruption_Category",  # Within-subject factor
data = disruption_summary
)
# Extract the ANOVA table
anova_results <- as.data.frame(anova_afex$anova_table)
# Recalculate generalized eta squared (η²)
eta_squared_results <- effectsize::eta_squared(anova_afex, partial = FALSE)
# Combine recalculated eta squared with the ANOVA table
anova_table_apa <- anova_results %>%
rownames_to_column(var = "Effect") %>%  # Move row names to a column
left_join(
as.data.frame(eta_squared_results),
by = c("Effect" = "Parameter")  # Match the correct columns
) %>%
mutate(
`F` = round(`F`, 2),  # Round F-values
`η²` = round(Eta2, 3),  # Round generalized eta squared
`p-value` = ifelse(
`Pr(>F)` < 0.05, "< .05", round(`Pr(>F)`, 3)  # Format p-values
)
) %>%
select(Effect, `num Df`, `den Df`, `F`, `p-value`, `η²`)  # Order columns, place η² last
# Display the ANOVA table
kable(
anova_table_apa,
caption = "Repeated-Measures ANOVA Results for Average Duration (Including Effect Sizes)",
col.names = c("Effect", "Df1", "Df2", "F", "p", "η²"),
digits = 2
) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### POST-HOC TESTS Group (between-subject factor) ########################
# Perform post-hoc pairwise comparisons for Group (between-subject factor)
post_hoc_group <- emmeans(anova_afex, pairwise ~ Group)
# Calculate Cohen's d manually
# Extract group means, standard deviations, and sample sizes from the data
group_stats <- individual_summary %>%
group_by(Group) %>%
summarise(
Mean = mean(mean_duration, na.rm = TRUE),
SD = sd(mean_duration, na.rm = TRUE),
N = n(),
.groups = "drop"
)
# Calculate pooled standard deviation for Cohen's d
pooled_sd <- sqrt(
((group_stats$N[1] - 1) * group_stats$SD[1]^2 + (group_stats$N[2] - 1) * group_stats$SD[2]^2) /
(sum(group_stats$N) - 2)
)
# Calculate Cohen's d
cohen_d <- round((group_stats$Mean[1] - group_stats$Mean[2]) / pooled_sd, 2)
# Add Cohen's d to the post-hoc results table
post_hoc_results_group <- as.data.frame(post_hoc_group$contrasts) %>%
mutate(
Comparison = gsub("_", " ", contrast),  # Replace underscores with spaces
Estimate = round(estimate, 2),
SE = round(SE, 2),
t = round(t.ratio, 2),
df = round(df, 2),
p.value = ifelse(p.value < 0.05, "< .05", round(p.value, 2)),
`Cohen's d` = cohen_d
) %>%
select(Comparison, Estimate, SE, df, t, p.value, `Cohen's d`)
##################### TABLE FOR GROUP ########################
# Display the post-hoc test results for Group
knitr::kable(
post_hoc_results_group,
caption = "Post-Hoc Pairwise Comparisons for Group (Including Effect Sizes)",
col.names = c("Comparison", "Estimate", "SE", "df", "t", "p", "Cohen's d"),
digits = 2
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### POST-HOC TESTS Disruption_Category (within-subject factor) ########################
# Perform post-hoc pairwise comparisons for Disruption_Category (within-subject factor)
post_hoc_disruption <- emmeans(anova_afex, pairwise ~ Disruption_Category)
# Extract post-hoc pairwise contrasts for Disruption_Category
post_hoc_results_disruption <- as.data.frame(post_hoc_disruption$contrasts) %>%
mutate(
Comparison = gsub("_", " ", contrast),  # Replace underscores with spaces
Comparison = gsub("\\.", " ", Comparison), # Replace periods with spaces
Estimate = round(estimate, 2),
SE = round(SE, 2),
t = round(t.ratio, 2),
p.value = ifelse(p.value < 0.05, "< .05", round(p.value, 2))
)
##################### COHEN'S D CALCULATION ########################
# Define the disruption categories
categories <- c("Lack of eagerness to learn", "Physical disruptions", "Verbal disruptions")
# Initialize an empty list to store the Cohen's d values
cohen_d_values <- vector("list", length = nrow(post_hoc_results_disruption))
# Loop over the post-hoc results to calculate Cohen's d for each comparison
for (i in 1:nrow(post_hoc_results_disruption)) {
# Extract the two categories being compared
group1 <- strsplit(post_hoc_results_disruption$Comparison[i], " - ")[[1]][1]
group2 <- strsplit(post_hoc_results_disruption$Comparison[i], " - ")[[1]][2]
# Calculate Cohen's d for the pair of categories
d_value <- CohenD(
x = disruption_summary$mean_duration_ms[disruption_summary$Disruption_Category == group1],
y = disruption_summary$mean_duration_ms[disruption_summary$Disruption_Category == group2],
na.rm = TRUE
)
# Store the absolute value of Cohen's d
cohen_d_values[[i]] <- abs(round(d_value, 2))  # Take the absolute value of Cohen's d
}
# Add the Cohen's d values to the post-hoc results
post_hoc_results_disruption$Cohen_d <- unlist(cohen_d_values)
##################### TABLE FOR DISRUPTION CATEGORY ########################
# Ensure the number of column names matches the number of columns in the dataframe
post_hoc_results_disruption <- post_hoc_results_disruption %>%
select(Comparison, Estimate, SE, df, t, p.value, Cohen_d)
# Displaying the table
knitr::kable(
post_hoc_results_disruption,
caption = "Post-Hoc Pairwise Comparisons for Disruption Categories (Including Effect Sizes)",
col.names = c("Comparison", "Estimate", "SE", "df", "t", "p", "Cohen's d"),
digits = 2
) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
