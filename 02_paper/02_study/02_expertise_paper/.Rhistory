for (category in unique(df_ttff_disrup$Disruption_Category)) {
cat_data <- df_ttff_disrup %>% filter(Disruption_Category == category)
t_cat <- t.test(Disrup_time_fixation_sec ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(Disrup_time_fixation_sec ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single table
category_stats <- do.call(rbind, category_results)
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Combine results into a single data frame and fix column names
category_stats <- do.call(rbind, category_results) %>%
rename(
"Disruption Category" = Disruption.Category
)
# Display the final table with unique column names
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Combine results into a single data frame and set "Group Comparison" column
category_stats <- do.call(rbind, category_results) %>%
select(-Disruption.Category) %>%  # Remove the original redundant column
mutate("Group Comparison" = "Experts vs. Novices") %>%  # Add the new column
relocate("Group Comparison", .before = "t.value")  # Place the new column at the start
# Display the final table with unique column names and the new Group Comparison column
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Combine results into a single data frame, add Group Comparison column, and rename columns
category_stats <- do.call(rbind, category_results) %>%
select(-Disruption.Category) %>%  # Remove the duplicated "Disruption Category" column if still present
mutate("Group Comparison" = "Experts vs. Novices") %>%  # Add the "Group Comparison" column
relocate("Group Comparison", .after = "Disruption Category")  # Move "Group Comparison" after "Disruption Category"
# Renaming columns to ensure clarity and correct ordering
category_stats <- category_stats %>%
rename("Disruption Category" = "Disruption.Category")  # Rename the column appropriately
# Combine results into a single data frame, add Group Comparison column, and rename columns
category_stats <- do.call(rbind, category_results) %>%
select(-Disruption.Category) %>%  # Remove the duplicated "Disruption Category" column if still present
mutate("Group Comparison" = "Experts vs. Novices") %>%  # Add the "Group Comparison" column
relocate("Group Comparison", .after = "Disruption Category")  # Move "Group Comparison" after "Disruption Category"
##################### TIME TO FIRST FIXATION ########################
# Define disruptions and categories
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Data Preparation
df_ttff_disrup <- df_aoi %>%
filter(TOI %in% c(verbal_disruptions, physical_disruptions, lack_of_eagerness)) %>%
dplyr::select(
Participant,
TOI,
Time_to_first_fixation.Disruptive_Person
) %>%
mutate(
Group = ifelse(Participant < 200, "Novice", "Expert"),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(Disruption_Category)) %>% # Keep only rows with valid categories
drop_na() %>%
filter(
Time_to_first_fixation.Disruptive_Person > 0, # Exclude zero fixation times
Time_to_first_fixation.Disruptive_Person <= 30000 # Cut-off at 30 seconds
) %>%
mutate(
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person / 1000, 2)
)
# Step 2: Descriptive Statistics
ttff_disrup_table <- df_ttff_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Min in sec" = round(min(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Max in sec" = round(max(Disrup_time_fixation_sec, na.rm = TRUE), 2)
)
knitr::kable(ttff_disrup_table,
caption = "N, M, SD, Min & Max Time to First Fixation in Seconds (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 3: Split Data by Disruption Categories
disruption_summary <- df_ttff_disrup %>%
group_by(Group, Disruption_Category) %>%
summarise(
Mean_Time_to_Fixation = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
SD_Time_to_Fixation = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Step 4: Plotting Time to First Fixation by Group and Overall
# a) By Group
plot_time_disrup <- df_ttff_disrup %>%
ggplot(mapping = aes(x = Group, y = Disrup_time_fixation_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.7, width = 0.1, height = 0.1) +
labs(x = "", y = "Time to First Fixation (sec)") +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Time to First Fixation\n(AOI Disruptive Person)") +
theme_apa() +
theme(legend.position = "none")
plot_time_disrup
# b) By Disruption Category
plot_time_category <- df_ttff_disrup %>%
ggplot(mapping = aes(x = Group, y = Disrup_time_fixation_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.7, width = 0.1, height = 0.1) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) +
labs(x = "", y = "Time to First Fixation (sec)") +
ggtitle("Time to First Fixation by Disruption Category\n(AOI Disruptive Person)") +
scale_fill_brewer(palette = "RdBu") +
theme_apa() +
theme(
legend.position = "none",
strip.text = element_text(size = 10)
)
plot_time_category
# Step 5: Statistical Tests
# a) Overall t-Test and Cohen's d
t_test_overall <- t.test(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup, var.equal = TRUE)
d_overall <- cohen.d(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup)
# Format results into a tidy table
overall_stats <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_overall$statistic, 2),
"df" = t_test_overall$parameter,
"p-value" = round(t_test_overall$p.value, 3),
"Mean Difference" = round(t_test_overall$estimate[1] - t_test_overall$estimate[2], 2),
"Cohen's d" = round(d_overall$estimate, 2),
"95% CI (d)" = paste0("[", round(d_overall$conf.int[1], 2), ", ", round(d_overall$conf.int[2], 2), "]")
)
knitr::kable(overall_stats,
caption = "t-Test and Effect Size for Time to First Fixation (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# b) By Category
category_results <- list()
for (category in unique(df_ttff_disrup$Disruption_Category)) {
cat_data <- df_ttff_disrup %>% filter(Disruption_Category == category)
t_cat <- t.test(Disrup_time_fixation_sec ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(Disrup_time_fixation_sec ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single data frame, add Group Comparison column, and reorder columns as needed
category_stats <- do.call(rbind, category_results) %>%
mutate("Group Comparison" = "Experts vs. Novices") %>%  # Add the "Group Comparison" column
rename("Disruption Category" = "Disruption.Category") %>%  # Rename the column to "Disruption Category"
relocate("Group Comparison", .before = "t-value")  # Place "Group Comparison" before the t-test statistics
# Combine results into a single data frame and add the "Group Comparison" column
category_stats <- do.call(rbind, category_results) %>%
mutate("Group Comparison" = "Experts vs. Novices") %>%  # Add the "Group Comparison" column
rename("Disruption Category" = "Disruption.Category")   # Rename column if needed
# Reorder columns explicitly
category_stats <- category_stats[, c("Disruption Category", "Group Comparison", "t-value", "df", "p-value",
"Mean Difference", "Cohen's d", "95% CI (d)")]
# Combine results into a single data frame and add the "Group Comparison" column
category_stats <- do.call(rbind, category_results) %>%
mutate("Group Comparison" = "Experts vs. Novices") %>%
rename("Disruption Category" = "Disruption.Category")  # Adjust name if needed
# Check column names and set the order explicitly based on actual column names in category_stats
actual_columns <- names(category_stats)  # Store actual column names
# Define the desired order based on expected column names
desired_order <- c("Disruption Category", "Group Comparison", "t-value", "df", "p-value",
"Mean Difference", "Cohen's d", "95% CI (d)")
# Filter out columns that don't exist in category_stats and apply the reordering
final_columns <- desired_order[desired_order %in% actual_columns]
category_stats <- category_stats[, final_columns]
# Display the final table in APA style
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### TIME TO FIRST FIXATION ########################
# Define disruptions and categories
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Data Preparation
df_ttff_disrup <- df_aoi %>%
filter(TOI %in% c(verbal_disruptions, physical_disruptions, lack_of_eagerness)) %>%
dplyr::select(
Participant,
TOI,
Time_to_first_fixation.Disruptive_Person
) %>%
mutate(
Group = ifelse(Participant < 200, "Novice", "Expert"),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(Disruption_Category)) %>% # Keep only rows with valid categories
drop_na() %>%
filter(
Time_to_first_fixation.Disruptive_Person > 0, # Exclude zero fixation times
Time_to_first_fixation.Disruptive_Person <= 30000 # Cut-off at 30 seconds
) %>%
mutate(
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person / 1000, 2)
)
# Step 2: Descriptive Statistics
ttff_disrup_table <- df_ttff_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Min in sec" = round(min(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Max in sec" = round(max(Disrup_time_fixation_sec, na.rm = TRUE), 2)
)
knitr::kable(ttff_disrup_table,
caption = "N, M, SD, Min & Max Time to First Fixation in Seconds (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 3: Split Data by Disruption Categories
disruption_summary <- df_ttff_disrup %>%
group_by(Group, Disruption_Category) %>%
summarise(
Mean_Time_to_Fixation = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
SD_Time_to_Fixation = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Step 4: Plotting Time to First Fixation by Group and Overall
# a) By Group
plot_time_disrup <- df_ttff_disrup %>%
ggplot(mapping = aes(x = Group, y = Disrup_time_fixation_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.7, width = 0.1, height = 0.1) +
labs(x = "", y = "Time to First Fixation (sec)") +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Time to First Fixation\n(AOI Disruptive Person)") +
theme_apa() +
theme(legend.position = "none")
plot_time_disrup
# b) By Disruption Category
plot_time_category <- df_ttff_disrup %>%
ggplot(mapping = aes(x = Group, y = Disrup_time_fixation_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.7, width = 0.1, height = 0.1) +
facet_wrap(~Disruption_Category, scales = "free", labeller = label_wrap_gen(width = 15)) +
labs(x = "", y = "Time to First Fixation (sec)") +
ggtitle("Time to First Fixation by Disruption Category\n(AOI Disruptive Person)") +
scale_fill_brewer(palette = "RdBu") +
theme_apa() +
theme(
legend.position = "none",
strip.text = element_text(size = 10)
)
plot_time_category
# Step 5: Statistical Tests
# a) Overall t-Test and Cohen's d
t_test_overall <- t.test(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup, var.equal = TRUE)
d_overall <- cohen.d(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup)
# Format results into a tidy table
overall_stats <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"t-value" = round(t_test_overall$statistic, 2),
"df" = t_test_overall$parameter,
"p-value" = round(t_test_overall$p.value, 3),
"Mean Difference" = round(t_test_overall$estimate[1] - t_test_overall$estimate[2], 2),
"Cohen's d" = round(d_overall$estimate, 2),
"95% CI (d)" = paste0("[", round(d_overall$conf.int[1], 2), ", ", round(d_overall$conf.int[2], 2), "]")
)
knitr::kable(overall_stats,
caption = "t-Test and Effect Size for Time to First Fixation (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# b) By Category
category_results <- list()
for (category in unique(df_ttff_disrup$Disruption_Category)) {
cat_data <- df_ttff_disrup %>% filter(Disruption_Category == category)
t_cat <- t.test(Disrup_time_fixation_sec ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(Disrup_time_fixation_sec ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single table
category_stats <- do.call(rbind, category_results)
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
##################### TIME TO FIRST FIXATION ########################
# Define disruptions and categories
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Data Preparation
df_ttff_disrup <- df_aoi %>%
filter(TOI %in% c(verbal_disruptions, physical_disruptions, lack_of_eagerness)) %>%
dplyr::select(
Participant,
TOI,
Time_to_first_fixation.Disruptive_Person
) %>%
mutate(
Group = ifelse(Participant < 200, "Novice", "Expert"),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(Disruption_Category)) %>% # Keep only rows with valid categories
drop_na() %>%
filter(
Time_to_first_fixation.Disruptive_Person > 0, # Exclude zero fixation times
Time_to_first_fixation.Disruptive_Person <= 30000 # Cut-off at 30 seconds
) %>%
mutate(
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person / 1000, 2)
)
# Step 2: Descriptive Statistics
ttff_disrup_table <- df_ttff_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Min in sec" = round(min(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Max in sec" = round(max(Disrup_time_fixation_sec, na.rm = TRUE), 2)
)
knitr::kable(ttff_disrup_table,
caption = "N, M, SD, Min & Max Time to First Fixation in Seconds (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 3: Overall t-Test and Cohen's d for use in annotations
t_test_overall <- t.test(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup, var.equal = TRUE)
d_overall <- cohen.d(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup)
mean_novice <- round(mean(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Novice"]), 2)
sd_novice <- round(sd(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Novice"]), 2)
mean_expert <- round(mean(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Expert"]), 2)
sd_expert <- round(sd(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Expert"]), 2)
p_value_overall <- round(t_test_overall$p.value, 3)
cohen_d_overall <- round(d_overall$estimate, 2)
# Step 4: Plotting Time to First Fixation by Group
y_max <- max(df_ttff_disrup$Disrup_time_fixation_sec) * 1.2  # Adjust y-axis for annotations
plot_time_disrup <- df_ttff_disrup %>%
ggplot(mapping = aes(x = Group, y = Disrup_time_fixation_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.7, width = 0.1, height = 0.1) +
labs(x = "", y = "Time to First Fixation (sec)") +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Time to First Fixation\n(AOI Disruptive Person)") +
theme_apa() +
theme(legend.position = "none") +
annotate("text", x = 1, y = y_max * 0.85,
label = paste0("atop(italic(M) == ", mean_novice, ", italic(SD) == ", sd_novice, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
annotate("text", x = 2, y = y_max * 0.85,
label = paste0("atop(italic(M) == ", mean_expert, ", italic(SD) == ", sd_expert, ")"),
hjust = 0.5, size = 3.5, vjust = -0.5, parse = TRUE) +
annotate("text", x = 1.5, y = y_max * 0.95,
label = paste0("p = ", p_value_overall, "\nd = ", cohen_d_overall),
hjust = 0.5, size = 4, fontface = "italic")
plot_time_disrup
# Step 5: Statistical Tests by Disruption Category
category_results <- list()
for (category in unique(df_ttff_disrup$Disruption_Category)) {
cat_data <- df_ttff_disrup %>% filter(Disruption_Category == category)
t_cat <- t.test(Disrup_time_fixation_sec ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(Disrup_time_fixation_sec ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Group Comparison" = "Experts vs. Novices",  # Fixed column name and value for the first column
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single table
category_stats <- do.call(rbind, category_results) %>%
relocate("Group Comparison", .before = "t-value")  # Move "Group Comparison" before t-value
##################### TIME TO FIRST FIXATION ########################
# Define disruptions and categories
verbal_disruptions <- c("Chatting_with_neighbour", "Heckling", "Whispering")
physical_disruptions <- c("Clicking_pen", "Drumming_with_hands", "Snipping_with_fingers")
lack_of_eagerness <- c("Looking_at_phone", "Head_on_table", "Drawing")
# Step 1: Data Preparation
df_ttff_disrup <- df_aoi %>%
filter(TOI %in% c(verbal_disruptions, physical_disruptions, lack_of_eagerness)) %>%
dplyr::select(
Participant,
TOI,
Time_to_first_fixation.Disruptive_Person
) %>%
mutate(
Group = ifelse(Participant < 200, "Novice", "Expert"),
Disruption_Category = case_when(
TOI %in% verbal_disruptions ~ "Verbal disruptions",
TOI %in% physical_disruptions ~ "Physical disruptions",
TOI %in% lack_of_eagerness ~ "Lack of eagerness to learn",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(Disruption_Category)) %>% # Keep only rows with valid categories
drop_na() %>%
filter(
Time_to_first_fixation.Disruptive_Person > 0, # Exclude zero fixation times
Time_to_first_fixation.Disruptive_Person <= 30000 # Cut-off at 30 seconds
) %>%
mutate(
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person / 1000, 2)
)
# Step 2: Descriptive Statistics
ttff_disrup_table <- df_ttff_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Min in sec" = round(min(Disrup_time_fixation_sec, na.rm = TRUE), 2),
"Max in sec" = round(max(Disrup_time_fixation_sec, na.rm = TRUE), 2)
)
knitr::kable(ttff_disrup_table,
caption = "N, M, SD, Min & Max Time to First Fixation in Seconds (AOI Disruptive Person)") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Step 3: Split Data by Disruption Categories
disruption_summary <- df_ttff_disrup %>%
group_by(Group, Disruption_Category) %>%
summarise(
Mean_Time_to_Fixation = round(mean(Disrup_time_fixation_sec, na.rm = TRUE), 2),
SD_Time_to_Fixation = round(sd(Disrup_time_fixation_sec, na.rm = TRUE), 2),
.groups = "drop"
)
# Step 4: Plotting Time to First Fixation by Group and Overall
# a) By Group
y_max <- max(df_ttff_disrup$Disrup_time_fixation_sec, na.rm = TRUE) * 1.2
# Calculate mean and SD for Experts and Novices
mean_expert_ttff <- mean(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Expert"], na.rm = TRUE)
sd_expert_ttff <- sd(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Expert"], na.rm = TRUE)
mean_novice_ttff <- mean(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Novice"], na.rm = TRUE)
sd_novice_ttff <- sd(df_ttff_disrup$Disrup_time_fixation_sec[df_ttff_disrup$Group == "Novice"], na.rm = TRUE)
# Conduct t-test and calculate Cohen's d for the overall data
t_test_overall <- t.test(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup, var.equal = TRUE)
p_value_ttff <- round(t_test_overall$p.value, 3)
d_overall <- cohen.d(Disrup_time_fixation_sec ~ Group, data = df_ttff_disrup)
cohen_d_ttff <- round(d_overall$estimate, 2)
# Annotated Plot
plot_time_disrup <- df_ttff_disrup %>%
ggplot(mapping = aes(x = Group, y = Disrup_time_fixation_sec, fill = Group)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.7, width = 0.1, height = 0.1) +
ylim(0, y_max) +
labs(x = "", y = "Time to First Fixation (sec)") +
scale_fill_brewer(palette = "RdBu") +
ggtitle("Time to First Fixation\n(AOI Disruptive Person)") +
theme_apa() +
theme(legend.position = "none") +
# Annotate means and SDs for Experts and Novices
annotate("text", x = 1, y = y_max * 0.85,
label = paste0("M = ", round(mean_expert_ttff, 2), "\nSD = ", round(sd_expert_ttff, 2)),
hjust = 0.5, size = 4.5, fontface = "italic") +
annotate("text", x = 2, y = y_max * 0.85,
label = paste0("M = ", round(mean_novice_ttff, 2), "\nSD = ", round(sd_novice_ttff, 2)),
hjust = 0.5, size = 4.5, fontface = "italic") +
# Annotate p-value and Cohen's d between the groups
annotate("text", x = 1.5, y = y_max * 0.95,
label = paste0("p = ", p_value_ttff, "\nd = ", cohen_d_ttff),
hjust = 0.5, size = 4.5, fontface = "italic")
# Display the final plot with improved readability
plot_time_disrup
# Step 5: Statistical Tests by Category
category_results <- list()
for (category in unique(df_ttff_disrup$Disruption_Category)) {
cat_data <- df_ttff_disrup %>% filter(Disruption_Category == category)
t_cat <- t.test(Disrup_time_fixation_sec ~ Group, data = cat_data, var.equal = TRUE)
d_cat <- cohen.d(Disrup_time_fixation_sec ~ Group, data = cat_data)
category_results[[category]] <- data.frame(
"Group Comparison" = "Experts vs. Novices",
"Disruption Category" = category,
"t-value" = round(t_cat$statistic, 2),
"df" = t_cat$parameter,
"p-value" = round(t_cat$p.value, 3),
"Mean Difference" = round(t_cat$estimate[1] - t_cat$estimate[2], 2),
"Cohen's d" = round(d_cat$estimate, 2),
"95% CI (d)" = paste0("[", round(d_cat$conf.int[1], 2), ", ", round(d_cat$conf.int[2], 2), "]")
)
}
# Combine results into a single table
category_stats <- do.call(rbind, category_results)
knitr::kable(category_stats,
caption = "t-Test and Effect Size for Time to First Fixation by Disruption Category") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
