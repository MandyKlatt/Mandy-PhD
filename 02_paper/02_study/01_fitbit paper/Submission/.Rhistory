height = 15,
units = "cm")
df_regression <-
main_single_hr %>%
filter(time_span != "overall") %>%
dplyr::select("ID", "time_span","time","heart_rate_std","heart_rate") %>%
distinct() %>%
mutate(time = time / 60) %>%
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
)
)
fix_models <-
df_regression %>%
split(.$Phase) %>%
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) %>%
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") %>%
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) %>%
bind_rows(.id = "Phase") %>%
pivot_wider(names_from = type,
values_from = value)
p.values_slope <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$slope,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_slope")
p.values_intercept <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$intercept,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_intercept")
sd_mean <-
fix_models %>%
group_by(Phase) %>%
dplyr::summarise(
mean_slope = mean(slope),
sd_slope = sd(slope),
mean_intercept = mean(intercept),
sd_intercept = sd(intercept)
)
table_data <-
right_join(x = sd_mean,
y = p.values_intercept,
by = "Phase") %>%
right_join(x = .,
y = p.values_slope,
by = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(mean_intercept, digits = 3),
`SD(Intercept)` = round(sd_intercept, digits = 3),
`p-Value (Intercept)` = p.value_intercept,
`Mean(Slope)` = round(mean_slope, digits = 3),
`SD(Slope)` = round(sd_slope,digits = 3),
`p-Value (Slope)` = p.value_slope,
) %>%
arrange(Phase)
View(table_data)
table_data <-
right_join(x = sd_mean,
y = p.values_intercept,
by = "Phase") |>
right_join(x = .,
y = p.values_slope,
by = "Phase") |>
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase")
),
n = c(6896,
7150,
6664,
6287,
5990),
`Mean(Intercept)` = round(mean_intercept,
digits = 3),
`SD(Intercept)` = round(sd_intercept,
digits = 3),
`p-Value (Intercept)` = p.value_intercept,
`Mean(Slope)` = round(mean_slope,
digits = 3),
`SD(Slope)` = round(sd_slope,
digits = 3),
`p-Value (Slope)` = p.value_slope,
) |>
arrange(Phase)
p.values_intercept <-
fix_models |>
split(Phase) |>
map( ~ t.test(x = .$intercept,
mu = 0)$p.value) |>
bind_rows(.id = "Phase") |>
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_intercept")
df_regression <-
main_single_hr |>
filter(time_span != "overall") |>
dplyr::select("ID",
"time_span",
"time",
"heart_rate_std",
"heart_rate") |>
distinct() |>
mutate(time = time / 60) |>
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation",
"teaching",
"post",
"interview",
"end"),
labels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase")
)
)
fix_models <-
df_regression |>
split(.$Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
fix_models <-
df_regression |>
split(Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
fix_models <-
df_regression |>
split(.$Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
df_regression <-
main_single_hr |>
filter(time_span != "overall") |>
dplyr::select("ID",
"time_span",
"time",
"heart_rate_std",
"heart_rate") |>
distinct() |>
mutate(time = time / 60) |>
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation",
"teaching",
"post",
"interview",
"end"),
labels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase")
)
)
View(df_regression)
fix_models <-
df_regression |>
split(Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
fix_models <-
df_regression |>
split(Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) |>
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
fix_models <-
df_regression |>
split(.$Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) |>
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
needs(ltm,
broom,
ppcor,
jtools,
lm.beta,
tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
viridis,
stargazer,
papaja,
grid,
purrr)
fix_models <-
df_regression |>
split(.$Phase) |>
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) |>
map(
~ coef(.) |>
tibble::as_tibble(.,
rownames = "name") |>
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type,
values_from = value)
fix_models <-
df_regression |>
split(.$Phase) |>
map(~ lm(formula = heart_rate_std ~ 0 + ID + time:ID, data = .)) |>
map(~ coef(.) %>%
tibble::enframe(name = "name", value = "value") |>
transmute(
type = if_else(str_detect(name, ":"), "slope", "intercept"),
id = str_remove_all(name, "[^[:digit:]]"),
value = value
)
) |>
bind_rows(.id = "Phase") |>
pivot_wider(names_from = type, values_from = value)
fix_models <-
df_regression %>%
split(.$Phase) %>%
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) %>%
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") %>%
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) %>%
bind_rows(.id = "Phase") %>%
pivot_wider(names_from = type,
values_from = value)
df_regression <-
main_single_hr |>
filter(time_span != "overall") |>
dplyr::select("ID",
"time_span",
"time",
"heart_rate_std",
"heart_rate") |>
distinct() |>
mutate(time = time / 60) |>
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation",
"teaching",
"post",
"interview",
"end"),
labels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase")
)
)
fix_models <-
df_regression %>%
split(.$Phase) %>%
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) %>%
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") %>%
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) %>%
bind_rows(.id = "Phase") %>%
pivot_wider(names_from = type,
values_from = value)
fix_models <-
df_regression %>%
split(.$Phase) %>%
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) %>%
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") %>%
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) %>%
bind_rows(.id = "Phase") %>%
pivot_wider(names_from = type,
values_from = value)
p.values_slope <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$slope,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_slope")
p.values_slope <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$slope,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_slope")
p.values_intercept <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$intercept,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_intercept")
sd_mean <-
fix_models %>%
group_by(Phase) %>%
dplyr::summarise(
mean_slope = mean(slope),
sd_slope = sd(slope),
mean_intercept = mean(intercept),
sd_intercept = sd(intercept)
)
table_data <-
right_join(x = sd_mean,
y = p.values_intercept,
by = "Phase") %>%
right_join(x = .,
y = p.values_slope,
by = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(mean_intercept, digits = 3),
`SD(Intercept)` = round(sd_intercept, digits = 3),
`p-Value (Intercept)` = p.value_intercept,
`Mean(Slope)` = round(mean_slope, digits = 3),
`SD(Slope)` = round(sd_slope,digits = 3),
`p-Value (Slope)` = p.value_slope,
) %>%
arrange(Phase)
table_data$n[table_data$Phase == "Pre Teaching Phase"] <- df_regression %>% filter(Phase == "Pre Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Teaching Phase"] <- df_regression %>% filter(Phase == "Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Post Teaching Phase"] <- df_regression %>% filter(Phase == "Post Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Interview Phase"] <- df_regression %>% filter(Phase == "Interview Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "End Phase"] <- df_regression %>% filter(Phase == "End Phase") %>% pull(heart_rate_std) %>% length()
