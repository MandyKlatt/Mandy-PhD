# # format and insert table in manuscript
# descrip_hr_phases %>%
# papaja::apa_table(
#   caption = "Mean, SD and range for teachers' heart rate in individual phases",
#   # note = "Write Note here",
#   escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
#   placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
#   font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
#   )
# Mean, SD and range for disruption and confidence factor
rating_table <-
df_rating %>%
filter(!is.na(confidence_factor),
!is.na(disruption_factor)) %>%
summarise(N = n_distinct(ID),
"M disruption factor" = round(mean(disruption_factor),
digits = 2),
"SD disruption factor" = round(sd(disruption_factor),
digits = 2),
"Min disruption factor" = min(disruption_factor),
"Max disruption factor" = max(disruption_factor),
"M confidence factor" = round(mean(confidence_factor),
digits = 2),
"SD confidence factor" = round(sd(confidence_factor),
digits = 2),
"Min confidence factor" = min(confidence_factor),
"Max confidence factor" = max(confidence_factor)
)
desc_hr_phases <- bind_rows(x = descrip_hr_overall,
y = descrip_hr_phases) |>
select(-N) |>
rename(`M HR` = `M heart rate in bpm`,
`SD HR` = `SD heart rate in bpm`,
`Min` = `Min heart rate in bpm`,
`Max` = `Max heart rate in bpm`,
Interval = time_span) |>
select(c(Interval,
`M HR`,
`SD HR`,
`Min`,
`Max`)
)
descrip_hr_overall_std <- descrip_hr_overall_std |>
rename(`M HR` = `M std heart rate in bpm`,
`SD HR` = `SD std heart rate in bpm`,
`Min` = `Min std heart rate in bpm`,
`Max` = `Max heart rate in bpm`,
) |>
mutate(Interval = 'overall')
descrip_hr_phases_std <-  descrip_hr_phases_std |>
rename(`M HR` = `M heart rate in bpm`,
`SD HR` = `SD heart rate in bpm`,
`Min` = `Min heart rate in bpm`,
`Max` = `Max heart rate in bpm`,
Interval = time_span)
desc_hr_phases_std <- bind_rows(x = descrip_hr_overall_std,
y = descrip_hr_phases_std) |>
select(-N) |>
select(c(Interval,
`M HR`,
`SD HR`,
`Min`,
`Max`)
)
desc_hr_phases[1, 1] <- 'overall'
df_desc_hr <- desc_hr_phases |>
mutate(across(everything(),
~ paste(.,
desc_hr_phases_std[[cur_column()]],
sep = "/")
)
) #|>
df_desc_hr$Interval <- c('Overall Course of 2h',
'Pre-teaching interval',
'Teaching interval',
'Post-teaching interval',
'Interview interval',
'End Interval')
names(desc_hr_phases) <- paste0("\\textit{", names(df_desc_hr),"}")
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
names(df_desc_hr) <- paste0("\\textit{", names(df_desc_hr),"}")
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
# Anwenden des Regex
tab_1_new <- str_replace_all(cat(tab_1), pattern, replacement)
pattern <- "textit\\\\\\{([^}]*)\\\\\\}"
replacement <- "textit{\\1}"
# Anwenden des Regex
tab_1_new <- str_replace_all(cat(tab_1), pattern, replacement)
tab_1
# Anwenden des Regex
tab_1_new <- str_replace_all(tab_1, pattern, replacement)
print(tab_1_new)
writeLines(tab_1_new, 'tab_1.tex')
tab_1_new
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
pattern <- "textit\\\\\\{([^}]*)\\\\\\}"
replacement <- "\textit{\\1}"
# Anwenden des Regex
tab_1_new <- str_replace_all(tab_1, pattern, replacement)
tab_1_new
writeLines(tab_1_new, 'tab_1.tex')
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
pattern <- "textit\\\\\\{([^}]*)\\\\\\}"
replacement <- "\\textit{\\1}"
# Anwenden des Regex
tab_1_new <- str_replace_all(tab_1, pattern, replacement)
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
pattern <- "textit\\\\\\{([^}]*)\\\\\\}"
replacement <- "\\textit{\\1}"
# Anwenden des Regex
tab_1_new <- str_replace_all(tab_1, pattern, replacement)
tab_1_new
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
pattern <- "textit\\\\\\{([^}]*)\\\\\\}"
replacement <- "\textit{\\1}"
# Anwenden des Regex
tab_1_new <- str_replace_all(tab_1, pattern, replacement)
tab_1_new
writeLines(tab_1_new, 'tab_1.tex')
tab_1_new
cat(tab_1_new)
print(tab_1_new)
paste(tab_1_new, collapse = '\n')
paste(tab_1_new)
paste(tab_1_new, collapse = '')
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE
) -> tab_1
pattern <- "textit\\\\\\{([^}]*)\\\\\\}"
replacement <- "\textit{\\1}"
# Anwenden des Regex
tab_1_new <- str_replace_all(tab_1, pattern, replacement)
paste(tab_1_new, collapse = '')
writeLines(tab_1_new, 'tab_1.tex')
paste(tab_1_new, collapse = '')
library(needs)
needs(ltm,
broom,
ppcor,
jtools,
lm.beta,
tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
viridis,
stargazer)
?stargazer
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE,
style = 'aer'
) -> tab_1
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE,
style = 'aer'
) -> tab_1
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
library(needs)
needs(ltm,
broom,
ppcor,
jtools,
lm.beta,
tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
viridis,
stargazer)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
"disruption_factor", # -99 = subject did not notice event; -100 = experimenter did not asked for event
"confidence_factor",
"event"
) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confidence_factor = ifelse(confidence_factor < 0,
yes = NA,
no = confidence_factor),
event = as_factor(event)
)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = factor(LI02_01_1,
levels = 1:2,
labels = c("male","female")
),
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
# rm(list = c("df_demo","df_rating"))
data_path <- "data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .),
id = "id",
col_types = c("t","n")
) %>%
mutate(time = .$Time - min(.$Time),
time = as.numeric(time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "end",
str_detect(string = id, pattern = "_m") ~ "teaching",
str_detect(string = id, pattern = "_p") ~ "preparation",
str_detect(string = id, pattern = "_s") ~ "post",
str_detect(string = id, pattern = "_i") ~ "interview",
TRUE ~ "overall"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(ID)
) %>%
# filter(time <= 600) %>% # filter for 10min intervals
filter(time <= 7200) %>% # filter for 2 hours (maximal duration of study)
dplyr::select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
main <-
main %>%
dplyr::select("time", "heart_rate", "ID", "time_span") %>%
distinct() %>%
group_by(ID) %>%
dplyr::summarise(mean_heart = mean(heart_rate),
sd_heart = sd(heart_rate)) %>%
ungroup() %>%
right_join(x = .,
y = main,
by = "ID") %>%
filter(!(time_span == "teaching" & time > 600)) %>%
mutate(heart_rate_std = (heart_rate - mean_heart)/
sd_heart)
# Mean, SD and range for overall (unstandardized)
descrip_hr_overall <- main %>%
filter(time_span %in% c("overall")) %>%
summarise(N = n_distinct(ID),
"M heart rate in bpm" = round(mean(heart_rate),
digits = 2),
"SD heart rate in bpm" = round(sd(heart_rate),
digits = 2),
"Min heart rate in bpm" = min(heart_rate),
"Max heart rate in bpm" = max(heart_rate)
)
# Mean, SD and range for overall (standardized)
descrip_hr_overall_std <- main %>%
filter(time_span %in% c("overall")) %>%
summarise(N = n_distinct(ID),
"M std heart rate in bpm" = round(mean(heart_rate_std),
digits = 2),
"SD std heart rate in bpm" = round(sd(heart_rate_std),
digits = 2),
"Min std heart rate in bpm" = round(min(heart_rate_std),
digits = 2),
"Max heart rate in bpm" = round(max(heart_rate_std),
digits = 2)
)
# Mean, SD and range for individual phases (unstandardized)
descrip_hr_phases <- main %>%
filter(!time_span %in% c("overall")) %>%
group_by(time_span) %>%
summarise(N = n_distinct(ID),
"M heart rate in bpm" = round(mean(heart_rate),
digits = 2),
"SD heart rate in bpm" = round(sd(heart_rate),
digits = 2),
"Min heart rate in bpm" = min(heart_rate),
"Max heart rate in bpm" = max(heart_rate)
)
# Mean, SD and range for individual phases (standardized)
descrip_hr_phases_std <- main %>%
filter(!time_span %in% c("overall")) %>%
group_by(time_span) %>%
summarise(N = n_distinct(ID),
"M heart rate in bpm" = round(mean(heart_rate_std),
digits = 2),
"SD heart rate in bpm" = round(sd(heart_rate_std),
digits = 2),
"Min heart rate in bpm" = round(min(heart_rate_std),
digits = 2),
"Max heart rate in bpm" = round(max(heart_rate_std),
digits = 2)
)
# # format and insert table in manuscript
# descrip_hr_phases %>%
# papaja::apa_table(
#   caption = "Mean, SD and range for teachers' heart rate in individual phases",
#   # note = "Write Note here",
#   escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
#   placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
#   font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
#   )
# Mean, SD and range for disruption and confidence factor
rating_table <-
df_rating %>%
filter(!is.na(confidence_factor),
!is.na(disruption_factor)) %>%
summarise(N = n_distinct(ID),
"M disruption factor" = round(mean(disruption_factor),
digits = 2),
"SD disruption factor" = round(sd(disruption_factor),
digits = 2),
"Min disruption factor" = min(disruption_factor),
"Max disruption factor" = max(disruption_factor),
"M confidence factor" = round(mean(confidence_factor),
digits = 2),
"SD confidence factor" = round(sd(confidence_factor),
digits = 2),
"Min confidence factor" = min(confidence_factor),
"Max confidence factor" = max(confidence_factor)
)
desc_hr_phases <- bind_rows(x = descrip_hr_overall,
y = descrip_hr_phases) |>
select(-N) |>
rename(`M HR` = `M heart rate in bpm`,
`SD HR` = `SD heart rate in bpm`,
`Min` = `Min heart rate in bpm`,
`Max` = `Max heart rate in bpm`,
Interval = time_span) |>
select(c(Interval,
`M HR`,
`SD HR`,
`Min`,
`Max`)
)
descrip_hr_overall_std <- descrip_hr_overall_std |>
rename(`M HR` = `M std heart rate in bpm`,
`SD HR` = `SD std heart rate in bpm`,
`Min` = `Min std heart rate in bpm`,
`Max` = `Max heart rate in bpm`,
) |>
mutate(Interval = 'overall')
descrip_hr_phases_std <-  descrip_hr_phases_std |>
rename(`M HR` = `M heart rate in bpm`,
`SD HR` = `SD heart rate in bpm`,
`Min` = `Min heart rate in bpm`,
`Max` = `Max heart rate in bpm`,
Interval = time_span)
desc_hr_phases_std <- bind_rows(x = descrip_hr_overall_std,
y = descrip_hr_phases_std) |>
select(-N) |>
select(c(Interval,
`M HR`,
`SD HR`,
`Min`,
`Max`)
)
desc_hr_phases[1, 1] <- 'overall'
df_desc_hr <- desc_hr_phases |>
mutate(across(everything(),
~ paste(.,
desc_hr_phases_std[[cur_column()]],
sep = "/")
)
) #|>
df_desc_hr$Interval <- c('Overall Course of 2h',
'Pre-teaching interval',
'Teaching interval',
'Post-teaching interval',
'Interview interval',
'End Interval')
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE,
style = 'aer'
) -> tab_1
stargazer(df_desc_hr,
type = 'latex',
out = 'tab_1.tex',
summary = FALSE,
rownames = FALSE,
table.placement = 'h',
align = FALSE,
style = 'ajps'
) -> tab_1
install.packages('papaja')
install.packages("papaja")
library(needs)
?apa_table
needs(ltm,
broom,
ppcor,
jtools,
lm.beta,
tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
viridis,
stargazer,
papaja)
?apa_table
apa_table(df_desc_hr)
apa_table(df_desc_hr)
papaja::apa_table(df_desc_hr)
papaja::apa_table(df_desc_hr)
papaja::apa_table(df_desc_hr)
install.packages('remotes')
remotes::install_github('crsh/papaja')
papaja::apa_table(df_desc_hr,
return = TRUE)
tab_1 <- apa_table(df_desc_hr)
tab_1
writeLines(tab_1, 'tab_1.tex')
tab_1 <- apa_table(df_desc_hr)
tab_1
writeLines(tab_1, 'tab_1.tex')
citation('tidyverse')
