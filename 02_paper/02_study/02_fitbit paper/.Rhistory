dplyr::select("ID",
"time_span",
"heart_rate",
"teaching_experience",
"disruption_factor",
"confidence_factor") %>%
mutate(time_span = fct_recode(time_span,
"Pre-Lehrphase" = "pre",
"Lehrphase" = "main",
"Post-Lehrphase" = "subsequent",
"Interviewphase" = "interview",
"Endphase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-Lehrphase",
"Lehrphase",
"Post-Lehrphase",
"Interviewphase",
"Endphase"
)
)
) %>%
distinct() %>%
group_by(ID, time_span) %>%
summarise(mean_hr = mean(heart_rate, na.rm = TRUE),
sd_hr = sd(heart_rate, na.rm = TRUE)
) %>%
group_by(time_span, ID) %>%
identify_outliers(mean_hr)
# exclude extreme outliers
df_plot_mean <-
df_outliers %>%
filter(!mean_hr %in% c("131.7869",
"129.3250",
"137.8485",
"136.9259",
"109.2143",
"110.6800",
"107.0800"))
# data wrangling - preparing data for plotting
df_plot_mean <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("time_span",
"heart_rate") %>%
mutate(time_span = fct_recode(time_span,
"Pre-Lehrphase" = "pre",
"Lehrphase" = "main",
"Post-Lehrphase" = "subsequent",
"Interviewphase" = "interview",
"Endphase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-Lehrphase",
"Lehrphase",
"Post-Lehrphase",
"Interviewphase",
"Endphase"
)
)
) %>%
distinct() %>%
group_by(time_span, ID) %>%
summarise_at(vars(heart_rate),
list(mean_hr = mean,
sd_hr = sd)
) %>%
as.data.frame()
View(df_outliers)
# checking for outliers
df_outliers <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID",
"time_span",
"heart_rate",
"teaching_experience",
"disruption_factor",
"confidence_factor") %>%
mutate(time_span = fct_recode(time_span,
"Pre-Lehrphase" = "pre",
"Lehrphase" = "main",
"Post-Lehrphase" = "subsequent",
"Interviewphase" = "interview",
"Endphase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-Lehrphase",
"Lehrphase",
"Post-Lehrphase",
"Interviewphase",
"Endphase"
)
)
) %>%
distinct() %>%
group_by(ID, time_span) %>%
summarise(mean_hr = mean(heart_rate, na.rm = TRUE),
sd_hr = sd(heart_rate, na.rm = TRUE)
) %>%
group_by(time_span) %>%
identify_outliers(mean_hr)
# exclude extreme outliers
df_plot_mean <-
df_outliers %>%
filter(!mean_hr %in% c("131.7869",
"129.3250",
"137.8485",
"136.9259",
"109.2143",
"110.6800",
"107.0800")) %>%
group_by(time_span) %>%
summarise()
View(df_outliers)
View(df_plot_mean)
# data wrangling - preparing data for plotting
df_plot_mean <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("time_span",
"heart_rate") %>%
mutate(time_span = fct_recode(time_span,
"Pre-Lehrphase" = "pre",
"Lehrphase" = "main",
"Post-Lehrphase" = "subsequent",
"Interviewphase" = "interview",
"Endphase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-Lehrphase",
"Lehrphase",
"Post-Lehrphase",
"Interviewphase",
"Endphase"
)
)
) %>%
distinct() %>%
group_by(time_span) %>%
summarise_at(vars(heart_rate),
list(mean_hr = mean,
sd_hr = sd)
) %>%
as.data.frame()
View(df_plot_mean)
View(df_outliers)
# exclude extreme outliers
df_plot_mean <-
df_outliers %>%
filter(!mean_hr %in% c("131.7869",
"129.3250",
"137.8485",
"136.9259",
"109.2143",
"110.6800",
"107.0800"))
View(df_plot_mean)
View(df_plot_mean)
# checking for outliers
df_outliers <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID",
"time_span",
"heart_rate",
"teaching_experience",
"disruption_factor",
"confidence_factor") %>%
mutate(time_span = fct_recode(time_span,
"Pre-Lehrphase" = "pre",
"Lehrphase" = "main",
"Post-Lehrphase" = "subsequent",
"Interviewphase" = "interview",
"Endphase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-Lehrphase",
"Lehrphase",
"Post-Lehrphase",
"Interviewphase",
"Endphase"
)
)
) %>%
distinct() %>%
group_by(ID, time_span) %>%
summarise(mean_hr = mean(heart_rate, na.rm = TRUE),
sd_hr = sd(heart_rate, na.rm = TRUE)
) %>%
group_by(time_span) %>%
identify_outliers(mean_hr)
# exclude extreme outliers
df_plot_mean <-
df_outliers %>%
filter(!mean_hr %in% c("131.7869",
"129.3250",
"137.8485",
"136.9259",
"109.2143",
"110.6800",
"107.0800"))
View(df_plot_mean)
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "Zeit (in Sekunden)",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
plot_mean_sd
# data wrangling - preparing data for plotting
df_plot_mean <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("time_span",
"heart_rate") %>%
mutate(time_span = fct_recode(time_span,
"Pre-Lehrphase" = "pre",
"Lehrphase" = "main",
"Post-Lehrphase" = "subsequent",
"Interviewphase" = "interview",
"Endphase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-Lehrphase",
"Lehrphase",
"Post-Lehrphase",
"Interviewphase",
"Endphase"
)
)
) %>%
distinct() %>%
group_by(time_span) %>%
summarise_at(vars(heart_rate),
list(mean_hr = mean,
sd_hr = sd)
) %>%
as.data.frame()
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "Zeit (in Sekunden)",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
# data wrangling - preparing data for plotting
df_plot_mean <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("time_span",
"heart_rate") %>%
mutate(time_span = fct_recode(time_span,
"(1) Pre-Lehrphase" = "pre",
"(2) Lehrphase" = "main",
"(3) Post-Lehrphase" = "subsequent",
"(4) Interviewphase" = "interview",
"(5) Endphase" = "after"
),
time_span = factor(time_span,
levels = c("(1) Pre-Lehrphase",
"(2) Lehrphase",
"(3) Post-Lehrphase",
"(4) Interviewphase",
"(5) Endphase"
)
)
) %>%
distinct() %>%
group_by(time_span) %>%
summarise_at(vars(heart_rate),
list(mean_hr = mean,
sd_hr = sd)
) %>%
as.data.frame()
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
# plotting
plot_mean_sd <-
ggplot(df_plot_mean,
aes(x = time_span, y = mean_hr)) +
geom_point(size = 5,
colour = "red")+
geom_errorbar(aes(ymin = mean_hr - sd_hr,
ymax = mean_hr + sd_hr),
width=.2,
position = position_dodge(0.05)) +
scale_y_continuous(breaks = seq(0, 160, 10)) +
labs(x = "",
y = "Herzrate (in Schlägen pro Minute)") +
ggtitle("Herzrate (M, SD) in unterschiedlichen Phasen") +
theme_apa() +
theme(text = element_text(family = "sans"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 11, colour = "black"),
axis.text.y = element_text(size = 11),
strip.text = element_text(size = 15),
plot.title = element_text(size = 20,
face = "bold"))
plot_mean_sd
# saving plot
ggsave(plot = plot_mean_sd,
filename = "plots/plot_mean_sd.svg",
height = 5,
width = 8,
units = "in")
