)
)
data_path <- "./data"
map(.x = dir(path = "./data",
pattern = "_m.csv"),
~ read_csv(file.path(data_path, ., id = "id")) %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
time_span = "main",
id = id
)
)
?file.path
data_path <- "./data"
map(.x = dir(path = "./data",
pattern = "_m.csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
time_span = "main",
id = id
)
)
dir(path = "./data",
pattern = "_p.csv")
pre <-
map(.x = dir(path = "./data",
pattern = "_p.csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
time_span = "main",
id = id
)
)
main <-
map(.x = dir(path = "./data",
pattern = "_m.csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
time_span = "main",
id = id
)
)
data_path <- "./data"
main <-
map(.x = dir(path = "./data",
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id
)
)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id
)
)
View(main)
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
transmute(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_subset(string = id,
pattern = "[:digit:]")
)
)
View(main)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_subset(string = id,
pattern = "[:digit:]")
)
)
View(main)
main[[1]][1]
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_sub(string = id,
pattern = "[:digit:]")
)
)
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_extract(string = id,
pattern = "[:digit:]")
)
)
View(main)
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_extract(string = id,
pattern = "[:digit:]{3}")
)
)
View(main)
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_extract(string = id,
pattern = "[:digit:]{3}"),
id = as.factor(id)
)
) %>% rbind()
View(main)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_extract(string = id,
pattern = "[:digit:]{3}"),
id = as.factor(id)
)
) %>% bind_rows
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Packages
# install.packages("needs")
# Choose "No"
library(needs)
needs(tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confident_factor)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = LI02_01_1,
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
rm(list = c("df_demo","df_rating"))
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
id = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
id = str_extract(string = id,
pattern = "[:digit:]{3}"),
id = as.factor(id)
)
) %>% bind_rows
View(main)
View(main)
?left_join
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confident_factor)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = LI02_01_1,
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
rm(list = c("df_demo","df_rating"))
View(df_merge)
View(main)
View(df_merge)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.factor(id)
) %>%
select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
str(df_merge)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(id)
) %>%
select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
View(main)
View(df_merge)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(id)
) %>%
select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
# main <-
#   left_join(main, df_merge,
#             by = "ID")
View(main)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .), id = "id") %>%
mutate(time = .$Time - min(.$Time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(
str_detect(string = id, pattern = "_a") ~ "after",
str_detect(string = id, pattern = "_m") ~ "main",
str_detect(string = id, pattern = "_p") ~ "pre"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(ID)
) %>%
select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
View(main)
View(df_merge)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confident_factor)
View(df_rating)
View(df_rating)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confident_factor) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confident_factor = ifelse(confident_factor < 0,
yes = NA,
no = confident_factor)
)
View(df_rating)
View(df_rating)
?mean
df_rating %>%
group_by("ID") %>%
summarize(mean = mean(disruption_factor,
na.rm = TRUE
)
) %>%
ggplot(mapping = aes(x = mean)) +
geom_histogram()
df_rating %>%
group_by("ID") %>%
summarize(mean = mean(disruption_factor,
na.rm = TRUE
)
)
df_rating %>%
group_by(ID) %>%
summarize(mean = mean(disruption_factor,
na.rm = TRUE
)
) %>%
ggplot(mapping = aes(x = mean)) +
geom_histogram()
df_rating %>%
group_by(ID) %>%
summarize(mean = mean(confident_factor,
na.rm = TRUE
)
) %>%
ggplot(mapping = aes(x = mean)) +
geom_histogram()
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confident_factor) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confident_factor = ifelse(confident_factor < 0,
yes = NA,
no = confident_factor)
)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = LI02_01_1,
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
# rm(list = c("df_demo","df_rating"))
df_merge %>%
group_by(ID) %>%
summarize(mean = mean(confident_factor,
na.rm = TRUE
)
) %>%
ggplot(mapping = aes(x = mean)) +
geom_histogram()
View(df_merge)
df_merge %>%
ggplot(mapping = aes(x = age)) +
geom_histogram()
df_merge %>%
ggplot(mapping = aes(x = log(age))) +
geom_histogram()
df_merge %>%
ggplot(mapping = aes(x = age)) +
geom_histogram(binwidth = 10)
df_merge %>%
ggplot(mapping = aes(x = age)) +
geom_histogram(binwidth = 5)
df_merge %>%
ggplot(mapping = aes(x = log(age))) +
geom_histogram(binwidth = 5)
df_merge %>%
ggplot(mapping = aes(x = log(age))) +
geom_histogram(binwidth = 10)
df_merge %>%
ggplot(mapping = aes(x = log(age))) +
geom_histogram(binwidth = 1)
df_merge %>%
ggplot(mapping = aes(x = log(age))) +
geom_histogram(binwidth = 0.3)
df_merge %>%
ggplot(mapping = aes(x = log(age))) +
geom_histogram(binwidth = 0.1)
View(df_merge)
df_merge %>%
ggplot(mapping = aes(x = teaching_experience)) +
geom_histogram()
df_merge %>%
ggplot(mapping = aes(x = teaching_experience)) +
geom_histogram(5)
df_merge %>%
ggplot(mapping = aes(x = teaching_experience)) +
geom_histogram(binwidth = 5)
df_merge %>%
ggplot(mapping = aes(x = teaching_experience)) +
geom_histogram(binwidth = 2)
df_merge %>%
ggplot(mapping = aes(x = log(teaching_experience))) +
geom_histogram(binwidth = 0.1)
df_merge %>%
ggplot(mapping = aes(x = log(teaching_experience))) +
geom_histogram(binwidth = 0.5)
df_merge %>%
ggplot(mapping = aes(x = log(teaching_experience))) +
geom_histogram(binwidth = 0.3)
View(df_merge)
