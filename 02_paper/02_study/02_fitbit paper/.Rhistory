<<<<<<< HEAD
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
#  lme4,
lmerTest,
viridis,
gridExtra,
gridtext,
magrittr,
PerformanceAnalytics,
Hmisc,
corrplot,
tidyverse)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confidence_factor,
event
=======
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = disruption_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Disruption Faktor",
x = "Disruption Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = confidence_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Konfidenz Faktor",
x = "Konfidenz Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression_data <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
select("disruption_factor","confidence_factor","ID","teaching_experience") %>%
distinct()
heart_rate_regression <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std","disruption_factor","confidence_factor") %>%
mutate(time_span = factor(time_span,
levels = c("pre","main","subsequent","interview","after"),
labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")),
ID = factor(ID)) %>%
distinct() %>%
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ time * ID,
data = .)) %>%
map(~ .$coefficients %>%
tibble(ID = names(.),
value = .
>>>>>>> parent of 8821409 (main datei angepasst)
) %>%
filter(str_detect(string = ID,
pattern = "time"
)
<<<<<<< HEAD
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = factor(LI02_01_1,
levels = 1:2,
labels = c("male","female")
),
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
# rm(list = c("df_demo","df_rating"))
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .),
id = "id",
col_types = c("t","n")
) %>%
mutate(time = .$Time - min(.$Time),
time = as.numeric(time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "end",
str_detect(string = id, pattern = "_m") ~ "teaching",
str_detect(string = id, pattern = "_p") ~ "preparation",
str_detect(string = id, pattern = "_s") ~ "post",
str_detect(string = id, pattern = "_i") ~ "interview",
TRUE ~ "overall"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
=======
) %>%
mutate(ID = if_else(ID == "time",
true = "101",
false = ID),
ID = str_extract_all(string = ID,
pattern = "[0-9]+"),
ID = unlist(ID),
>>>>>>> parent of 8821409 (main datei angepasst)
ID = as.numeric(ID)
)
) %>%
<<<<<<< HEAD
# filter(time <= 600) %>% # filter for 10min intervals
filter(time <= 7200) %>% # filter for 2 hours 30min (maximal duration of study)
dplyr::select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
main <-
main %>%
dplyr::select("time", "heart_rate", "ID", "time_span") %>%
distinct() %>%
group_by(ID) %>%
summarize(mean_heart = mean(heart_rate),
sd_heart = sd(heart_rate)) %>%
ungroup() %>%
right_join(x = .,
y = main,
by = "ID") %>%
mutate(heart_rate_std = (heart_rate - mean_heart)/
sd_heart) %>%
filter(!(time_span == "teaching" & time > 600))
df_regression <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID", "time_span","time","heart_rate_std") %>%
distinct() %>%
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
))
table_data <-
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
) %>%
map(~ tibble(time_span = names(.),
intercept = fixef(.)[[1]],
intercept_sd = VarCorr(.) %>% as_tibble() %>% .[1,5],
intercept_p = coef(summary(.))[1, 5],
slope = fixef(.)[[2]],
slope_sd = VarCorr(.) %>% as_tibble() %>% .[2,5],
slope_p = coef(summary(.))[2, 5]
)
) %>%
bind_rows(.id = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(intercept, digits = 3),
`SD(Intercept)` = round(intercept_sd$sdcor, digits = 3),
`p-Value (Intercept)` = round(intercept_p, digits = 3),
`Mean(Slope)` = round(slope, digits = 3),
`SD(Slope)` = round(slope_sd$sdcor, digits = 3),
`p-Value (Slope)` = round(slope_p, digits = 3)
)
table_data$n[table_data$Phase == "Pre Teaching Phase"] <- df_regression %>% filter(Phase == "Pre Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Teaching Phase"] <- df_regression %>% filter(Phase == "Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Post Teaching Phase"] <- df_regression %>% filter(Phase == "Post Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Interview Phase"] <- df_regression %>% filter(Phase == "Interview Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "End Phase"] <- df_regression %>% filter(Phase == "End Phase") %>% pull(heart_rate_std) %>% length()
table_data %>%
arrange(Phase) %>%
knitr::kable(., caption = "Overview")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, error = FALSE, warning = FALSE)
library(needs)
needs(ltm,
xtable,
broom,
ppcor,
jtools,
lm.beta,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
#  lme4,
lmerTest,
viridis,
gridExtra,
gridtext,
magrittr,
PerformanceAnalytics,
Hmisc,
corrplot,
tidyverse)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confidence_factor,
event
) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confidence_factor = ifelse(confidence_factor < 0,
yes = NA,
no = confidence_factor),
event = as_factor(event)
)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = factor(LI02_01_1,
levels = 1:2,
labels = c("male","female")
),
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
# rm(list = c("df_demo","df_rating"))
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .),
id = "id",
col_types = c("t","n")
) %>%
mutate(time = .$Time - min(.$Time),
time = as.numeric(time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "end",
str_detect(string = id, pattern = "_m") ~ "teaching",
str_detect(string = id, pattern = "_p") ~ "preparation",
str_detect(string = id, pattern = "_s") ~ "post",
str_detect(string = id, pattern = "_i") ~ "interview",
TRUE ~ "overall"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(ID)
) %>%
# filter(time <= 600) %>% # filter for 10min intervals
filter(time <= 7200) %>% # filter for 2 hours 30min (maximal duration of study)
dplyr::select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
main <-
main %>%
dplyr::select("time", "heart_rate", "ID", "time_span") %>%
distinct() %>%
group_by(ID) %>%
summarize(mean_heart = mean(heart_rate),
sd_heart = sd(heart_rate)) %>%
ungroup() %>%
right_join(x = .,
y = main,
by = "ID") %>%
mutate(heart_rate_std = (heart_rate - mean_heart)/
sd_heart) %>%
filter(!(time_span == "teaching" & time > 600))
df_regression <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID", "time_span","time","heart_rate_std") %>%
distinct() %>%
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
))
table_data <-
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
) %>%
map(~ tibble(time_span = names(.),
intercept = fixef(.)[[1]],
intercept_sd = VarCorr(.) %>% as_tibble() %>% .[1,5],
intercept_p = coef(summary(.))[1, 5],
slope = fixef(.)[[2]],
slope_sd = VarCorr(.) %>% as_tibble() %>% .[2,5],
slope_p = coef(summary(.))[2, 5]
)
) %>%
bind_rows(.id = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(intercept, digits = 3),
`SD(Intercept)` = round(intercept_sd$sdcor, digits = 3),
`p-Value (Intercept)` = round(intercept_p, digits = 3),
`Mean(Slope)` = round(slope, digits = 3),
`SD(Slope)` = round(slope_sd$sdcor, digits = 3),
`p-Value (Slope)` = round(slope_p, digits = 3)
)
table_data$n[table_data$Phase == "Pre Teaching Phase"] <- df_regression %>% filter(Phase == "Pre Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Teaching Phase"] <- df_regression %>% filter(Phase == "Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Post Teaching Phase"] <- df_regression %>% filter(Phase == "Post Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Interview Phase"] <- df_regression %>% filter(Phase == "Interview Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "End Phase"] <- df_regression %>% filter(Phase == "End Phase") %>% pull(heart_rate_std) %>% length()
table_data %>%
arrange(Phase) %>%
knitr::kable(., caption = "Overview")
table_data <-
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
) %>%
map(~ tibble(time_span = names(.),
intercept = fixef(.)[[1]],
intercept_sd = VarCorr(.) %>% as_tibble() %>% .[1,5],
intercept_p = coef(summary(.))[1, 5],
slope = fixef(.)[[2]],
slope_sd = VarCorr(.) %>% as_tibble() %>% .[2,5],
slope_p = coef(summary(.))[2, 5]
)
) %>%
bind_rows(.id = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(intercept, digits = 3),
`SD(Intercept)` = round(intercept_sd$sdcor, digits = 3),
`p-Value (Intercept)` = round(intercept_p, digits = 3),
`Mean(Slope)` = round(slope, digits = 3),
`SD(Slope)` = round(slope_sd$sdcor, digits = 3),
`p-Value (Slope)` = round(slope_p, digits = 3)
)
View(table_data)
df_regression
max(df_regression$time[df_regression$time_span == "teaching"])
needs(ltm,
xtable,
broom,
ppcor,
jtools,
lm.beta,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
lmerTest,
viridis,
gridExtra,
gridtext,
magrittr,
PerformanceAnalytics,
Hmisc,
corrplot,
tidyverse)
df_regression <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID", "time_span","time","heart_rate_std") %>%
distinct() %>%
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
))
table_data <-
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
) %>%
map(~ tibble(time_span = names(.),
intercept = fixef(.)[[1]],
intercept_sd = VarCorr(.) %>% as_tibble() %>% .[1,5],
intercept_p = coef(summary(.))[1, 5],
slope = fixef(.)[[2]],
slope_sd = VarCorr(.) %>% as_tibble() %>% .[2,5],
slope_p = coef(summary(.))[2, 5]
)
) %>%
bind_rows(.id = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(intercept, digits = 3),
`SD(Intercept)` = round(intercept_sd$sdcor, digits = 3),
`p-Value (Intercept)` = round(intercept_p, digits = 3),
`Mean(Slope)` = round(slope, digits = 3),
`SD(Slope)` = round(slope_sd$sdcor, digits = 3),
`p-Value (Slope)` = round(slope_p, digits = 3)
)
View(df_regression)
View(table_data)
table_data %>%
filter(Phase == "teaching") %>%
lmer(formula = heart_rate_std ~ ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[[2]]
table_data %>%
filter(Phase == "teaching") %>%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[[2]]
df_regression %>%
filter(Phase == "teaching") %>%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[[2]]
df_regression %>%
filter(Phase == "Teaching Phase") %>%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[[2]]
df_regression %>%
filter(Phase == "Teaching Phase")
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[[2]]
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .)
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[[2]]
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[2]
model_hurensohn <-
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .)
fixef(model_hurensohn)
fixef(model_hurensohn)[2]
model_hurensohn <-
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)
model_hurensohn <-
df_regression %>%
filter(time_span == "teaching") %$%
lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .) %>%
fixef(.)[2]
table_data <-
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
) %>%
map(~ tibble(time_span = names(.),
intercept = fixef(.)[1],
intercept_sd = VarCorr(.) %>% as_tibble() %>% .[1,5],
intercept_p = coef(summary(.))[1, 5],
slope = fixef(.)[2],
slope_sd = VarCorr(.) %>% as_tibble() %>% .[2,5],
slope_p = coef(summary(.))[2, 5]
)
) %>%
bind_rows(.id = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(intercept, digits = 3),
`SD(Intercept)` = round(intercept_sd$sdcor, digits = 3),
`p-Value (Intercept)` = round(intercept_p, digits = 3),
`Mean(Slope)` = round(slope, digits = 3),
`SD(Slope)` = round(slope_sd$sdcor, digits = 3),
`p-Value (Slope)` = round(slope_p, digits = 3)
)
View(table_data)
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
)
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmerTest::lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
)
table_data <-
df_regression %>%
#  mutate(time = time * 60) %>%
split(.$Phase) %>%
map(~ lmerTest::lmer(formula = heart_rate_std ~ 1 + time + (1 + time | ID),
data = .
)
)
summary(table_data$`Teaching Phase`)
=======
bind_rows(., .id = "time_span") %>%
left_join(x = .,
y = heart_rate_regression_data,
by = "ID")
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = disruption_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Disruption Faktor",
x = "Disruption Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = confidence_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Konfidenz Faktor",
x = "Konfidenz Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
split(.$time_span) %>%
map(~ lm(data = .,
formula = value ~ disruption_factor + confidence_factor + teaching_experience)) %>%
stargazer::stargazer(type = "latex",
column.labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase"),
dep.var.labels = "Slope",
covariate.labels = c("Disruption Faktor","Konfidenz Faktor","Lehrerfahrung"))
heart_rate_regression_data <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
select("disruption_factor","confidence_factor","ID","teaching_experience") %>%
distinct()
heart_rate_regression <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std","disruption_factor","confidence_factor") %>%
mutate(time_span = factor(time_span,
levels = c("pre","main","subsequent","interview","after"),
labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")),
ID = factor(ID)) %>%
distinct() %>%
mutate(time = time * 60)
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ time * ID,
data = .)) %>%
map(~ .$coefficients %>%
tibble(ID = names(.),
value = .
) %>%
filter(str_detect(string = ID,
pattern = "time"
)
) %>%
mutate(ID = if_else(ID == "time",
true = "101",
false = ID),
ID = str_extract_all(string = ID,
pattern = "[0-9]+"),
ID = unlist(ID),
ID = as.numeric(ID)
)
) %>%
bind_rows(., .id = "time_span") %>%
left_join(x = .,
y = heart_rate_regression_data,
by = "ID")
heart_rate_regression_data <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
select("disruption_factor","confidence_factor","ID","teaching_experience") %>%
distinct()
heart_rate_regression <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std","disruption_factor","confidence_factor") %>%
mutate(time_span = factor(time_span,
levels = c("pre","main","subsequent","interview","after"),
labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")),
ID = factor(ID)) %>%
distinct() %>%
mutate(time = time * 60) %>%
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ time * ID,
data = .)) %>%
map(~ .$coefficients %>%
tibble(ID = names(.),
value = .
) %>%
filter(str_detect(string = ID,
pattern = "time"
)
) %>%
mutate(ID = if_else(ID == "time",
true = "101",
false = ID),
ID = str_extract_all(string = ID,
pattern = "[0-9]+"),
ID = unlist(ID),
ID = as.numeric(ID)
)
) %>%
bind_rows(., .id = "time_span") %>%
left_join(x = .,
y = heart_rate_regression_data,
by = "ID")
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = disruption_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Disruption Faktor",
x = "Disruption Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = confidence_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Konfidenz Faktor",
x = "Konfidenz Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
split(.$time_span) %>%
map(~ lm(data = .,
formula = value ~ disruption_factor + confidence_factor + teaching_experience)) %>%
stargazer::stargazer(type = "latex",
column.labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase"),
dep.var.labels = "Slope",
covariate.labels = c("Disruption Faktor","Konfidenz Faktor","Lehrerfahrung"))
heart_rate_regression <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std","disruption_factor","confidence_factor") %>%
mutate(time_span = factor(time_span,
levels = c("pre","main","subsequent","interview","after"),
labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")),
ID = factor(ID)) %>%
distinct() %>%
mutate(time = time * 100) %>%
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ time * ID,
data = .)) %>%
map(~ .$coefficients %>%
tibble(ID = names(.),
value = .
) %>%
filter(str_detect(string = ID,
pattern = "time"
)
) %>%
mutate(ID = if_else(ID == "time",
true = "101",
false = ID),
ID = str_extract_all(string = ID,
pattern = "[0-9]+"),
ID = unlist(ID),
ID = as.numeric(ID)
)
) %>%
bind_rows(., .id = "time_span") %>%
left_join(x = .,
y = heart_rate_regression_data,
by = "ID")
heart_rate_regression_data <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
select("disruption_factor","confidence_factor","ID","teaching_experience") %>%
distinct()
heart_rate_regression <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std","disruption_factor","confidence_factor") %>%
mutate(time_span = factor(time_span,
levels = c("pre","main","subsequent","interview","after"),
labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")),
ID = factor(ID)) %>%
distinct() %>%
mutate(time = time * 100) %>%
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ time * ID,
data = .)) %>%
map(~ .$coefficients %>%
tibble(ID = names(.),
value = .
) %>%
filter(str_detect(string = ID,
pattern = "time"
)
) %>%
mutate(ID = if_else(ID == "time",
true = "101",
false = ID),
ID = str_extract_all(string = ID,
pattern = "[0-9]+"),
ID = unlist(ID),
ID = as.numeric(ID)
)
) %>%
bind_rows(., .id = "time_span") %>%
left_join(x = .,
y = heart_rate_regression_data,
by = "ID")
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = disruption_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Disruption Faktor",
x = "Disruption Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = confidence_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Konfidenz Faktor",
x = "Konfidenz Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
split(.$time_span) %>%
map(~ lm(data = .,
formula = value ~ disruption_factor + confidence_factor + teaching_experience)) %>%
stargazer::stargazer(type = "latex",
column.labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase"),
dep.var.labels = "Slope",
covariate.labels = c("Disruption Faktor","Konfidenz Faktor","Lehrerfahrung"))
heart_rate_regression <-
main %>%
group_by(ID) %>%
mutate(disruption_factor = mean(disruption_factor, na.rm = TRUE),
confidence_factor = mean(confidence_factor, na.rm = TRUE)) %>%
ungroup() %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std","disruption_factor","confidence_factor") %>%
mutate(time_span = factor(time_span,
levels = c("pre","main","subsequent","interview","after"),
labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")),
ID = factor(ID)) %>%
distinct() %>%
mutate(time = time / 60) %>%
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ time * ID,
data = .)) %>%
map(~ .$coefficients %>%
tibble(ID = names(.),
value = .
) %>%
filter(str_detect(string = ID,
pattern = "time"
)
) %>%
mutate(ID = if_else(ID == "time",
true = "101",
false = ID),
ID = str_extract_all(string = ID,
pattern = "[0-9]+"),
ID = unlist(ID),
ID = as.numeric(ID)
)
) %>%
bind_rows(., .id = "time_span") %>%
left_join(x = .,
y = heart_rate_regression_data,
by = "ID")
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = disruption_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Disruption Faktor",
x = "Disruption Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = confidence_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Konfidenz Faktor",
x = "Konfidenz Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
split(.$time_span) %>%
map(~ lm(data = .,
formula = value ~ disruption_factor + confidence_factor + teaching_experience)) %>%
stargazer::stargazer(type = "latex",
column.labels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase"),
dep.var.labels = "Slope",
covariate.labels = c("Disruption Faktor","Konfidenz Faktor","Lehrerfahrung"))
heart_rate_regression
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = disruption_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Disruption Faktor",
x = "Disruption Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
heart_rate_regression %>%
mutate(time_span = factor(time_span,
levels = c("Pre-Phase","Unterrichtsphase","Subsequentphase","Interviewphase","Post-Phase")
)
) %>%
ggplot(mapping = aes(x = confidence_factor,
y = value
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Lineare Regression",
subtitle = "Konfidenz Faktor",
x = "Konfidenz Faktor",
y = "Anstieg") +
theme_apa() +
facet_grid(cols = vars(time_span))
main %>% filter(ID == 101, time_span == "Pre-Phase")
View(main)
>>>>>>> parent of 8821409 (main datei angepasst)
