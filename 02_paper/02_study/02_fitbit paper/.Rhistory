regr1 <-
lm(heart_rate ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(heart_rate ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(heart_rate ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(heart_rate ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_end1)
summary(regr_end2)
summary(regr_end3)
summary(regr_end4)
summary(regr_teaching1)
summary(regr_teaching2)
summary(regr_teching3)
summary(regr_teaching4)
summary(regr_teaching3)
summary(regr_teaching4)
# delta R²
summary(fit_teaching_1)$r.squared - summary(fit_teaching_2)$r.squared
# delta R²
summary(regr_teaching_1)$r.squared - summary(regr_teaching_2)$r.squared
summary(regr_teaching1)
summary(regr_teaching2)
summary(regr_teaching3)
summary(regr_teaching4)
# delta R²
summary(regr_teaching_1)$r.squared - summary(regr_teaching_2)$r.squared
# delta R²
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared
# delta R²
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared - summary(regr_teaching3)$r.squared
# delta R²
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared - summary(regr_teaching3)$r.squared - summary(regr_teaching4)$r.squared
df_multi <-
main %>%
select("ID",
"disruption_factor",
"confidence_factor",
"teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption_factor = mean(disruption_factor, na.rm = T),
confidence_factor = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID),
) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id") %>%
mutate(time_span = factor(Phase,
levels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase"),
labels = c("preparation",
"teaching",
"post",
"interview",
"end")
)
) %>%
select("id",
"disruption_factor",
"confidence_factor",
"teaching_experience",
"slope",
"time_span")
# %>%
# mutate(slope = abs(slope))
# mutate(posneg = if_else(condition = slope < 0,
#                         true = "negative",
#                         false = "positive"))
for (i in unique(df_multi$time_span)) {
cache <- df_multi %>%
filter(time_span == i)
regr1 <-
lm(slope ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(slope ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(slope ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(slope ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_end1)
summary(regr_end2)
summary(regr_end3)
summary(regr_end4)
summary(regr_end1)
summary(regr_end2)
summary(regr_end3)
summary(regr_end4)
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared - summary(regr_teaching3)$r.squared
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared - summary(regr_teaching3)$r.squared - summary(regr_teaching4)$r.squared
main %>%
group_by(ID, time_span) %>%
summarize(disruption_factor = mean(disruption_factor,
na.rm = T),
confidence_factor = mean(confidence_factor,
na.rm = T),
teaching_experience = mean(teaching_experience),
heart_rate = mean(heart_rate_std)
) %>%
ungroup() -> data_regression_mean
for (i in unique(data_regression_mean$time_span)) {
cache <- data_regression_mean %>%
filter(time_span == i)
regr1 <-
lm(heart_rate ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(heart_rate ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(heart_rate ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(heart_rate ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_teaching1)
summary(regr_teaching2)
summary(regr_teaching3)
summary(regr_teaching4)
# delta R²
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared - summary(regr_teaching3)$r.squared - summary(regr_teaching4)$r.squared
summary(regr_post1)
summary(regr_post2)
summary(regr_post3)
summary(regr_post4)
# delta R²
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared
# delta R²
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_teaching3)$r.squared
# delta R²
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_teaching3)$r.squared - summary(regr_teaching4)$r.squared
df_multi <-
main %>%
select("ID",
"disruption_factor",
"confidence_factor",
"teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption_factor = mean(disruption_factor, na.rm = T),
confidence_factor = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID),
) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id") %>%
mutate(time_span = factor(Phase,
levels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase"),
labels = c("preparation",
"teaching",
"post",
"interview",
"end")
)
) %>%
select("id",
"disruption_factor",
"confidence_factor",
"teaching_experience",
"slope",
"time_span")
# %>%
# mutate(slope = abs(slope))
# mutate(posneg = if_else(condition = slope < 0,
#                         true = "negative",
#                         false = "positive"))
for (i in unique(df_multi$time_span)) {
cache <- df_multi %>%
filter(time_span == i)
regr1 <-
lm(slope ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(slope ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(slope ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(slope ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_post1)
summary(regr_post2)
summary(regr_post3)
summary(regr_post4)
summary(regr_teaching1)$r.squared - summary(regr_teaching2)$r.squared - summary(regr_teaching3)$r.squared - summary(regr_teaching4)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_post3)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_post3)$r.squared - summary(regr_teaching4)$r.squared
main %>%
group_by(ID, time_span) %>%
summarize(disruption_factor = mean(disruption_factor,
na.rm = T),
confidence_factor = mean(confidence_factor,
na.rm = T),
teaching_experience = mean(teaching_experience),
heart_rate = mean(heart_rate_std)
) %>%
ungroup() -> data_regression_mean
for (i in unique(data_regression_mean$time_span)) {
cache <- data_regression_mean %>%
filter(time_span == i)
regr1 <-
lm(heart_rate ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(heart_rate ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(heart_rate ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(heart_rate ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_interview1)
summary(regr_interview2)
summary(regr_interview3)
summary(regr_interview4)
# delta R²
summary(regr_interview1)$r.squared - summary(regr_interview2)$r.squared - summary(regr_interview3)$r.squared - summary(regr_interview4)$r.squared
# delta R²
summary(regr_interview1)$r.squared - summary(regr_interview2)$r.squared
# delta R²
summary(regr_interview1)$r.squared - summary(regr_interview2)$r.squared - summary(regr_interview3)$r.squared
# delta R²
summary(regr_interview1)$r.squared - summary(regr_interview2)$r.squared - summary(regr_interview3)$r.squared - summary(regr_interview4)$r.squared
df_multi <-
main %>%
select("ID",
"disruption_factor",
"confidence_factor",
"teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption_factor = mean(disruption_factor, na.rm = T),
confidence_factor = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID),
) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id") %>%
mutate(time_span = factor(Phase,
levels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase"),
labels = c("preparation",
"teaching",
"post",
"interview",
"end")
)
) %>%
select("id",
"disruption_factor",
"confidence_factor",
"teaching_experience",
"slope",
"time_span")
# %>%
# mutate(slope = abs(slope))
# mutate(posneg = if_else(condition = slope < 0,
#                         true = "negative",
#                         false = "positive"))
for (i in unique(df_multi$time_span)) {
cache <- df_multi %>%
filter(time_span == i)
regr1 <-
lm(slope ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(slope ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(slope ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(slope ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_interview1)
summary(regr_interview2)
summary(regr_interview3)
summary(regr_interview4)
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_post3)$r.squared - summary(regr_teaching4)$r.squared
summary(regr_interview1)
summary(regr_interview2)
summary(regr_interview3)
summary(regr_interview4)
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_post3)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_post3)$r.squared
summary(regr_post1)$r.squared - summary(regr_post2)$r.squared - summary(regr_post3)$r.squared - summary(regr_teaching4)$r.squared
main %>%
group_by(ID, time_span) %>%
summarize(disruption_factor = mean(disruption_factor,
na.rm = T),
confidence_factor = mean(confidence_factor,
na.rm = T),
teaching_experience = mean(teaching_experience),
heart_rate = mean(heart_rate_std)
) %>%
ungroup() -> data_regression_mean
for (i in unique(data_regression_mean$time_span)) {
cache <- data_regression_mean %>%
filter(time_span == i)
regr1 <-
lm(heart_rate ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(heart_rate ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(heart_rate ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(heart_rate ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_end1)
summary(regr_end2)
summary(regr_end3)
summary(regr_end4)
# delta R²
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared
- summary(regr_end3)$r.squared - summary(regr_end4)$r.squared
# delta R²
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared
# delta R²
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared - summary(regr_end3)$r.squared
# delta R²
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared - summary(regr_end3)$r.squared - summary(regr_end4)$r.squared
summary(regr_end1)
summary(regr_end2)
summary(regr_end3)
summary(regr_end4)
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared
- summary(regr_end3)$r.squared - summary(regr_end4)$r.squared
summary(regr_end1)
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared - summary(regr_end3)$r.squared
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared - summary(regr_end3)$r.squared - summary(regr_end4)$r.squared
df_multi <-
main %>%
select("ID",
"disruption_factor",
"confidence_factor",
"teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption_factor = mean(disruption_factor, na.rm = T),
confidence_factor = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID),
) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id") %>%
mutate(time_span = factor(Phase,
levels = c("Pre Teaching Phase",
"Teaching Phase",
"Post Teaching Phase",
"Interview Phase",
"End Phase"),
labels = c("preparation",
"teaching",
"post",
"interview",
"end")
)
) %>%
select("id",
"disruption_factor",
"confidence_factor",
"teaching_experience",
"slope",
"time_span")
# %>%
# mutate(slope = abs(slope))
# mutate(posneg = if_else(condition = slope < 0,
#                         true = "negative",
#                         false = "positive"))
for (i in unique(df_multi$time_span)) {
cache <- df_multi %>%
filter(time_span == i)
regr1 <-
lm(slope ~ teaching_experience,
data = cache)
assign(value = regr1,
x = paste0("regr_", i, "1"))
regr2 <-
lm(slope ~ teaching_experience + disruption_factor,
data = cache)
assign(value = regr2,
x = paste0("regr_", i, "2"))
regr3 <-
lm(slope ~ teaching_experience + confidence_factor,
data = cache)
assign(value = regr3,
x = paste0("regr_", i, "3"))
regr4 <-
lm(slope ~ teaching_experience + disruption_factor + confidence_factor,
data = cache)
assign(value = regr4,
x = paste0("regr_", i, "4"))
}
# Hier habe ich immer nur die Modelle getauscht. Also statt regr_end1 regr_teaching1 usw.
summary(regr_post1)
summary(regr_post2)
summary(regr_post3)
summary(regr_post4)
summary(regr_end1)$r.squared - summary(regr_end2)$r.squared - summary(regr_end3)$r.squared - summary(regr_end4)$r.squared
summary(regr_post1)
summary(regr_post2)
summary(regr_post3)
