#                         ID > 200 ~ "Erfahren"),
time_span = fct_recode(time_span,
"Pre-teaching phase" = "pre",
"Teaching phase" = "main",
"Post-teaching phase" = "subsequent",
"Intview phase" = "interview",
"End phase" = "after"
),
time_span = factor(time_span,
levels = c("Pre-teaching phase",
"Teaching phase",
"Post-teaching phase",
"Intview phase",
"End phase"
)
)
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(method = "glm") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in seconds)",
y = "Heart rate (in beats per minute)") +
theme_apa() +
facet_grid(cols = vars(time_span),
scales = "free_x",
) -> phase_plot
main %>%
filter(time_span == "overall") %>%
select("ID","time_span", "time","heart_rate") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
# stat_smooth(geom = "line",
#             method = "loess",
#             se = FALSE) +
geom_smooth(method = "loess",
se = FALSE) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in seconds)",
y = "Heart rate (in beats per minute)") +
theme_apa() -> overall_plot
overall_plot
main %>%
filter(time_span == "pre") %>%
select("ID","time","heart_rate") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_line(mapping = aes(color = as_factor(ID)),
stat = "smooth",
method = "lm",
alpha = 0.6) +
geom_point(mapping = aes(color = as_factor(ID)),
alpha = 0.1) +
geom_line(stat = "smooth",
method = "lm",
linetype = 2) +
scale_color_viridis_d() +
labs(x = "Zeit (in Sekunden)",
y = "Herzrate (in Schlägen pro Minute)") +
theme_apa() +
theme(legend.position = "none")
main %>%
filter(time_span == "pre") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") ->
df_corr_pre
df_corr_pre
df_corr_pre %>%
select("ID","Estimate") %>%
filter(ID < 110) %>%
knitr::kable(., format = "simple")
df_corr_pre %>%
select("ID","Estimate") %>%
filter(ID < 110) %>%
knitr::kable(., format = "simple")
main %>%
filter(time_span == "pre") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") %>%
ungroup() ->
df_corr_pre
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
transmute(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor(., method = "spearman") %>%
.$estimate %>%
round(., 2) %>%
knitr::kable(format = "simple")
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
transmute(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor(., method = "pearson") %>%
.$p.value %>%
round(., 3) %>%
knitr::kable(format = "simple")
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
ungroup() %>%
mutate(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = gender,
age = (age - mean(.$age))/sd(.$age)
) %>%
lm(formula = Estimate ~ confident_factor_m + disruption_factor_m  + gender + age) %>%
tidy(x = .,
conf.int = TRUE) %>%
mutate(term = case_when(term == "confident_factor_m" ~ "Confident Factor",
term == "disruption_factor_m" ~ "Disruption Factor",
term == "genderfemale" ~ "Weiblich\n(Ref.: Männlich)",
term == "age" ~ "Alter",
TRUE ~ "Intercept"
),
term = fct_relevel(term,
c("Confident Factor",
"Disruption Factor",
"Weiblich\n(Ref.: Männlich)",
"Alter"
)),
term = fct_rev(as_factor(term)),
) %>%
filter(term != "Intercept") %>%
ggplot(mapping = aes(y = term)) +
geom_point(aes(x = estimate)) +
geom_vline(xintercept = 0) +
geom_segment(mapping = aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
color = "#440154") +
labs(x = "Effect",
y = "",
title = "Pre-Phase",
subtitle = paste0("Dependend Variable: Standardized Estimate\n(M = ",
mean(df_corr_pre$Estimate) %>% round(.,2),
")"
)
) +
theme_apa()
main %>%
filter(time_span == "end") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
View(main)
main %>%
filter(time_span == "subsequent") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
View(fit_first)
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") %>%
ungroup() ->
df_corr_pre
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
transmute(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor(., method = "spearman") %>%
.$estimate %>%
round(., 2) %>%
knitr::kable(format = "simple")
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
transmute(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor(., method = "pearson") %>%
.$p.value %>%
round(., 3) %>%
knitr::kable(format = "simple")
main %>%
filter(time_span == "subsequent")
View(main)
main %>%
filter(time_span == "after") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") %>%
ungroup() ->
df_corr_pre
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
transmute(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor(., method = "spearman") %>%
.$estimate %>%
round(., 2) %>%
knitr::kable(format = "simple")
left_join(x = df_corr_pre,
y = df_demo,
by = "ID") %>%
transmute(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor(., method = "pearson") %>%
.$p.value %>%
round(., 3) %>%
knitr::kable(format = "simple")
main %>%
filter(time_span == "after") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") ->
df_corr_sub
left_join(x = df_corr_sub,
y = df_demo,
by = "ID") %>%
mutate(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = gender,
age = (age - mean(.$age))/sd(.$age)
) %>%
lm(formula = Estimate ~ confident_factor_m + disruption_factor_m + gender + age) %>%
tidy(x = .,
conf.int = TRUE) %>%
mutate(term = case_when(term == "confident_factor_m" ~ "Confident Factor",
term == "disruption_factor_m" ~ "Disruption Factor",
term == "genderfemale" ~ "Weiblich\n(Ref.: Männlich)",
term == "age" ~ "Alter",
TRUE ~ "Intercept"
),
term = fct_rev(as_factor(term))
) %>%
filter(term != "Intercept") %>%
ggplot(mapping = aes(y = term)) +
geom_point(aes(x = estimate)) +
geom_vline(xintercept = 0) +
geom_segment(mapping = aes(x = conf.low,
xend = conf.high,
y = term,
yend = term
),
color = "#440154"
) +
labs(x = "Effect",
y = "",
title = "Subsequent Phase",
subtitle = paste0("Dependend Variable: Standardized Estimate\n(M = ",
mean(df_corr_sub$Estimate) %>% round(.,2),
")"
)
) +
theme_apa()
main %>%
filter(time_span == "after") %>%
select("time","ID","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
lmer(formula = heart_rate ~ (1|ID) + ID * time) %>%
summary() ->
fit_first
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") ->
df_corr_sub
left_join(x = df_corr_sub,
y = df_demo,
by = "ID") %>%
mutate(Estimate = (Estimate - mean(.$Estimate))/sd(.$Estimate),
confident_factor_m = (confident_factor_m - mean(.$confident_factor_m))/sd(.$confident_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = gender,
age = (age - mean(.$age))/sd(.$age)
) %>%
lm(formula = Estimate ~ confident_factor_m + disruption_factor_m + gender + age) %>%
tidy(x = .,
conf.int = TRUE) %>%
mutate(term = case_when(term == "confident_factor_m" ~ "Confident Factor",
term == "disruption_factor_m" ~ "Disruption Factor",
term == "genderfemale" ~ "Weiblich\n(Ref.: Männlich)",
term == "age" ~ "Alter",
TRUE ~ "Intercept"
),
term = fct_rev(as_factor(term))
) %>%
filter(term != "Intercept") %>%
ggplot(mapping = aes(y = term)) +
geom_point(aes(x = estimate)) +
geom_vline(xintercept = 0) +
geom_segment(mapping = aes(x = conf.low,
xend = conf.high,
y = term,
yend = term
),
color = "#440154"
) +
labs(x = "Effect",
y = "",
title = "End Phase",
subtitle = paste0("Dependend Variable: Standardized Estimate\n(M = ",
mean(df_corr_sub$Estimate) %>% round(.,2),
")"
)
) +
theme_apa()
