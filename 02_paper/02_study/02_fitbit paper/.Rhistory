) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
main <-
main %>%
dplyr::select("time", "heart_rate", "ID", "time_span") %>%
distinct() %>%
group_by(ID) %>%
summarize(mean_heart = mean(heart_rate),
sd_heart = sd(heart_rate)) %>%
ungroup() %>%
right_join(x = .,
y = main,
by = "ID") %>%
mutate(heart_rate_std = (heart_rate - mean_heart)/
sd_heart) %>%
filter(!(time_span == "teaching" & time > 600))
df_multi <-
main %>%
select("ID", "disruption_factor", "confidence_factor", "teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption = mean(disruption_factor, na.rm = T),
confidence = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID)) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id")
fit_pre_1 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ disruption)
fit_pre_2 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence)
fit_pre_3 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ teaching_experience)
fit_pre_4 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption)
fit_pre_5 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption + teaching_experience)
stargazer::stargazer(fit_pre_1, fit_pre_2,fit_pre_3, fit_pre_4, fit_pre_5,
type = "latex",
caption = "Pre Teaching Phase",
dep.var.labels = "Slope",
order = c(1, 2, 3),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
?lmerTest::lmer
df_multi <-
main %>%
select("ID", "disruption_factor", "confidence_factor", "teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption = mean(disruption_factor, na.rm = T),
confidence = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID)) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id")
fit_pre_1 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ disruption)
fit_pre_2 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence)
fit_pre_3 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ teaching_experience)
fit_pre_4 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption)
fit_pre_5 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption + teaching_experience)
stargazer::stargazer(fit_pre_1, fit_pre_2,fit_pre_3, fit_pre_4, fit_pre_5,
type = "latex",
caption = "Pre Teaching Phase",
dep.var.labels = "Slope",
order = c(1, 2, 3),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
library(needs)
needs(ltm,
xtable,
broom,
ppcor,
jtools,
lm.beta,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
lmerTest,
viridis,
gridExtra,
gridtext,
magrittr,
PerformanceAnalytics,
Hmisc,
corrplot,
tidyverse)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confidence_factor,
event
) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confidence_factor = ifelse(confidence_factor < 0,
yes = NA,
no = confidence_factor),
event = as_factor(event)
)
df_multi <-
main %>%
select("ID", "disruption_factor", "confidence_factor", "teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption = mean(disruption_factor, na.rm = T),
confidence = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID)) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id")
fit_pre_1 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ disruption)
fit_pre_2 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence)
fit_pre_3 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ teaching_experience)
fit_pre_4 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption)
fit_pre_5 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption + teaching_experience)
stargazer::stargazer(fit_pre_1, fit_pre_2,fit_pre_3, fit_pre_4, fit_pre_5,
type = "latex",
caption = "Pre Teaching Phase",
dep.var.labels = "Slope",
order = c(1, 2, 3),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
df_multi <-
main %>%
select("ID", "disruption_factor", "confidence_factor", "teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption = mean(disruption_factor, na.rm = T),
confidence = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID)) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id")
fit_post_1 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ disruption)
fit_post_2 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ confidence)
fit_post_3 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ teaching_experience)
fit_post_4 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ confidence + disruption)
fit_post_5 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ confidence + disruption + teaching_experience)
stargazer::stargazer(fit_post_1, fit_post_2,fit_post_3, fit_post_4, fit_post_5,
type = "latex",
#     caption = "Post Teaching Phase",
dep.var.labels = "Slope",
order = c(1, 2, 3),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
library(needs)
needs(ltm,
xtable,
broom,
ppcor,
jtools,
lm.beta,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
lmerTest,
viridis,
gridExtra,
gridtext,
magrittr,
PerformanceAnalytics,
Hmisc,
corrplot,
tidyverse)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confidence_factor,
event
) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confidence_factor = ifelse(confidence_factor < 0,
yes = NA,
no = confidence_factor),
event = as_factor(event)
)
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
disruption_factor, # -99 = subject did not notice event; -100 = experimenter did not asked for event
confidence_factor,
event
)
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.))
View(df_rating)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
"Disruption Factor", # -99 = subject did not notice event; -100 = experimenter did not asked for event
"Confidence Factor",
"event"
) %>%
mutate(disruption_factor = ifelse(`Disruption Factor` < 0,
yes = NA,
no = `Disruption Factor`
),
confidence_factor = ifelse(`Confidence Factor` < 0,
yes = NA,
no = `Confidence Factor`),
event = as_factor(event)
)
View(df_rating)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
"Disruption Factor", # -99 = subject did not notice event; -100 = experimenter did not asked for event
"Confidence Factor",
"Event"
) %>%
mutate(disruption_factor = ifelse(`Disruption Factor` < 0,
yes = NA,
no = `Disruption Factor`
),
confidence_factor = ifelse(`Confidence Factor` < 0,
yes = NA,
no = `Confidence Factor`),
event = as_factor(Event)
)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = factor(LI02_01_1,
levels = 1:2,
labels = c("male","female")
),
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .),
id = "id",
col_types = c("t","n")
) %>%
mutate(time = .$Time - min(.$Time),
time = as.numeric(time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "end",
str_detect(string = id, pattern = "_m") ~ "teaching",
str_detect(string = id, pattern = "_p") ~ "preparation",
str_detect(string = id, pattern = "_s") ~ "post",
str_detect(string = id, pattern = "_i") ~ "interview",
TRUE ~ "overall"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(ID)
) %>%
# filter(time <= 600) %>% # filter for 10min intervals
filter(time <= 7200) %>% # filter for 2 hours 30min (maximal duration of study)
dplyr::select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .),
id = "id",
col_types = c("t","n")
) %>%
mutate(time = .$Time - min(.$Time),
time = as.numeric(time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "end",
str_detect(string = id, pattern = "_m") ~ "teaching",
str_detect(string = id, pattern = "_p") ~ "preparation",
str_detect(string = id, pattern = "_s") ~ "post",
str_detect(string = id, pattern = "_i") ~ "interview",
TRUE ~ "overall"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(ID)
) %>%
# filter(time <= 600) %>% # filter for 10min intervals
filter(time <= 7200) %>% # filter for 2 hours 30min (maximal duration of study)
dplyr::select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
main <-
main %>%
dplyr::select("time", "heart_rate", "ID", "time_span") %>%
distinct() %>%
group_by(ID) %>%
summarize(mean_heart = mean(heart_rate),
sd_heart = sd(heart_rate)) %>%
ungroup() %>%
right_join(x = .,
y = main,
by = "ID") %>%
mutate(heart_rate_std = (heart_rate - mean_heart)/
sd_heart) %>%
filter(!(time_span == "teaching" & time > 600))
df_multi <-
main %>%
select("ID", "disruption_factor", "confidence_factor", "teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption = mean(disruption_factor, na.rm = T),
confidence = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID)) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id")
fit_pre_1 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ disruption)
fit_pre_2 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence)
fit_pre_3 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ teaching_experience)
fit_pre_4 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption)
fit_pre_5 <-
df_multi %>%
filter(Phase == "Pre Teaching Phase") %$%
lm(slope ~ confidence + disruption + teaching_experience)
stargazer::stargazer(fit_pre_1, fit_pre_2,fit_pre_3, fit_pre_4, fit_pre_5,
type = "latex",
caption = "Pre Teaching Phase",
dep.var.labels = "Slope",
order = c(1, 2, 3),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
df_multi <-
main %>%
select("ID", "disruption_factor", "confidence_factor", "teaching_experience") %>%
distinct() %>%
group_by(ID) %>%
summarize(disruption = mean(disruption_factor, na.rm = T),
confidence = mean(confidence_factor, na.rm = T),
teaching_experience) %>%
ungroup() %>%
mutate(id = as.character(ID)) %>%
distinct() %>%
right_join(x = .,
y = fix_models,
by = "id")
fit_post_1 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ disruption)
fit_post_2 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ confidence)
fit_post_3 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ teaching_experience)
fit_post_4 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ confidence + disruption)
fit_post_5 <-
df_multi %>%
filter(Phase == "Post Teaching Phase") %$%
lm(slope ~ confidence + disruption + teaching_experience)
stargazer::stargazer(fit_post_1, fit_post_2,fit_post_3, fit_post_4, fit_post_5,
type = "latex",
#     caption = "Post Teaching Phase",
dep.var.labels = "Slope",
order = c(1, 2, 3),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
