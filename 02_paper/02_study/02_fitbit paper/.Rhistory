# saveRDS(object = df_meter_all,
#         file = "final_data/meter_real.rds")
#
# rm(list = ls())
#
# ##### 3. Pupil Dialation ####
#
# df_dil <- read_rds(file = "Data/df.rds")
#
# df_dil$date_time <-
#   make_datetime(hour = hour(df_dil$start_time),
#                 min = minute(df_dil$start_time),
#                 sec = second(df_dil$start_time)
#                 ) +
#   seconds(as.numeric(milliseconds(df_dil$time)
#                      )
#           )
#
# df_dil$seconds <- floor(second(df_dil$date_time))
# df_dil$minutes <- minute(df_dil$date_time)
# df_dil$hours <- hour(df_dil$date_time)
#
# df_dil_aggr <-
#   df_dil %>%
#   group_by(hours, minutes, seconds, ID) %>%
#   summarise(dil_left = mean(left),
#             dil_right = mean(right)
#             ) %>%
#   ungroup() %>%
#   mutate(Time = hms::hms(hours = hours,
#                     minutes = minutes,
#                     seconds = seconds
#                     )
#          ) %>%
#   select(dil_left,
#          dil_right,
#          Time,
#          ID
#          )
#
# # df_dil_aggr$time <-
# # hms(hours = df_dil_aggr$hours,
# #     minutes = df_dil_aggr$minutes,
# #     seconds = df_dil_aggr$seconds)
# #
#
# saveRDS(object = df_dil,
#         file = "final_data/dilation.rds")
#
# saveRDS(object = df_dil_aggr,
#         file = "final_data/dilation_aggr.rds"
#         )
#
# rm(list = ls())
##### 4. Heart Rate ####
part <- read_xlsx(path = "Data/Heart Rate.xlsx")
#...............................................................................
#                                                                              .
#  Enter the missing cases in Heart Rate table below.                                       .
#                                                                              .
#...............................................................................
part <- part %>%
filter(!`ID participant`%in% c("126",
"132",
"134")
)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("a", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_a.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("p", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_p.csv",
sep = ""
)
)
)
}
# Change to seconds
for (i in part) {
nam <- paste0("m", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
for (i in part) {
nam <- paste0("a", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("a", i), df)
}
for (i in part) {
nam <- paste0("p", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
# Join Data Frames
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
df_p <-
mget(ls(pattern = "p")) %>%
bind_rows()
df_a <-
mget(ls(pattern = "a")) %>%
bind_rows()
df_a$Type <- "Post"
df_m$Type <- "Main"
df_p$Type <- "Pre"
df_all <- bind_rows(list(df_a,df_p, df_m))
df_all <- df_all %>%
mutate(Type = factor(Type,
levels = c("Pre","Main","Post")),
ID = as_factor(ID)
)
df_all$status <- if_else(as.numeric(as.character(df_all$ID)) < 200,
"Novice",
"Expert")
df_aggr <- df_all %>%
group_by(Type, ID, status) %>%
summarise(mean = mean(`Heart Rate`, na.rm = TRUE))
df_all_min <- df_all %>%
group_by(ID) %>%
summarise(min = max(Time))
# df_all df_aggr df_all_min
saveRDS(object = df_all,
file = "final_data/heart_all.rds")
saveRDS(object = df_aggr,
file = "final_data/heart_aggr.rds")
saveRDS(object = df_all_min,
file = "final_data/heart_min.rds")
rm(list = ls())
##### 5. Steps ####
df_steps <- read_xlsx(path = "Data/Heart Rate.xlsx")
df_steps <- df_steps %>%
transmute(ID = as.numeric(as.character(df_steps$`ID participant`)),
Steps = Diff
)
df_steps$type <- ifelse(df_steps$ID < 200,
"Novice",
"Expert"
)
df_heart_aggr <- read_rds(file = "final_data/heart_aggr.rds")
df_aggr_main <-
df_heart_aggr %>%
mutate(ID = as.numeric(as.character(ID))) %>%
ungroup() %>%
filter(Type == "Main") %>%
select(ID, mean)
df_steps <- full_join(x = df_aggr_main,
y = df_steps,
key = ID)
# df_steps$mean <- scale(df_steps$mean)
# df_steps$Steps <- scale(df_steps$Steps)
saveRDS(object = df_steps,
file = "final_data/steps.rds")
rm(list = ls())
##### 6. Heart Rate and Pupil Dilation ####
####
part <- read_xlsx(path = "Data/Heart Rate.xlsx")
#...............................................................................
#                                                                              .
#  Enter the missing cases in Heart Rate table below.                                       .
#                                                                              .
#...............................................................................
part <- part %>%
filter(!`ID participant`%in% c("126",
"132",
"134")
)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste0("m", i)
`Heart Rate` <- get(nam)$`Heart Rate`
time <- get(nam)$Time
df <- tibble(Time = time,
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
rm(part)
rm(nam)
rm(i)
rm(time)
rm(`Heart Rate`)
df <-
mget(ls(pattern = "m")) %>%
bind_rows()
rm(list = ls(pattern = "m"))
df_dil_aggr <- read_rds(file = "final_data/dilation_aggr.rds")
df_dil_aggr$ID <- as.numeric(df_dil_aggr$ID)
df_hr_dil <- left_join(df, df_dil_aggr,
by = c("ID","Time")
)
df_hr_dil$type = as_factor(ifelse(df_hr_dil$ID < 200,
"Novice",
"Expert"
)
)
df_hr_dil <-
df_hr_dil %>%
group_by(ID) %>%
summarise(Time = Time,
heart_rate_z = scale(`Heart Rate`),
dil_left_z = scale(dil_left),
dil_right_z = scale(dil_right),
type = type)
saveRDS(object = df_hr_dil,
file = "final_data/heart_dilation.rds")
rm(list = ls())
#### Next Step: Std. pupil dialation per Participant!
part <- part %>%
filter(!`ID participant`%in% c("126",
"132"))
library("papaja")
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
janitor,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable,
ggthemes,
imputeTS,
rstatix,
ggpubr)
# DEMOGRAPHIC DATA
# read in data and select and rename relevant columns with transmute
demo.data.raw <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(ID = LI06_05,
Gender = LI02_01_1,
Age = LI03_01,
`Teaching Experience` = LI04_01,
School_type = LI18,
Grade = LI16_05,
Subject = LI10_05,
Semester = LI11_01,
Internship = LI13_01,
`Extracurricular Teaching Experience` = LI14,
`Secondary Teaching Activities` = LI17
)
# exclude cases with no fitbit data
demo.data.raw <- demo.data %>% filter(!ID %in% c("126",
"132"
)
)
View(demo.data.raw)
plot(cars)
knitr::opts_chunk$set(echo = FALSE)
# Packages
# install.packages("needs")
# Choose "No"
library(needs)
needs(tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr)
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
View(demo.data)
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
setwd("~/GitHub/Mandy-PhD/02_paper/02_study/02_fitbit paper")
knitr::opts_chunk$set(echo = FALSE)
# Packages
# install.packages("needs")
# Choose "No"
library(needs)
needs(tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr)
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read_csv("./data/data_empschul_labor_lehrperson.csv")
rm(demo.data)
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read_csv2("./data/data_empschul_labor_lehrperson.csv")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read_delim("./data/data_empschul_labor_lehrperson.csv")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read_csv2("./data/data_empschul_labor_lehrperson.csv")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read.csv2("./data/data_empschul_labor_lehrperson.csv")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read.csv("./data/data_empschul_labor_lehrperson.csv")
# demographic data
# prepare data (selected from questionnaire data)
demo.data <- read_csv2("./data/data_empschul_labor_lehrperson.csv")
# demographic data
# prepare data (selected from questionnaire data)
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(ID = LI06_05,
gender = LI02_01_1,
age = LI03_01,
teaching_experience = LI04_01) %>%
# exclude cases with no fitbit data
demo.data <- demo.data %>% filter(!ID %in% c("126",
"132",
)
)
# demographic data
# prepare data (selected from questionnaire data)
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(ID = LI06_05,
gender = LI02_01_1,
age = LI03_01,
teaching_experience = LI04_01) %>%
filter(!ID %in% c("126",
"132",
)
)
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(ID = LI06_05,
gender = LI02_01_1,
age = LI03_01,
teaching_experience = LI04_01)
rm(demo.data)
View(df_demo)
# demographic data
# prepare data (selected from questionnaire data)
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(ID = LI06_05,
gender = LI02_01_1,
age = LI03_01,
teaching_experience = LI04_01) %>%
filter(!ID %in% c("126",
"132",
)
)
# demographic data
# prepare data (selected from questionnaire data)
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(ID = LI06_05,
gender = LI02_01_1,
age = LI03_01,
teaching_experience = LI04_01) %>%
filter(!ID %in% c("126",
"132"
)
)
View(df_demo)
# disruption & confidence rating
df_rating <-
read_excel("./data/Coding_SRI.xlsx") # read in excel
View(df_rating)
# disruption & confidence rating
df_rating <-
read_excel("./data/Coding_SRI.xlsx") # read in excel
View(df_rating)
View(df_demo)
View(df_demo)
View(df_demo)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.))
View(df_rating)
View(df_rating)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two
select(ID, # select relevant columns
disruption_factor,
confident_factor)
View(df_demo)
View(df_rating)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor,
confident_factor)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = LI02_01_1,
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames
df_merge <- merge(df_demo,
df_rating,
by="ID")
View(df_merge)
# merge two data frames
df_merge <- merge(df_demo,
df_rating,
by="ID") %>%
filter(!ID %in% c("126","132"))
View(df_rating)
View(df_merge)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
select(ID, # select relevant columns
disruption_factor,
confident_factor)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = LI02_01_1,
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by="ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
View(df_merge)
