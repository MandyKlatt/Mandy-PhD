group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor),
disruption_factor_m = mean(disruption_factor),
ID = ID) %>%
distinct()
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID) %>%
distinct()
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID) %>%
distinct() %>%
left_join(., df_estimates)
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID) %>%
distinct() %>%
left_join(., df_estimates,
by = ID)
View(df_estimates)
as_tibble(fit_first$coefficients,
rownames = "Coefficient") %>%
filter(str_detect(.$Coefficient,
pattern = "time")) %>%
mutate(coefficient = case_when(Coefficient == "time" ~ "101",
TRUE ~ Coefficient),
ID = str_extract(string = coefficient,
pattern = "[:digit:]{3}"
),
ID = as.numeric(ID)
) %>%
select("ID","Estimate") ->
df_estimates
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID) %>%
distinct() %>%
left_join(., df_estimates,
by = ID)
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID")
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") ->
df_corr
cor.test(df_corr$confident_factor_m,
df_corr$Estimate)
cor.test(df_corr$disruption_factor_m,
df_corr$Estimate)
cor.test(df_corr$confident_factor_m,
df_corr$Estimate)
cor.test(df_corr$confident_factor_m,
df_corr$Estimate)
cor.test(df_corr$disruption_factor_m,
df_corr$Estimate)
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point()
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth()
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = "r = ",
x = 5.5
y = -0.025)
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = "r = ",
x = 5.5,
y = -0.025)
cor.test(df_corr$confident_factor_m,
df_corr$Estimate) ->
corr_conf
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", corr_conf$estimate),
x = 5.5,
y = -0.025)
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_conf$estimate, 2)),
x = 5.5,
y = -0.025)
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_conf$estimate, 2)),
x = 5.5,
y = -0.025,
family = "serif")
df_corr %>%
ggplot(mapping = aes(x = confident_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_conf$estimate, 2)),
x = 5.5,
y = -0.025,
family = "serif"
) +
theme(text = element_text(family = "serif"))
cor.test(df_corr$disruption_factor_m,
df_corr$Estimate) ->
corr_disrup
df_corr %>%
ggplot(mapping = aes(x = disruption_factor_m,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_disrup$estimate, 2)),
x = 5.5,
y = -0.025,
family = "serif"
) +
theme(text = element_text(family = "serif"))
df_merge %>%
group_by(ID) %>%
summarize(confident_factor_m = mean(confident_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
ID = ID,
t_exp = teaching_experience) %>%
distinct() %>%
left_join(., df_estimates,
by = "ID") ->
df_corr
corr.test(df_corr$t_exp,
df_corr$Estimate)
cor.test(df_corr$t_exp,
df_corr$Estimate)
cor.test(df_corr$t_exp,
df_corr$Estimate) ->
corr_teach
df_corr %>%
ggplot(mapping = aes(x = t_exp,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm")
df_corr %>%
ggplot(mapping = aes(x = t_exp,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
df_corr %>%
ggplot(mapping = aes(x = log(t_exp + 1),
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
cor.test(log(df_corr$t_exp + 1),
df_corr$Estimate) ->
corr_teach
df_corr %>%
ggplot(mapping = aes(x = log(t_exp + 1),
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
corr_teach
df_corr %>%
ggplot(mapping = aes(x = t_exp,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_teach$estimate, 2)))
df_corr %>%
ggplot(mapping = aes(x = t_exp,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_teach$estimate, 2)),
x = 15,
y = -0.025
)
df_corr %>%
ggplot(mapping = aes(x = t_exp,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_teach$estimate, 2)),
x = 15,
y = -0.025,
family = "serif"
) +
theme(text = element_text(family = "serif"))
cor.test(df_corr$t_exp,
df_corr$Estimate) ->
corr_teach
df_corr %>%
ggplot(mapping = aes(x = t_exp,
y = Estimate
)
) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE) +
annotate(geom = "text",
label = paste0("r = ", round(corr_teach$estimate, 2)),
x = 15,
y = -0.025,
family = "serif"
) +
theme(text = element_text(family = "serif"))
needs(tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
ltm)
df_merge
df_merge %>%
select("ID","disruption_factor")
df_merge %>%
select("ID","disruption_factor")
df_merge
df_merge %>%
select("ID","disruption_factor")
df_merge
df_merge %>%
dplyr::select("ID","disruption_factor")
needs(ltm,
tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4)
df_merge %>%
select("ID","disruption_factor")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Packages
# install.packages("needs")
# Choose "No"
library(needs)
needs(ltm,
tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4)
df_merge %>%
select("ID","disruption_factor")
df_merge %>%
select("ID","disruption_factor") %>%
filter(ID == 101)
df_merge %>%
select("ID","disruption_factor") %>%
filter(ID == 102)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(factor = 1:10)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = 1:9)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider(id_cols = "ID",
names_from = "var")
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider(id_cols = "ID",
names_from = "var",
value = disruption_factor)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider(id_cols = "ID",
names_from = "var",
value = "disruption_factor")
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider()
?pivot_wider
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = "var",
value = "disruption_factor")
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = "var_number",
value = "disruption_factor")
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(1:9,
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = "var_number",
value = "disruption_factor",
names_prefix = "a_")
?pivot_wider
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(1:9,
times = length(unique(.$ID))
)
)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(letters[1:9],
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = "var_number",
value = "disruption_factor",
names_prefix = "a_")
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(letters[1:9],
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = "var_number",
value = "disruption_factor",
id_cols = "ID")
?pivot_wider
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(letters[1:9],
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = var_number,
value = disruption_factor,
id_cols = ID)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(letters[1:9],
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = var_number,
values_from = disruption_factor,
id_cols = ID)
df_merge %>%
select("ID","disruption_factor") %>%
mutate(var_number = rep(letters[1:9],
times = length(unique(.$ID))
)
) %>%
pivot_wider(names_from = var_number,
values_from = disruption_factor,
id_cols = ID) %>%
select(!"ID") %>%
cronbach.alpha(na.rm = TRUE)
