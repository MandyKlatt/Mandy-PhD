disruption_factor = (disruption_factor - mean(.$disruption_factor))/sd(.$disruption_factor),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) -> corr_main
View(corr_main)
rm(corr_main)
View(main)
main %>%
filter(time_span == "preparation") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
age = age,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
age = (age - mean(.$age))/sd(.$age)
) %>%
pcor()  -> pcor_main
knitr::kable(x = list(pcor_main$estimate, pcor_main$p.value), format = "simple")
main %>%
filter(time_span == "preparation") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_main
knitr::kable(x = list(pcor_main$estimate, pcor_main$p.value), format = "simple")
View(pcor_main)
pcor_main
```{r}
main %>%
filter(time_span == "interview") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_post
main %>%
filter(time_span == "interview") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_interview
main %>%
filter(time_span == "post") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_post
main %>%
filter(time_span == "end") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_end
pcor_end
round(pcor(pcor_end)$estimate, 03)
View(pcor_end)
knitr::kable(x = list(round(pcor_end$estimate), 03, pcor_end$p.value), format = "simple")
knitr::kable(x = list(round(pcor_end$estimate), 3, pcor_end$p.value), format = "simple")
main %>%
filter(time_span == "preparation") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_pre
pcor_pre
library(needs)
needs(ltm,
xtable,
broom,
ppcor,
jtools,
lm.beta,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS,
DescTools,
cowplot,
rstatix,
ggpubr,
lme4,
lmerTest,
viridis,
gridExtra,
gridtext,
magrittr,
PerformanceAnalytics,
Hmisc,
corrplot,
tidyverse,
ggplot2,
apaTables)
# disruption & confidence rating
df_rating <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>% # read in data with two sheets
dplyr::select(ID, # select relevant columns
"disruption_factor", # -99 = subject did not notice event; -100 = experimenter did not asked for event
"confidence_factor",
"event"
) %>%
mutate(disruption_factor = ifelse(disruption_factor < 0,
yes = NA,
no = disruption_factor
),
confidence_factor = ifelse(confidence_factor < 0,
yes = NA,
no = confidence_factor),
event = as_factor(event)
)
# demographic data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>% # read in excel
transmute(ID = LI06_05, # select and rename relevant columns
gender = factor(LI02_01_1,
levels = 1:2,
labels = c("male","female")
),
age = LI03_01, # 1 = male; 2 = female
teaching_experience = LI04_01)
# merge two data frames by ID
df_merge <- merge(df_demo,
df_rating,
by = "ID") %>%
filter(!ID %in% c("126", # exclude cases with no fitbit data (to check see data Heart Rate)
"132")
)
# rm(list = c("df_demo","df_rating"))
data_path <- "./data/heart_rate_data"
main <-
map(.x = dir(path = data_path,
pattern = ".csv"),
~ read_csv(file.path(data_path, .),
id = "id",
col_types = c("t","n")
) %>%
mutate(time = .$Time - min(.$Time),
time = as.numeric(time),
heart_rate = `Heart Rate`,
ID = id,
time_span = case_when(str_detect(string = id, pattern = "_a") ~ "end",
str_detect(string = id, pattern = "_m") ~ "teaching",
str_detect(string = id, pattern = "_p") ~ "preparation",
str_detect(string = id, pattern = "_s") ~ "post",
str_detect(string = id, pattern = "_i") ~ "interview",
TRUE ~ "overall"
),
ID = str_extract(string = ID,
pattern = "[:digit:]{3}"),
ID = as.numeric(ID)
) %>%
# filter(time <= 600) %>% # filter for 10min intervals
filter(time <= 7200) %>% # filter for 2 hours (maximal duration of study)
dplyr::select(!c("Time","Heart Rate","id"))
) %>%
bind_rows()
main <-
left_join(main, df_merge,
by = "ID")
main <-
main %>%
dplyr::select("time", "heart_rate", "ID", "time_span") %>%
distinct() %>%
group_by(ID) %>%
dplyr::summarize(mean_heart = mean(heart_rate),
sd_heart = sd(heart_rate)) %>%
ungroup() %>%
right_join(x = .,
y = main,
by = "ID") %>%
mutate(heart_rate_std = (heart_rate - mean_heart)/
sd_heart) %>%
filter(!(time_span == "teaching" & time > 600))
df_regression <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID", "time_span","time","heart_rate_std","heart_rate") %>%
distinct() %>%
mutate(time = time / 60) %>%
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
)
)
fix_models <-
df_regression %>%
split(.$Phase) %>%
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) %>%
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") %>%
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) %>%
bind_rows(.id = "Phase") %>%
pivot_wider(names_from = type,
values_from = value)
p.values_slope <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$slope,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_slope")
p.values_intercept <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$intercept,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_intercept")
sd_mean <-
fix_models %>%
group_by(Phase) %>%
dplyr::summarize(
mean_slope = mean(slope),
sd_slope = sd(slope),
mean_intercept = mean(intercept),
sd_intercept = sd(intercept)
)
table_data <-
right_join(x = sd_mean,
y = p.values_intercept,
by = "Phase") %>%
right_join(x = .,
y = p.values_slope,
by = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(mean_intercept, digits = 3),
`SD(Intercept)` = round(sd_intercept, digits = 3),
`p-Value (Intercept)` = p.value_intercept,
`Mean(Slope)` = round(mean_slope, digits = 3),
`SD(Slope)` = round(sd_slope,digits = 3),
`p-Value (Slope)` = p.value_slope,
) %>%
arrange(Phase)
table_data$n[table_data$Phase == "Pre Teaching Phase"] <- df_regression %>% filter(Phase == "Pre Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Teaching Phase"] <- df_regression %>% filter(Phase == "Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Post Teaching Phase"] <- df_regression %>% filter(Phase == "Post Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Interview Phase"] <- df_regression %>% filter(Phase == "Interview Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "End Phase"] <- df_regression %>% filter(Phase == "End Phase") %>% pull(heart_rate_std) %>% length()
table_data %>%
knitr::kable(.)
main %>%
filter(time_span == "teaching") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_pre
main %>%
filter(time_span == "teaching") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_teaching
pcor_teaching
main %>%
filter(time_span == "post") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_post
# knitr::kable(x = list(pcor_main$estimate, pcor_main$p.value), format = "simple")
pcor_post
main %>%
filter(time_span == "interview") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_interview
pcor_interview
pcor_end
main %>%
filter(time_span == "end") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_end
# knitr::kable(x = list(pcor_main$estimate, pcor_main$p.value), format = "simple")
pcor_end
main %>%
filter(time_span == "interview") %>%
group_by(ID) %>%
transmute(heart_rate_m = mean(heart_rate_std),
confidence_factor_m = mean(confidence_factor,
na.rm = TRUE),
disruption_factor_m = mean(disruption_factor,
na.rm = TRUE),
teaching_experience = teaching_experience,
gender = gender
) %>%
distinct() %>%
ungroup() %>%
transmute(heart_rate_m = (heart_rate_m - mean(.$heart_rate_m))/sd(.$heart_rate_m),
confidence_factor_m = (confidence_factor_m - mean(.$confidence_factor_m))/sd(.$confidence_factor_m),
disruption_factor_m = (disruption_factor_m - mean(.$disruption_factor_m))/sd(.$disruption_factor_m),
gender = if_else(gender == "male",
true = 0,
false = 1),
teaching_experience = (teaching_experience - mean(.$teaching_experience))/sd(.$teaching_experience)
) %>%
pcor()  -> pcor_interview
# knitr::kable(x = list(pcor_main$estimate, pcor_main$p.value), format = "simple")
pcor_interview
