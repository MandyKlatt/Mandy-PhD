),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed")
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nInterval","(2) Teaching\nInterval","(3) Post-teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
ylim(-1.5, 1) +
scale_y_continuous(breaks=seq(-1, 1, 0.5),
limits=c(-1.5, 1))
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nInterval","(2) Teaching\nInterval","(3) Post-teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_y_continuous(breaks=seq(-1, 1, 0.5),
limits=c(-1.2, 1))
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nInterval","(2) Teaching\nInterval","(3) Post-teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_y_continuous(breaks=seq(-1, 1, 0.5),
limits=c(-1.2, 1)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
# caption = expression(paste(italic("Note: "),
#                            "The shadow around the line represents the 99% confidence interval."
#                            )
#                      )
) +
facet_grid(cols = vars(time_span),
scales = "free_x") +
theme_apa() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.caption = element_text(hjust = 0))
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nInterval","(2) Teaching\nInterval","(3) Post-teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_y_continuous(breaks=seq(-1, 1, 0.5),
limits=c(-1.1, 1)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
# caption = expression(paste(italic("Note: "),
#                            "The shadow around the line represents the 99% confidence interval."
#                            )
#                      )
) +
facet_grid(cols = vars(time_span),
scales = "free_x") +
theme_apa() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.caption = element_text(hjust = 0))
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nInterval","(2) Teaching\nInterval","(3) Post-teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_y_continuous(breaks=seq(-1, 1, 0.5),
limits=c(-1.1, 1)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
# caption = expression(paste(italic("Note: "),
#                            "The shadow around the line represents the 99% confidence interval."
#                            )
#                      )
) +
facet_grid(cols = vars(time_span),
scales = "free_x") +
theme_apa() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.caption = element_text(hjust = 0))
ggsave(filename = "plots_publication/mean_plot.png",
width = 20,
height = 12,
units = "cm")
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nInterval","(2) Teaching\nInterval","(3) Post-teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.05 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
scale_y_continuous(breaks=seq(-1, 1, 0.5),
limits=c(-1.1, 1)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
# caption = expression(paste(italic("Note: "),
#                            "The shadow around the line represents the 99% confidence interval."
#                            )
#                      )
) +
facet_grid(cols = vars(time_span),
scales = "free_x") +
theme_apa() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.caption = element_text(hjust = 0))
ggsave(filename = "plots_publication/mean_plot.png",
width = 20,
height = 12,
units = "cm")
lm_plot <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-Teaching\nInteval","(2) Teaching\nInterval","(3) Post-Teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval")
),
time = time / 60
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
#scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(from = -1, to = 1, by = 0.5)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
caption = expression(paste(italic("Note: "),
"The shadow around the line represents the 99% confidence interval."
)
)
) +
theme_apa() +
theme(plot.subtitle = element_text(face = "italic"),
plot.caption = element_text(hjust = 0)) +
facet_grid(cols = vars(time_span),
scales = "free_x")
lm_plot
lm_plot <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-Teaching\nInteval","(2) Teaching\nInterval","(3) Post-Teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval")
),
time = time / 60
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
#scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(from = -1, to = 1, by = 0.5)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
caption = expression(paste(italic("Note: "),
"The shadow around the line represents the 95% confidence interval."
)
)
) +
theme_apa() +
theme(plot.subtitle = element_text(face = "italic"),
plot.caption = element_text(hjust = 0)) +
facet_grid(cols = vars(time_span),
scales = "free_x")
ggsave(filename = "plots_publication/lm_plot.png",
plot = lm_plot,
width = 20,
height = 12,
units = "cm")
df_heart_rate <-
main %>%
mutate(time = time / 60) %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time","heart_rate") %>%
distinct() %>%
mutate(type = "a. Heart Rate (in beats per minute)")
df_heart_rate_std <-
main %>%
mutate(time = time / 60) %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time","heart_rate_std") %>%
distinct() %>%
transmute(ID,
time,
type = "b. Heart Rate (standardized)",
heart_rate = heart_rate_std)
df_heart_rate %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y") -> loess_hr
df_heart_rate_std %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_continuous(expand = c(0, 0.25)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y") -> loess_hr_std
loess_comp <- grid.arrange(loess_hr, loess_hr_std,
ncol = 2)
loess_comp <- grid.arrange(loess_hr, loess_hr_std,
ncol = 2)
loess_comp <- annotate_figure(p = loess_comp,
bottom = 'Time (in Minutes)')
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.png",
width = 17,
height = 12,
units = "cm")
df_heart_rate <-
main %>%
mutate(time = time / 60) %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time","heart_rate") %>%
distinct() %>%
mutate(type = "a. Heart Rate (in Beats per Minute)")
df_heart_rate_std <-
main %>%
mutate(time = time / 60) %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time","heart_rate_std") %>%
distinct() %>%
transmute(ID,
time,
type = "b. Heart Rate (Standardized)",
heart_rate = heart_rate_std)
df_heart_rate %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y") -> loess_hr
df_heart_rate_std %>%
ggplot(mapping = aes(x = time,
y = heart_rate
)
) +
geom_smooth(se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0.01,0)) +
scale_y_continuous(expand = c(0, 0.25)) +
labs(x = "",
y = "",
) +
theme_apa() +
facet_wrap(~ type,
ncol = 2,
scales = "free_y") -> loess_hr_std
loess_comp <- grid.arrange(loess_hr, loess_hr_std,
ncol = 2)
loess_comp <- grid.arrange(loess_hr, loess_hr_std,
ncol = 2)
loess_comp <- annotate_figure(p = loess_comp,
bottom = 'Time (in Minutes)')
ggsave(loess_comp,
filename = "plots_publication/loess_plot_std_unstd_new.png",
width = 17,
height = 12,
units = "cm")
lm_plot <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-Teaching\nInteval","(2) Teaching\nInterval","(3) Post-Teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval")
),
time = time / 60
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = T,
size = 0.5,
colour = "black",
level = 0.95) +
scale_color_viridis_d(option = "A",
end = 0.8) +
#scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(from = -1, to = 1, by = 0.5)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
caption = expression(paste(italic("Note: "),
"The shadow around the line represents the 95% confidence interval."
)
)
) +
theme_apa() +
theme(plot.subtitle = element_text(face = "italic"),
plot.caption = element_text(hjust = 0)) +
facet_grid(cols = vars(time_span),
scales = "free_x")
ggsave(filename = "plots_publication/lm_plot.png",
plot = lm_plot,
width = 20,
height = 12,
units = "cm")
