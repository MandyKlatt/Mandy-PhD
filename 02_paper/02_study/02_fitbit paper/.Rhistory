"SD heart rate in bpm" = round(sd(heart_rate_std),
digits = 2),
"Min heart rate in bpm" = round(min(heart_rate_std),
digits = 2),
"Max heart rate in bpm" = round(max(heart_rate_std),
digits = 2)
)
# Mean, SD and range for disruption and confidence factor
rating_table <-
df_rating %>%
filter(!is.na(confidence_factor),
!is.na(disruption_factor)) %>%
summarise(N = n_distinct(ID),
"M disruption factor" = round(mean(disruption_factor),
digits = 2),
"SD disruption factor" = round(sd(disruption_factor),
digits = 2),
"Min disruption factor" = min(disruption_factor),
"Max disruption factor" = max(disruption_factor),
"M confidence factor" = round(mean(confidence_factor),
digits = 2),
"SD confidence factor" = round(sd(confidence_factor),
digits = 2),
"Min confidence factor" = min(confidence_factor),
"Max confidence factor" = max(confidence_factor)
)
loess_plot_overall <-
main %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(se = FALSE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0, NA),
breaks = seq(0, 9000, 600)) +
scale_y_continuous(breaks = seq(-1, 1, 0.5)) +
labs(x = "Time (in Seconds)",
y = "") +
ggtitle("Overall Course of Mean Heart Rate") +
theme_apa() +
theme(axis.title.y = element_blank())
loess_plot_overall
lm_plot <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-Teaching\nInteval","(2) Teaching\nInterval","(3) Post-Teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval")
),
time = time / 60
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = T,
size = 0.5,
colour = "black",
level = 0.99) +
scale_color_viridis_d(option = "A",
end = 0.8) +
#scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(from = -1, to = 1.5, by = 0.5)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
caption = expression(paste(italic("Note: "),
"The shadow around the line represents the 99% confidence interval."
)
)
) +
theme_apa() +
theme(plot.subtitle = element_text(face = "italic"),
plot.caption = element_text(hjust = 0)) +
facet_grid(cols = vars(time_span),
scales = "free_x")
lm_plot <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-Teaching\nInteval","(2) Teaching\nInterval","(3) Post-Teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval")
),
time = time / 60
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = T,
size = 0.5,
colour = "black",
level = 0.99) +
scale_color_viridis_d(option = "A",
end = 0.8) +
#scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(from = -1, to = 1, by = 0.5)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
caption = expression(paste(italic("Note: "),
"The shadow around the line represents the 99% confidence interval."
)
)
) +
theme_apa() +
theme(plot.subtitle = element_text(face = "italic"),
plot.caption = element_text(hjust = 0)) +
facet_grid(cols = vars(time_span),
scales = "free_x")
loess_plot_overall <-
main %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(se = FALSE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0, NA),
breaks = seq(0, 9000, 600)) +
scale_y_continuous(breaks = seq(-1, 1, 0.5)) +
labs(x = "Time (in Seconds)",
y = "") +
ggtitle("Overall Course of Mean Heart Rate") +
theme_apa() +
theme(axis.title.y = element_blank())
loess_plot_overall
lm_plot_phases <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nphase","(2) Teaching\nphase","(3) Post-teaching\nphase","(4) Interview\nphase","(5) End\nphase"))) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = TRUE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
# scale_x_continuous(expand = c(0, NA),
#                    breaks = seq(0, 9000, 600)) +
#scale_y_continuous(breaks = seq(0, 160, 5)) +
labs(x = "Time (in Seconds)",
y = "",
subtitle = "") +
theme_apa() +
theme(axis.title.y = element_blank()) +
facet_grid(cols = vars(time_span),
scales = "free_x")
lm_plot_phases
ki_plot_phases <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching Interval","(2) Teaching Interval","(3) Post-teaching Interval","(4) Interview Interval","(5) End Interval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
labs(subtitle = "1% Confidence Intervall",
x = "") +
facet_grid(cols = vars(time_span)) +
theme_apa() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank())
ki_plot_phases
loess_plot_overall <-
main %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(se = FALSE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0, NA),
breaks = seq(0, 9000, 600)) +
scale_y_continuous(breaks = seq(-1, 1, 0.5)) +
labs(x = "Time (in Seconds)",
y = "") +
ggtitle("Overall Course of Mean Heart Rate") +
theme_apa() +
theme(axis.title.y = element_blank())
loess_plot_overall <-
main %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(se = FALSE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0, NA),
breaks = seq(0, 9000, 600)) +
scale_y_continuous(breaks = seq(-1, 1, 0.5)) +
labs(x = "Time (in Seconds)",
y = "") +
ggtitle("Overall Course of Mean Heart Rate") +
theme_apa() +
theme(axis.title.y = element_blank())
lm_plot_phases <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching\nphase","(2) Teaching\nphase","(3) Post-teaching\nphase","(4) Interview\nphase","(5) End\nphase"))) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = TRUE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
# scale_x_continuous(expand = c(0, NA),
#                    breaks = seq(0, 9000, 600)) +
#scale_y_continuous(breaks = seq(0, 160, 5)) +
labs(x = "Time (in Seconds)",
y = "",
subtitle = "") +
theme_apa() +
theme(axis.title.y = element_blank()) +
facet_grid(cols = vars(time_span),
scales = "free_x")
ggsave(filename = "plots_publication/lm_plot.png",
width = 22,
height = 12,
units = "cm")
ki_plot_phases <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-teaching Interval","(2) Teaching Interval","(3) Post-teaching Interval","(4) Interview Interval","(5) End Interval"))) %>%
distinct() %>%
group_by(time_span) %>%
summarise(z_mean = mean(heart_rate_std),
z_sd = sd(heart_rate_std),
z_t = qt(p = 0.01 / 2,      # 0.01 KI
df = n() - 1,
lower.tail = F
),
z_error = z_sd / sqrt(n()),
lower = z_mean - z_t * z_error,
upper = z_mean + z_t * z_error,
) %>%
ungroup() %>%
ggplot(mapping = aes(x = factor(0),
y = z_mean)) +
geom_point() +
geom_errorbar(mapping = aes(ymin = lower,
ymax = upper),
width = 0.2) +
geom_hline(yintercept = 0,
linetype = "dashed") +
labs(subtitle = "1% Confidence Intervall",
x = "") +
facet_grid(cols = vars(time_span)) +
theme_apa() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank())
text_y <- text_grob("Average Heart Rate (Standardized)",
rot = 90)
plot_overall <-
grid.arrange(loess_plot_overall, lm_plot_phases, ki_plot_phases,
ncol = 1,
left = text_y
)
plot_overall <-
grid.arrange(loess_plot_overall, lm_plot_phases, ki_plot_phases,
ncol = 1,
left = text_y
)
plot_overall
lm_plot <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
mutate(time_span = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("(1) Pre-Teaching\nInteval","(2) Teaching\nInterval","(3) Post-Teaching\nInterval","(4) Interview\nInterval","(5) End\nInterval")
),
time = time / 60
) %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(method = "lm",
se = T,
size = 0.5,
colour = "black",
level = 0.99) +
scale_color_viridis_d(option = "A",
end = 0.8) +
#scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(from = -1, to = 1, by = 0.5)) +
labs(x = "Time (in Minutes)",
y = "Standardized Mean Heart Rate",
caption = expression(paste(italic("Note: "),
"The shadow around the line represents the 99% confidence interval."
)
)
) +
theme_apa() +
theme(plot.subtitle = element_text(face = "italic"),
plot.caption = element_text(hjust = 0)) +
facet_grid(cols = vars(time_span),
scales = "free_x")
ggsave(filename = "plots_publication/lm_plot.png",
plot = lm_plot,
width = 20,
height = 12,
units = "cm")
lm_plot
df_regression <-
main %>%
filter(time_span != "overall") %>%
dplyr::select("ID", "time_span","time","heart_rate_std","heart_rate") %>%
distinct() %>%
mutate(time = time / 60) %>%
mutate(ID = as_factor(ID),
Phase = factor(time_span,
levels = c("preparation","teaching","post","interview","end"),
labels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
)
)
fix_models <-
df_regression %>%
split(.$Phase) %>%
map( ~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .)) %>%
map(
~ coef(.) %>%
tibble::as_tibble(.,
rownames = "name") %>%
transmute(
type = if_else(str_detect(name,
":"),
true = "slope",
false = "intercept"),
id = str_remove_all(name,
"[^[:digit:]]"),
value = value
),
) %>%
bind_rows(.id = "Phase") %>%
pivot_wider(names_from = type,
values_from = value)
p.values_slope <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$slope,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_slope")
p.values_intercept <-
fix_models %>%
split(.$Phase) %>%
map( ~ t.test(x = .$intercept,
mu = 0)$p.value) %>%
bind_rows(.id = "Phase") %>%
pivot_longer(cols = everything(),
names_to = "Phase",
values_to = "p.value_intercept")
sd_mean <-
fix_models %>%
group_by(Phase) %>%
dplyr::summarize(
mean_slope = mean(slope),
sd_slope = sd(slope),
mean_intercept = mean(intercept),
sd_intercept = sd(intercept)
)
table_data <-
right_join(x = sd_mean,
y = p.values_intercept,
by = "Phase") %>%
right_join(x = .,
y = p.values_slope,
by = "Phase") %>%
transmute(Phase = factor(Phase,
levels = c("Pre Teaching Phase","Teaching Phase","Post Teaching Phase","Interview Phase","End Phase")
),
n = NA,
`Mean(Intercept)` = round(mean_intercept, digits = 3),
`SD(Intercept)` = round(sd_intercept, digits = 3),
`p-Value (Intercept)` = p.value_intercept,
`Mean(Slope)` = round(mean_slope, digits = 3),
`SD(Slope)` = round(sd_slope,digits = 3),
`p-Value (Slope)` = p.value_slope,
) %>%
arrange(Phase)
table_data$n[table_data$Phase == "Pre Teaching Phase"] <- df_regression %>% filter(Phase == "Pre Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Teaching Phase"] <- df_regression %>% filter(Phase == "Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Post Teaching Phase"] <- df_regression %>% filter(Phase == "Post Teaching Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "Interview Phase"] <- df_regression %>% filter(Phase == "Interview Phase") %>% pull(heart_rate_std) %>% length()
table_data$n[table_data$Phase == "End Phase"] <- df_regression %>% filter(Phase == "End Phase") %>% pull(heart_rate_std) %>% length()
table_data %>%
knitr::kable(.)
mods <-
df_regression %>%
split(.$time_span) %>%
map(~ lm(formula = heart_rate_std ~ 0 + ID + time:ID,
data = .
)
)
graph_data <-
df_regression %>%
split(.$time_span)
example <- list(mod = mods$preparation, data = graph_data$preparation)
list(`Preparation Phase` = list(name = "Pre-Teaching ", mod = mods$preparation, data = graph_data$preparation),
`Teaching Phase` = list(name = "Teaching Phase", mod = mods$teaching, data = graph_data$teaching),
`Post Teaching Phase` = list(name = "Post Teaching Phase",mod = mods$post, data = graph_data$post),
`Interview Phase` = list(name = "Interview Phase",mod = mods$interview, data = graph_data$interview),
`End Phase` = list(name = "End Phase",mod = mods$end, data = graph_data$end)
) %>%
map(~ ggplot(data = .$data,
mapping = aes(x = time,
y = heart_rate_std,
group = ID)) +
geom_line(mapping = aes(y = fitted(.$mod)),
color = "blue",
size = 1) +
geom_point(alpha = 0.5,
size = 0.5) +
labs(title = .$name,
y = "Heart Rate (Standardized)",
x = "Time (in Seconds)") +
facet_wrap( ~ ID, nrow = 6) +
theme_apa()
)
