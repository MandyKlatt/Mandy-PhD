`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
df_p <-
mget(ls(pattern = "p")) %>%
bind_rows()
df_a <-
mget(ls(pattern = "a")) %>%
bind_rows()
df_a$Type <- "Post"
df_m$Type <- "Main"
df_p$Type <- "Pre"
df_all <- bind_rows(list(df_a,df_p, df_m))
df_all <- df_all %>%
mutate(Type = factor(Type,
levels = c("Pre","Main","Post")),
ID = as_factor(ID)
)
df_all$status <- if_else(as.numeric(as.character(df_all$ID)) < 200,
"Novice",
"Expert")
df_aggr <- df_all %>%
group_by(Type, ID, status) %>%
summarise(mean = mean(`Heart Rate`, na.rm = TRUE))
df_all_min <- df_all %>%
group_by(ID) %>%
summarise(min = max(Time))
saveRDS(object = df_all,
file = "data/heart_all.rds")
saveRDS(object = df_aggr,
file = "data/heart_aggr.rds")
saveRDS(object = df_all_min,
file = "data/heart_min.rds")
rm(list = ls())
df_steps <- read_xlsx(path = "Data/Heart Rate.xlsx")
df_steps <- read_xlsx(path = "data/Heart Rate.xlsx")
df_steps <- df_steps %>%
transmute(ID = as.numeric(as.character(df_steps$`ID participant`)),
Steps = Diff
)
df_steps$type <- ifelse(df_steps$ID < 200,
"Novice",
"Expert"
)
df_heart_aggr <- read_rds(file = "data/heart_aggr.rds")
df_aggr_main <-
df_heart_aggr %>%
mutate(ID = as.numeric(as.character(ID))) %>%
ungroup() %>%
filter(Type == "Main") %>%
select(ID, mean)
df_steps <- full_join(x = df_aggr_main,
y = df_steps,
key = ID)
saveRDS(object = df_steps,
file = "final_data/steps.rds")
saveRDS(object = df_steps,
file = "data/steps.rds")
rm(list = ls())
source(file = "data.wrangling.R")
part
part <- read_xlsx(path = "data/Heart Rate.xlsx")
View(part)
part <- part %>%
filter(!`ID participant`%in% c("126",
"132",
"220",
"221")
)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("a", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_a.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("p", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_p.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste0("m", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
for (i in part) {
nam <- paste0("a", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("a", i), df)
}
for (i in part) {
nam <- paste0("p", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
df_p <-
mget(ls(pattern = "p")) %>%
bind_rows()
df_a <-
mget(ls(pattern = "a")) %>%
bind_rows()
df_a$Type <- "Post"
df_m$Type <- "Main"
df_p$Type <- "Pre"
df_all <- bind_rows(list(df_a,df_p, df_m))
df_all <- df_all %>%
mutate(Type = factor(Type,
levels = c("Pre","Main","Post")),
ID = as_factor(ID)
)
df_all$status <- if_else(as.numeric(as.character(df_all$ID)) < 200,
"Novice",
"Expert")
df_aggr <- df_all %>%
group_by(Type, ID, status) %>%
summarise(mean = mean(`Heart Rate`, na.rm = TRUE))
df_all_min <- df_all %>%
group_by(ID) %>%
summarise(min = max(Time))
saveRDS(object = df_all,
file = "data/heart_all.rds")
saveRDS(object = df_aggr,
file = "data/heart_aggr.rds")
saveRDS(object = df_all_min,
file = "data/heart_min.rds")
rm(list = ls())
df_steps <- read_xlsx(path = "data/Heart Rate.xlsx")
df_steps <- df_steps %>%
transmute(ID = as.numeric(as.character(df_steps$`ID participant`)),
Steps = Diff
)
df_steps$type <- ifelse(df_steps$ID < 200,
"Novice",
"Expert"
)
df_heart_aggr <- read_rds(file = "data/heart_aggr.rds")
df_aggr_main <-
df_heart_aggr %>%
mutate(ID = as.numeric(as.character(ID))) %>%
ungroup() %>%
filter(Type == "Main") %>%
select(ID, mean)
df_steps <- full_join(x = df_aggr_main,
y = df_steps,
key = ID)
saveRDS(object = df_steps,
file = "data/steps.rds")
rm(list = ls())
source(file = "data.wrangling.R")
df_heart_all <-
read_rds(file = "final_data/heart_all.rds") |>
mutate(status = factor(status,
levels = c("Expert","Novice"),
labels = c("Expert","Novice")
)
)
df_heart_all <-
read_rds(file = "data/heart_all.rds") |>
mutate(status = factor(status,
levels = c("Expert","Novice"),
labels = c("Expert","Novice")
)
)
df_heart_min <-
read_rds(file = "data/heart_min.rds")
df_heart_aggr <-
read_rds(file = "data/heart_aggr.rds") |>
mutate(status = factor(status,
levels = c("Novice","Expert"),
labels = c("Novice","Expert")
)
)
# t-test for expertise differences
t.test(x = df_heart_aggr$mean[df_heart_aggr$Group == "Expert"],
y = df_heart_aggr$mean[df_heart_aggr$Group == "Novice"])
# t-test for expertise differences
t.test(x = df_heart_aggr$mean[df_heart_aggr$ID == "Expert"],
y = df_heart_aggr$mean[df_heart_aggr$ID == "Novice"])
df_heart_aggr
View(df_heart_aggr)
# t-test for expertise differences
t.test(x = df_heart_aggr$mean[df_heart_aggr$status == "Expert"],
y = df_heart_aggr$mean[df_heart_aggr$status == "Novice"])
# effect size for expertise differences
d_heartrate <- CohenD(x = df_heart_aggr$mean[df_heart_aggr$status == "Expert"],
y = df_heart_aggr$mean[df_heart_aggr$status == "Novice"],
na.rm = TRUE)
# Initial Preparations
## Run following Code if and only if new data is added to the initial data.
source(file = "data.wrangling.R")
source(file = "data.wrangling.R")
df_steps <- read_rds(file = "data/steps.rds")
set.seed(5678)
ggplot(data = df_steps,
mapping = aes(x = type,
y = Steps
)
) +
geom_boxplot(mapping = aes(color = type),
fill = "grey",
alpha = 0.6) +
geom_jitter(mapping = aes(color = type),
alpha = 0.9,
width = 0.3) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "",
y = "Steps During\nMain Phase") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
source(file = "data.wrangling.R")
part <- read_xlsx(path = "data/Heart Rate.xlsx")
part <- part %>%
filter(!`ID participant`%in% c("126",
"132",
"220",
"221")
)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("a", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_a.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("p", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_p.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste0("m", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
for (i in part) {
nam <- paste0("a", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("a", i), df)
}
for (i in part) {
nam <- paste0("p", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
df_p <-
mget(ls(pattern = "p")) %>%
bind_rows()
df_a <-
mget(ls(pattern = "a")) %>%
bind_rows()
df_a$Type <- "Post"
df_m$Type <- "Main"
df_p$Type <- "Pre"
df_all <- bind_rows(list(df_a,df_p, df_m))
View(df_p)
part <- read_xlsx(path = "data/Heart Rate.xlsx")
part <- part %>%
filter(!`ID participant`%in% c("126",
"132",
"220",
"221")
)
View(part)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("a", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_a.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("p", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_p.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste0("m", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
for (i in part) {
nam <- paste0("a", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("a", i), df)
}
for (i in part) {
nam <- paste0("p", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
part <- read_xlsx(path = "data/Heart Rate.xlsx")
View(part)
part <- part %>%
filter(!`ID participant`%in% c("126",
"132",
"220",
"221")
)
View(part)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("a", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_a.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("p", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("data/", i, "_p.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste0("m", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
for (i in part) {
nam <- paste0("a", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("a", i), df)
}
for (i in part) {
nam <- paste0("p", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
View(m205)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
df_p <-
mget(ls(pattern = "p")) %>%
bind_rows()
