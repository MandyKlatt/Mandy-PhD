# geom_point(alpha = 0.05) +
geom_smooth(se = FALSE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
# scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0, NA),
breaks = seq(0, 9000, 600)) +
# scale_y_continuous(breaks = seq(-1, 1, 0.5)) +
labs(x = "Time (in seconds)",
y = "",
title = "Overall trend of heartrate",
subtitle = "Unstandardized") +
theme_apa() +
theme(axis.title.y = element_blank())
loess_plot_overall_std <-
main %>%
filter(time_span == "overall") %>%
dplyr::select("ID","time_span", "time","heart_rate_std") %>%
distinct() %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std
)
) +
# geom_point(alpha = 0.05) +
geom_smooth(se = FALSE,
size = 0.5,
colour = "black") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
scale_x_continuous(expand = c(0, NA),
breaks = seq(0, 9000, 600)) +
scale_y_continuous(breaks = seq(-1, 1, 0.5)) +
labs(x = "Time (in seconds)",
y = "",
subtitle = "Standardized") +
theme_apa() +
theme(axis.title.y = element_blank())
grid.arrange(loess_plot_overall, loess_plot_overall_std,
nrow = 2)
heart_rate_var <- "heart_rate_std"
# heart_rate_var <- "heart_rate"
df_regression <-
main %>%
filter(time_span == "pre") %>%
dplyr::select("ID","time","heart_rate_std","heart_rate") %>%
distinct() %>%
mutate(ID = as_factor(ID))
fit_ff <-
lm(eval(parse(text = heart_rate_var)) ~ 0 + ID + time:ID,
data = df_regression)
summary(fit_ff)
fit_ff$coefficients %>%
tibble(id = names(.),
values = .) %>%
mutate(kind = if_else(condition = str_detect(string = id,
pattern = ":"),
true = "Slope",
false = "Intercept"
)
) %>%
group_by(kind) %>%
summarize(mean_value = mean(values),
sd_value = sd(values)
) %>%
ungroup()
fit_rr <-
lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = df_regression
)
summary(fit_rr)$coefficients[1]
ranef(fit_rr)$ID
summary(fit_rr)
fit_ff$coefficients %>%
tibble(id = names(.),
values = .) %>%
mutate(kind = if_else(condition = str_detect(string = id,
pattern = ":"),
true = "Slope",
false = "Intercept"
)
) %>%
group_by(kind) %>%
summarize(mean_value = mean(values),
sd_value = sd(values)
) %>%
ungroup()
df_regression %>%
# filter(ID %in% c("101","102","103","104")) %>%
ggplot(mapping = aes(x = time,
y = heart_rate_std,
group = ID)) +
geom_line(mapping = aes(y = fitted(fit_ff)),
color = "blue",
size = 1) +
geom_line(mapping = aes(y = fitted(fit_rr)),
color = "red",
size = 1,
alpha = 0.5) +
geom_point(alpha = 0.5,
size = 0.5 ) +
facet_wrap(~ID, nrow = 6) +
theme_bw()
ggsave(filename = "plots/regression.pdf",
width = 20,
height = 15,
units = "cm")
heart_rate_var <- "heart_rate_std"
# heart_rate_var <- "heart_rate"
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache2 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate","time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ summary(.) %>%
.$coefficients %>%
.[c(1,2)]) %>%
bind_rows(.,
.id = "time_span") %>%
pivot_longer(
cols = everything(),
names_to = "time_span",
values_to = "mean_value"
)
df_test <-
tibble(mean_intercept = cache2$mean_value[1:6],
mean_time = cache2$mean_value[7:12],
time_span = cache2$time_span[1:6]) %>%
right_join(x = .,
y = cache1,
by = "time_span") %>%
transmute(time_span,
intercept = mean_intercept + intercept,
time = mean_time + time,
id = id)
t.test(df_test$intercept[df_test$time_span == "main"],
df_test$intercept[df_test$time_span == "subsequent"],
paired = TRUE)
CohenD(x = df_test$intercept[df_test$time_span == "main"],
y = df_test$intercept[df_test$time_span == "subsequent"],
pooled = T
)
df_test_reg <-
df_merge %>%
mutate(id = as_factor(ID)) %>%
group_by(id) %>%
summarise(mean_confidence = mean(confidence_factor, na.rm = T),
mean_disruption = mean(disruption_factor, na.rm = T)) %>%
right_join(x = .,
y = df_test,
by = "id") %>%
right_join(x = .,
y = transmute(df_demo,
id = as_factor(ID),
teaching_experience = teaching_experience
),
by = "id")
df_test_reg %>%
pivot_longer(cols = c("mean_confidence", "mean_disruption"),
names_to = "factor_means",
values_to = "means") %>%
ggplot(mapping = aes(x = means,
y = intercept
)
) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(cols = vars(time_span),
rows = vars(factor_means))
fit_teach_1 <-
df_test_reg %>%
filter(time_span == "main") %$%
lm(intercept ~ mean_disruption)
fit_teach_2 <-
df_test_reg %>%
filter(time_span == "main") %$%
lm(intercept ~ mean_confidence)
fit_teach_3 <-
df_test_reg %>%
filter(time_span == "main") %$%
lm(intercept ~ mean_confidence + mean_disruption)
plot(fit_teach_3)
fit_post_1 <-
df_test_reg %>%
filter(time_span == "subsequent") %$%
lm(intercept ~ mean_disruption)
fit_post_2 <-
df_test_reg %>%
filter(time_span == "subsequent") %$%
lm(intercept ~ mean_confidence)
fit_post_3 <-
df_test_reg %>%
filter(time_span == "subsequent") %$%
lm(intercept ~ mean_confidence + mean_disruption)
fit_post_4 <-
df_test_reg %>%
filter(time_span == "subsequent") %$%
lm(intercept ~ mean_confidence + mean_disruption + teaching_experience)
stargazer::stargazer(fit_post_1, fit_post_2, fit_post_3, fit_post_4,
type = "latex",
#  caption = "Teaching Phase",
dep.var.labels = "Intercept",
order = c(1, 3, 2),
covariate.labels = c("Disruption Factor",
"Confidence Factor",
"Teaching Experience"),
keep.stat = c("n","rsq","adj.rsq")
)
heart_rate_var <- "heart_rate_std"
# heart_rate_var <- "heart_rate"
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache2 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate","time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ summary(.) %>%
.$coefficients %>%
.[c(1,2)]) %>%
bind_rows(.,
.id = "time_span") %>%
pivot_longer(
cols = everything(),
names_to = "time_span",
values_to = "mean_value"
)
df_test <-
tibble(mean_intercept = cache2$mean_value[1:6],
mean_time = cache2$mean_value[7:12],
time_span = cache2$time_span[1:6]) %>%
right_join(x = .,
y = cache1,
by = "time_span") %>%
transmute(time_span,
intercept = mean_intercept + intercept,
time = mean_time + time,
id = id)
t.test(df_test$intercept[df_test$time_span == "main"],
df_test$intercept[df_test$time_span == "subsequent"],
paired = TRUE)
CohenD(x = df_test$intercept[df_test$time_span == "main"],
y = df_test$intercept[df_test$time_span == "subsequent"],
pooled = T
)
# heart_rate_var <- "heart_rate_std"
heart_rate_var <- "heart_rate"
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache2 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate","time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ summary(.) %>%
.$coefficients %>%
.[c(1,2)]) %>%
bind_rows(.,
.id = "time_span") %>%
pivot_longer(
cols = everything(),
names_to = "time_span",
values_to = "mean_value"
)
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache2 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate","time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ summary(.) %>%
.$coefficients %>%
.[c(1,2)]) %>%
bind_rows(.,
.id = "time_span") %>%
pivot_longer(
cols = everything(),
names_to = "time_span",
values_to = "mean_value"
)
df_test <-
tibble(mean_intercept = cache2$mean_value[1:6],
mean_time = cache2$mean_value[7:12],
time_span = cache2$time_span[1:6]) %>%
right_join(x = .,
y = cache1,
by = "time_span") %>%
transmute(time_span,
intercept = mean_intercept + intercept,
time = mean_time + time,
id = id)
df_test <-
tibble(mean_intercept = cache2$mean_value[1:6],
mean_time = cache2$mean_value[7:12],
time_span = cache2$time_span[1:6]) %>%
right_join(x = .,
y = cache1,
by = "time_span") %>%
transmute(time_span,
intercept = mean_intercept + intercept,
time = mean_time + time,
id = id)
t.test(df_test$intercept[df_test$time_span == "main"],
df_test$intercept[df_test$time_span == "subsequent"],
paired = TRUE)
CohenD(x = df_test$intercept[df_test$time_span == "main"],
y = df_test$intercept[df_test$time_span == "subsequent"],
pooled = T
)
heart_rate_var <- "heart_rate_std"
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache1 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate", "time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ ranef(.)$ID %>%
as_tibble(.,
rownames = "ID"
) %>%
clean_names()
) %>%
bind_rows(.,
.id = "time_span")
cache2 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate","time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ summary(.) %>%
.$coefficients %>%
.[c(1,2)]) %>%
bind_rows(.,
.id = "time_span") %>%
pivot_longer(
cols = everything(),
names_to = "time_span",
values_to = "mean_value"
)
cache2 <-
main %>%
dplyr::select("ID","time","heart_rate_std", "heart_rate","time_span") %>%
distinct() %>%
mutate(ID = as_factor(ID)) %>%
split(.$time_span) %>%
map(~ lmer(formula = eval(parse(text = heart_rate_var)) ~ 1 + time + (1 + time | ID),
data = .)) %>%
map(~ summary(.) %>%
.$coefficients %>%
.[c(1,2)]) %>%
bind_rows(.,
.id = "time_span") %>%
pivot_longer(
cols = everything(),
names_to = "time_span",
values_to = "mean_value"
)
df_test <-
tibble(mean_intercept = cache2$mean_value[1:6],
mean_time = cache2$mean_value[7:12],
time_span = cache2$time_span[1:6]) %>%
right_join(x = .,
y = cache1,
by = "time_span") %>%
transmute(time_span,
intercept = mean_intercept + intercept,
time = mean_time + time,
id = id)
t.test(df_test$intercept[df_test$time_span == "main"],
df_test$intercept[df_test$time_span == "subsequent"],
paired = TRUE)
CohenD(x = df_test$intercept[df_test$time_span == "main"],
y = df_test$intercept[df_test$time_span == "subsequent"],
pooled = T
)
df_test_reg <-
df_merge %>%
mutate(id = as_factor(ID)) %>%
group_by(id) %>%
summarise(mean_confidence = mean(confidence_factor, na.rm = T),
mean_disruption = mean(disruption_factor, na.rm = T)) %>%
right_join(x = .,
y = df_test,
by = "id") %>%
right_join(x = .,
y = transmute(df_demo,
id = as_factor(ID),
teaching_experience = teaching_experience
),
by = "id")
df_test_reg %>%
pivot_longer(cols = c("mean_confidence", "mean_disruption"),
names_to = "factor_means",
values_to = "means") %>%
ggplot(mapping = aes(x = means,
y = intercept
)
) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(cols = vars(time_span),
rows = vars(factor_means))
