size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim(0, 1000) +
labs(x ="",
y = "Milliseconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Average duration of fixations\n(AOI students)") +
theme_cowplot() +
theme(legend.position="none") -> plot_average_duration_stud
plot_average_duration_stud
##################### AVERAGE DURATIONS ON AOI DISRUPTIVE PERSON ########################
# filter group & total duration & number fixation on AOI Disruptive person
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Group,
Participant,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
mutate(
Average_duration_disrup = round(
Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person,
digits = 0
),
Group = as_factor(Group)
) -> df_aoi_disrup
# filter only for experts
df_aoi_disrup_expert <- df_aoi_disrup %>%
filter(Group == "Expert")
# filter only for novices
df_aoi_disrup_novice <- df_aoi_disrup %>%
filter(Group == "Novice")
######## Statistical Methods for Outlier Detection
### EXPERTS ###
# Boxplot showing outliers
ggplot(df_aoi_disrup_expert, aes(x = "", y = Average_duration_disrup)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "EXPERTS: Boxplot of average duration of fixations (AOI disruptive person)",
y = "Average duration of fixations") +
theme_minimal()
# Calculate the IQR and bounds
Q1 <- quantile(df_aoi_disrup_expert$Average_duration_disrup, 0.25)
Q3 <- quantile(df_aoi_disrup_expert$Average_duration_disrup, 0.75)
IQR <- Q3 - Q1
LowerBound <- Q1 - 1.5 * IQR
UpperBound <- Q3 + 1.5 * IQR
# Filter to remove outliers
df_no_outliers_disrup_dur <- df_aoi_disrup_expert %>%
filter(Average_duration_disrup >= LowerBound & Average_duration_disrup <= UpperBound)
# Check the number of rows before and after filtering
nrow(df_aoi_disrup_expert)  # Original data
nrow(df_no_outliers_disrup_dur)  # After removing outliers
# Create a dataframe with only the outliers
df_outliers_disrup_dur_expert <- df_aoi_disrup_expert %>%
filter(Average_duration_disrup < LowerBound | Average_duration_disrup > UpperBound)
# View the removed outliers
df_outliers_disrup_dur_expert
### NOVICES ###
# Boxplot showing outliers
ggplot(df_aoi_disrup_novice, aes(x = "", y = Average_duration_disrup)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "NOVICES: Boxplot of average duration of fixations (AOI disruptive person)",
y = "Average duration of fixations") +
theme_minimal()
# Calculate the IQR and bounds
Q1 <- quantile(df_aoi_disrup_novice$Average_duration_disrup, 0.25)
Q3 <- quantile(df_aoi_disrup_novice$Average_duration_disrup, 0.75)
IQR <- Q3 - Q1
LowerBound <- Q1 - 1.5 * IQR
UpperBound <- Q3 + 1.5 * IQR
# Filter to remove outliers
df_no_outliers_disrup_dur_nov <- df_aoi_disrup_novice %>%
filter(Average_duration_disrup >= LowerBound & Average_duration_disrup <= UpperBound)
# Check the number of rows before and after filtering
nrow(df_aoi_disrup_novice)  # Original data
nrow(df_no_outliers_disrup_dur_nov)  # After removing outliers
# Create a dataframe with only the outliers
df_outliers_disrup_dur_novice <- df_aoi_disrup_novice %>%
filter(Average_duration_disrup < LowerBound | Average_duration_disrup > UpperBound)
# View the removed outliers
df_outliers_disrup_dur_novice
######## N, M, SD, min & max average duration of fixations in milliseconds (AOI disruptive person)"
dur.disrup.table <-
df_aoi_disrup %>%
filter(!Participant %in% c("216", "105", "109", "133")) %>%
group_by(Group) %>%
summarise(
N = n(),
"M in ms" = round(mean(Average_duration_disrup), digits = 2),
"SD in ms" = round(sd(Average_duration_disrup), digits = 2),
"Min in ms" = round(min(Average_duration_disrup), digits = 2),
"Max in ms" = round(max(Average_duration_disrup), digits = 2)
)
knitr::kable(dur.disrup.table,
caption = "N, M, SD, min & max average duration of fixations in milliseconds (AOI disruptive person)")
######## PLOTTING
# plotting average duration on AOI Disruptive person
df_aoi_disrup %>%
filter(!Participant %in% c("216", "105", "109", "133")) %>%
ggplot(mapping = aes(x = Group,
y = Average_duration_disrup)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0, 1000) +
labs(x ="",
y = "Milliseconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Average duration of fixations\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position="none") -> plot_average_duration_disrup
plot_average_duration_disrup
##################### GRI IN MICRO-TEACHING UNIT ########################
######## Statistical Methods for Outlier Detection
### EXPERTS ###
# filter only for experts
df_gri_expert <- df_aoi_sum %>%
filter(Group == "Expert")
# Boxplot showing outliers
ggplot(df_gri_expert, aes(x = "", y = Average_duration_mtu)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "EXPERTS: Boxplot average duration (mtu)",
y = "Mean duration of fixations/\nmean number of fixations") +
theme_minimal()
# Boxplot showing outliers
ggplot(df_gri_expert, aes(x = "", y = Sum_number_fixation)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "EXPERTS: Boxplot of summarized number of fixations (mtu)",
y = "Mean duration of fixations/\nmean number of fixations") +
theme_minimal()
# Calculate the IQR and bounds
Q1 <- quantile(df_gri_expert$Sum_number_fixation, 0.25)
Q3 <- quantile(df_gri_expert$Sum_number_fixation, 0.75)
IQR <- Q3 - Q1
LowerBound <- Q1 - 1.5 * IQR
UpperBound <- Q3 + 1.5 * IQR
# Filter to remove outliers
df_no_outliers_gri_expert <- df_gri_expert %>%
filter(Sum_number_fixation >= LowerBound & Sum_number_fixation <= UpperBound)
# Check the number of rows before and after filtering
nrow(df_gri_expert)  # Original data
nrow(df_no_outliers_gri_expert)  # After removing outliers
# Create a dataframe with only the outliers
df_outliers_gri_expert <- df_gri_expert %>%
filter(Sum_number_fixation < LowerBound | Sum_number_fixation > UpperBound)
# View the removed outliers
df_outliers_gri_expert
### NOVICES ###
# filter only for novices
df_gri_novice <- df_aoi_sum %>%
filter(Group == "Novice")
# Boxplot showing outliers
ggplot(df_gri_novice, aes(x = "", y = Average_duration_mtu)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "NOVICES: Boxplot average duration (mtu)",
y = "Mean duration of fixations/\nmean number of fixations") +
theme_minimal()
# Boxplot showing outliers
ggplot(df_gri_novice, aes(x = "", y = Sum_number_fixation)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "NOVICES: Boxplot of summarized number of fixations (mtu)",
y = "Mean duration of fixations/\nmean number of fixations") +
theme_minimal()
# calculate GRI without outliers
df_aoi_sum %>%
filter(!Participant == "205") %>%
group_by(Group) %>%
mutate(
GRI = round(Average_duration_mtu / Sum_number_fixation, digits = 2),
)-> df_no_outliers_gri
######## N, M, SD, min & max number of fixation (micro-teaching unit)
gri.table <-
df_no_outliers_gri %>%
group_by(Group) %>%
summarise(
N = n(),
"M" = round(mean(GRI), digits = 2),
"SD" = round(sd(GRI), digits = 2),
"Min" = round(min(GRI), digits = 2),
"Max" = round(max(GRI), digits = 2)
)
knitr::kable(gri.table,
caption = "N, M, SD, min & max GRI (micro-teaching unit)")
######## PLOTTING
# plotting number of fixations on ALL AOIS
df_no_outliers_gri %>%
ggplot(mapping = aes(x = Group, y = GRI)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim(0, 1) +
labs(x = "", y = "mean duration of fixations/\nmean number of fixations") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("GRI\n(micro-teaching unit)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_gri_group
plot_gri_group
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(
Duration_of_interval,
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
GRI_mtu = round(Average_duration_mtu / Sum_number_fixation, digits = 2)
) %>%
drop_na() %>%
filter(!Participant %in% c(216)) %>%
filter(!Participant %in% c("216", "217", "127", "105", "121", "137")) %>%  # filter SJT outlier
filter(!Participant %in% c("205")) %>%  # filter GRI outlier
dplyr::select(Participant,
Number_fixation_min_mtu,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
# sjt
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
dplyr::select(UI06_05, # Participant
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 %in% c(201, 223, 216)) %>%  # exclude ID with no eye tracking data
filter(!UI06_05 %in% c("216", "217", "127", "105", "121", "137")) %>%  # filter SJT outlier
filter(!UI06_05 %in% c("205")) %>%  # filter GRI outlier
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_Managing_momentum = round(SJT_ST_gek, 2),
SJT_Rules_routines = round(SJT_R_gek, 2),
SJT_All = round(SJT_KF_gek, 2)
) %>%
arrange(Participant)
View(df_outliers_stud_nov)
############### TIME TO FIRST FIXATION ####################
df_aoi %>%
filter(TOI %in% c("Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
dplyr::select(Participant,
TOI,
Time_to_first_fixation.Disruptive_Person,
) %>%
rowwise() %>%
drop_na() %>%
group_by(Participant) %>%
filter(!Time_to_first_fixation.Disruptive_Person == 0, # exclude all participants with 0 msec
!Time_to_first_fixation.Disruptive_Person > 30000) %>% # cut-off 30sec
summarise(N = n(),
Time_to_first_fixation.Disruptive_Person_Sum = sum(Time_to_first_fixation.Disruptive_Person/N)
) %>%
mutate(Group = ifelse(Participant < 200, "Novice", "Expert"),
Sum_disruptions = sum(N),
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person_Sum / 1000,
digits = 2)) -> df_ttff_disrup # changing milliseconds into seconds
######## Statistical Methods for Outlier Detection
### EXPERTS ###
# filter only for experts
df_ttff_disrup_expert <- df_ttff_disrup %>%
filter(Group == "Expert")
# Boxplot showing outliers
ggplot(df_ttff_disrup_expert, aes(x = "", y = Disrup_time_fixation_sec)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "EXPERTS: Boxplot of time to first fixation in seconds (AOI disruptive person)",
y = "Time to first fixation in seconds") +
theme_minimal()
# Calculate the IQR and bounds
Q1 <- quantile(df_ttff_disrup_expert$Disrup_time_fixation_sec, 0.25)
Q3 <- quantile(df_ttff_disrup_expert$Disrup_time_fixation_sec, 0.75)
IQR <- Q3 - Q1
LowerBound <- Q1 - 1.5 * IQR
UpperBound <- Q3 + 1.5 * IQR
# Filter to remove outliers
df_no_outliers_ttff_expert <- df_ttff_disrup_expert %>%
filter(Disrup_time_fixation_sec >= LowerBound & Disrup_time_fixation_sec <= UpperBound)
# Check the number of rows before and after filtering
nrow(df_ttff_disrup_expert)  # Original data
nrow(df_no_outliers_ttff_expert)  # After removing outliers
# Create a dataframe with only the outliers
df_outliers_ttff_expert <- df_ttff_disrup_expert %>%
filter(Disrup_time_fixation_sec < LowerBound | Disrup_time_fixation_sec > UpperBound)
# View the removed outliers
df_outliers_ttff_expert
### NOVICES ###
# filter only for novice
df_ttff_disrup_novice <- df_ttff_disrup %>%
filter(Group == "Novice")
# Boxplot showing outliers
ggplot(df_ttff_disrup_novice, aes(x = "", y = Disrup_time_fixation_sec)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "NOVICE: Boxplot of time to first fixation in seconds (AOI disruptive person)",
y = "Time to first fixation in seconds") +
theme_minimal()
# Calculate the IQR and bounds
Q1 <- quantile(df_ttff_disrup_novice$Disrup_time_fixation_sec, 0.25)
Q3 <- quantile(df_ttff_disrup_novice$Disrup_time_fixation_sec, 0.75)
IQR <- Q3 - Q1
LowerBound <- Q1 - 1.5 * IQR
UpperBound <- Q3 + 1.5 * IQR
# Filter to remove outliers
df_no_outliers_ttff_novice <- df_ttff_disrup_novice %>%
filter(Disrup_time_fixation_sec >= LowerBound & Disrup_time_fixation_sec <= UpperBound)
# Check the number of rows before and after filtering
nrow(df_ttff_disrup_novice)  # Original data
nrow(df_no_outliers_ttff_novice)  # After removing outliers
# Create a dataframe with only the outliers
df_outliers_ttff_novice <- df_ttff_disrup_novice %>%
filter(Disrup_time_fixation_sec < LowerBound | Disrup_time_fixation_sec > UpperBound)
# View the removed outliers
df_outliers_ttff_novice
############### M, SD, min, max time to first fixation "Disruptive Person"
ttff.disrup.table <-
df_ttff_disrup %>%
filter(!Participant %in% c("216", "113", "123")) %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec), digits = 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec), digits = 2),
"Min in sec" = round(min(Disrup_time_fixation_sec), digits = 2),
"Max in sec" = round(max(Disrup_time_fixation_sec), digits = 2)
)
knitr::kable(ttff.disrup.table,
caption = "N, M, SD, min & max time to first fixation in seconds (AOI disruptive person)")
############### M, SD, min, max of the perceived "Disruptive Person" ###############
number.perceived.disrup.table <-
df_ttff_disrup %>%
filter(!Participant %in% c("216", "113", "123")) %>%
group_by(Group) %>%
summarise(
Mean = round(mean(N, na.rm = TRUE), digits = 2),
SD = round(sd(N, na.rm = TRUE), digits = 2),
Min = min(N, na.rm = TRUE),
Max = max(N, na.rm = TRUE)
)
knitr::kable(number.perceived.disrup.table,
caption = "N, M, SD, min & max of the perceived ´disruptive person´")
############### PLOTTING ###############
##################### plotting "perceived disruptive person" for groups #####################
plot_n_disrup <-
df_ttff_disrup %>%
filter(!Participant %in% c("216", "113", "123")) %>%
ggplot(mapping = aes(x = Group,
y = N)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0,10) +
labs(x ="",
y = "Counts") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Counts of the perceived ´disruptive person´\n") +
theme_cowplot() +
theme(legend.position="none")
plot_n_disrup
##################### plotting time to first fixation for groups #####################
plot_time_disrup <-
df_ttff_disrup %>%
filter(!Participant %in% c("216", "113", "123")) %>%
ggplot(mapping = aes(x = Group,
y = Disrup_time_fixation_sec)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0,10) +
labs(x ="",
y = "Seconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Time to first fixation\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position="none")
plot_time_disrup
df_gri_sjt <- list(df_sjt,
df_aoi_numb_dur)
df_list_gri_sjt <- list(df_sjt,
df_aoi_numb_dur)
df_merge_gri_sjt <- df_list_gri_sjt %>%
reduce(full_join, by='Participant') %>%
arrange(Participant) %>%
dplyr::select(.,
-"Participant",
-"Teaching Experience")
# sjt
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
dplyr::select(UI06_05, # Participant
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 %in% c(201, 223, 216)) %>%  # exclude ID with no eye tracking data
filter(!UI06_05 %in% c("216", "217", "127", "105", "121", "137")) %>%  # filter SJT outlier
filter(!UI06_05 %in% c("205")) %>%  # filter GRI outlier
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_Managing_momentum = round(SJT_ST_gek, 2),
SJT_Rules_routines = round(SJT_R_gek, 2),
SJT_All = round(SJT_KF_gek, 2)
) %>%
arrange(Participant)
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(
Duration_of_interval,
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
GRI_mtu = round(Average_duration_mtu / Sum_number_fixation, digits = 2)
) %>%
drop_na() %>%
filter(!Participant %in% c(216)) %>%
filter(!Participant %in% c("216", "217", "127", "105", "121", "137")) %>%  # filter SJT outlier
filter(!Participant %in% c("205")) %>%  # filter GRI outlier
dplyr::select(Participant,
Number_fixation_min_mtu,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
df_list_gri_sjt <- list(df_sjt,
df_aoi_numb_dur)
df_merge_gri_sjt <- df_list_gri_sjt %>%
reduce(full_join, by='Participant') %>%
arrange(Participant) %>%
dplyr::select(.,
-"Participant")
View(df_merge_gri_sjt)
# p-value for GRI x STJ_All
cor.test(df_aoi_numb_dur$GRI_mtu, df_sjt$SJT_All)
# p-value for GRI x STJ_All
cor.test(df_aoi_numb_dur$GRI_mtu, df_sjt$SJT_Monitoring)
### ALL
df_sjt_all <- df_sjt_no_out %>%
dplyr::select(WT_S1_F1F2_AL:WT_S14_F4F6_R)
# calculate omega with omega() function
df_sjt_all <- omega(df_sjt_all)
# display the results
print(df_sjt_all)
# read in data
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) # non- & paraverbal communication
# calculate omega with omega() function
df_quest <- omega(df_quest)
# display the results
print(df_quest)
