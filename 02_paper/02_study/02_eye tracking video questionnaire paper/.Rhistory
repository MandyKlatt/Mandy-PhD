scale_fill_brewer(palette  = "RdBu") +
ggtitle("GRI\n(micro-teaching unit)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_gri_group
plot_gri_group
# GRI (mirco-teaching unit)
# t-test for expertise differences
t.test(x = df_no_outliers_gri$GRI[df_no_outliers_gri$Group == "Expert"],
y = df_no_outliers_gri$GRI[df_no_outliers_gri$Group == "Novice"],
var.equal = TRUE)
# GRI (mirco-teaching unit)
# effect size for expertise differences
d_gri_all <- CohenD(x = df_no_outliers_gri$GRI[df_no_outliers_gri$Group == "Expert"],
y = df_no_outliers_gri$GRI[df_no_outliers_gri$Group == "Novice"],
na.rm = TRUE)
round(d_gri_all, 2)
df_aoi %>%
filter(TOI %in% c("Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
dplyr::select(Participant,
TOI,
Time_to_first_fixation.Disruptive_Person,
) %>%
rowwise() %>%
drop_na() %>%
group_by(Participant) %>%
filter(!Time_to_first_fixation.Disruptive_Person == 0, # exclude all participants with 0 msec
!Time_to_first_fixation.Disruptive_Person > 30000) %>% # cut-off 30sec
summarise(N = n(),
Time_to_first_fixation.Disruptive_Person_Sum = sum(Time_to_first_fixation.Disruptive_Person/N)
) %>%
mutate(Group = ifelse(Participant < 200, "Novice", "Expert"),
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person_Sum / 1000,
digits = 2)) -> df_ttff_disrup # changing milliseconds into seconds
# M, SD, min, max time to first fixation "Disruptive Person"
ttff.disrup.table <-
df_ttff_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec), digits = 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec), digits = 2),
"Min in sec" = round(min(Disrup_time_fixation_sec), digits = 2),
"Max in sec" = round(max(Disrup_time_fixation_sec), digits = 2)
)
knitr::kable(ttff.disrup.table,
caption = "N, M, SD, min & max time to first fixation in seconds (AOI disruptive person)")
View(df_ttff_disrup)
df_aoi %>%
filter(TOI %in% c("Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
dplyr::select(Participant,
TOI,
Time_to_first_fixation.Disruptive_Person,
) %>%
rowwise() %>%
drop_na() %>%
group_by(Participant) %>%
filter(!Time_to_first_fixation.Disruptive_Person == 0, # exclude all participants with 0 msec
!Time_to_first_fixation.Disruptive_Person > 30000) %>% # cut-off 30sec
summarise(N = n(),
Time_to_first_fixation.Disruptive_Person_Sum = sum(Time_to_first_fixation.Disruptive_Person/N)
) %>%
mutate(Group = ifelse(Participant < 200, "Novice", "Expert"),
Sum_disruptions = sum(N),
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person_Sum / 1000,
digits = 2)) -> df_ttff_disrup # changing milliseconds into seconds
############### M, SD, min, max time to first fixation "Disruptive Person"
ttff.disrup.table <-
df_ttff_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec), digits = 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec), digits = 2),
"Min in sec" = round(min(Disrup_time_fixation_sec), digits = 2),
"Max in sec" = round(max(Disrup_time_fixation_sec), digits = 2)
)
knitr::kable(ttff.disrup.table,
caption = "N, M, SD, min & max time to first fixation in seconds (AOI disruptive person)")
##################### plotting time to first fixation for groups #####################
plot_time_disrup <-
ggplot(data = df_ttff_disrup,
mapping = aes(x = Group,
y = Disrup_time_fixation_sec)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0,14) +
labs(x ="",
y = "Seconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Time to first fixation\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position="none")
plot_time_disrup
# Boxplot showing outliers
ggplot(df_ttff_disrup, aes(x = "", y = Disrup_time_fixation_sec)) +
geom_boxplot(outlier.color = "red", outlier.shape = 19, outlier.size = 3) +
labs(title = "Boxplot of time to first fixation in seconds (AOI disruptive person)",
y = "Time to first fixation in seconds") +
theme_minimal()
# Calculate the IQR and bounds
Q1 <- quantile(df_ttff_disrup$Disrup_time_fixation_sec, 0.25)
Q3 <- quantile(df_ttff_disrup$Disrup_time_fixation_sec, 0.75)
IQR <- Q3 - Q1
LowerBound <- Q1 - 1.5 * IQR
UpperBound <- Q3 + 1.5 * IQR
# Filter to remove outliers
df_no_outliers_ttff <- df_ttff_disrup %>%
filter(Disrup_time_fixation_sec >= LowerBound & Disrup_time_fixation_sec <= UpperBound)
# Check the number of rows before and after filtering
nrow(df_ttff_disrup)  # Original data
nrow(df_no_outliers_ttff)  # After removing outliers
# Create a dataframe with only the outliers
df_outliers_ttff <- df_ttff_disrup %>%
filter(Disrup_time_fixation_sec < LowerBound | Disrup_time_fixation_sec > UpperBound)
# View the removed outliers
df_outliers_ttff
############### M, SD, min, max time to first fixation "Disruptive Person"
ttff.disrup.table <-
df_no_outliers_ttff %>%
group_by(Group) %>%
summarise(
N = n(),
"M in sec" = round(mean(Disrup_time_fixation_sec), digits = 2),
"SD in sec" = round(sd(Disrup_time_fixation_sec), digits = 2),
"Min in sec" = round(min(Disrup_time_fixation_sec), digits = 2),
"Max in sec" = round(max(Disrup_time_fixation_sec), digits = 2)
)
knitr::kable(ttff.disrup.table,
caption = "N, M, SD, min & max time to first fixation in seconds (AOI disruptive person)")
# View the removed outliers
df_outliers_ttff
##################### plotting time to first fixation for groups #####################
plot_time_disrup <-
ggplot(data = df_no_outliers_ttff,
mapping = aes(x = Group,
y = Disrup_time_fixation_sec)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0,14) +
labs(x ="",
y = "Seconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Time to first fixation\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position="none")
plot_time_disrup
##################### plotting time to first fixation for groups #####################
plot_time_disrup <-
ggplot(data = df_no_outliers_ttff,
mapping = aes(x = Group,
y = Disrup_time_fixation_sec)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0,12) +
labs(x ="",
y = "Seconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Time to first fixation\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position="none")
plot_time_disrup
df_outliers_ttff
# TIME TO FIRST FIXATIONS on disruptive person
# t-test for expertise differences
t.test(x = df_no_outliers_ttff$Disrup_time_fixation_sec[df_no_outliers_ttff$Group == "Expert"],
y = df_no_outliers_ttff$Disrup_time_fixation_sec[df_no_outliers_ttff$Group == "Novice"],
var.equal = TRUE)
# TIME TO FIRST FIXATIONS on disruptive person
# effect size for expertise differences
d_time_disrup <- CohenD(x = df_no_outliers_ttff$Disrup_time_fixation_sec[df_no_outliers_ttff$Group == "Expert"],
y = df_no_outliers_ttff$Disrup_time_fixation_sec[df_no_outliers_ttff$Group == "Novice"],
na.rm = TRUE)
round(d_time_disrup, 2)
# demo data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 == 201,
!LI06_05 == 223) %>% # exclude participant due to missing eye tracking data
transmute(Participant = LI06_05,
`Teaching Experience` = LI04_01,
)
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(
Duration_of_interval,
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
GRI_mtu = round(Average_duration_mtu / Sum_number_fixation, digits = 2)
) %>%
drop_na() %>%
dplyr::select(Participant,
Number_fixation_min_mtu,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
# average duration, number fixation, GRI (AOI student)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Participant,
Duration_of_interval,
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)",
"Number_of_fixations.Anna",
"Number_of_fixations.Bianca",
"Number_of_fixations.Carl(a)"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Stud_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Stud_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Stud_number_fixation_min = round(Duration_of_interval_min / Stud_number_fixation, digits = 2),
Average_duration_stud = round(Stud_duration_fixation / Stud_number_fixation, digits = 0),
GRI_stud = round(Average_duration_stud / Stud_number_fixation, digits = 2)
) %>%
dplyr::select(Participant,
Stud_number_fixation_min,
Average_duration_stud,
GRI_stud) -> df_aoi_stud
# average duration, number fixation, GRI (AOI disruptive person)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
mutate(
Average_duration_disrup = round(
Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person,
digits = 0),
GRI_disrup = round(
Average_duration_disrup / Number_of_fixations.Disruptive_Person, digits = 2)) %>%
dplyr::select(Participant,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
GRI_disrup
) -> df_aoi_disrup
# time to first fixatoin (AOI disruptive person)
df_aoi %>%
filter(
TOI %in% c(
"Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
dplyr::select(Participant, TOI, Time_to_first_fixation.Disruptive_Person, ) %>%
rowwise() %>%
drop_na() %>%
group_by(Participant) %>%
summarise(
Time_to_first_fixation.Disruptive_Person_Sum = sum(Time_to_first_fixation.Disruptive_Person)
) %>%
mutate(
Group = ifelse(Participant < 200, "Novice", "Expert"),
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person_Sum / 1000,
digits = 2
)
) -> df_ttff_disrup
# rating scales
df_sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201,
223),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
) %>%
rename(Participant = ID) %>%
group_by(Participant) %>%
summarise(
Mean_disrupption_appraisal = round(mean(disruption_appraisal), 2),
Mean_confidence_appraisal = round(mean(confidence_appraisal), 2),
Mean_prevalence_rating = round(mean(prevalence_rating), 2)
)%>%
dplyr::select(Participant,
Mean_disrupption_appraisal,
Mean_confidence_appraisal,
Mean_prevalence_rating)
# sjt
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
dplyr::select(UI06_05, # Participant
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 %in% c(201, 223)) %>%  # exclude ID with no eye tracking data
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_Managing_momentum = round(SJT_ST_gek, 2),
SJT_Rules_routines = round(SJT_R_gek, 2),
SJT_All = round(SJT_KF_gek, 2)
)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05, LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223)) %>% # exclude ID with no eye tracking data
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
transmute(
Participant = Participant,
"Quest_All" = round(mean(c_across(starts_with(
"L"
)), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2)
)
# create a big data frame with all measures
# put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_sri,
df_sjt,
df_quest)
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "pearson") %>%
round(., digits = 2)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
# filter(Participant > 200) %>%
dplyr::select(.,
-"Participant")
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "pearson") %>%
round(., digits = 2)
View(cor_tab)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
filter(Participant > 200) %>%
dplyr::select(.,
-"Participant")
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "pearson") %>%
round(., digits = 2)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
# filter(Participant > 200) %>%
dplyr::select(.,
-"Participant")
View(df_merge)
# p-value for GRI x STJ_All
df_merge %>%
dplyr::select(GRI_mtu,
SJT_All) %>%
cor.test()
# p-value for GRI x STJ_All
cor.test(df_merge$GRI_mtu, df_merge$SJT_All)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
# filter(Participant > 200) %>%
dplyr::select(.,
-"Participant",
-"Teaching Experience")
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "pearson") %>%
round(., digits = 2)
# teaching experience only with experts
df_merge_teaching_experience <-
df_list %>% reduce(full_join, by='Participant') %>%
filter(Participant > 200) %>%
dplyr::select(.,
-"Participant")
# create a correlation matrix
cor_tab_teaching_experience <-
df_merge_teaching_experience %>%
cor(method = "pearson") %>%
round(., digits = 2)
View(cor_tab_teaching_experience)
######## N, M, SD, min & max number of fixation on AOI "disruptive person"
nof.disrup.table <-
df_no_outliers_disrup %>%
group_by(Group) %>%
summarise(
N = n(),
"M" = round(mean(Number_of_fixations.Disruptive_Person), digits = 2),
"SD" = round(sd(Number_of_fixations.Disruptive_Person), digits = 2),
"Min" = round(min(Number_of_fixations.Disruptive_Person), digits = 2),
"Max" = round(max(Number_of_fixations.Disruptive_Person), digits = 2)
)
knitr::kable(nof.disrup.table,
caption = "N, M, SD, min & max number of fixation (AOI disruptive person)")
# plotting average duration on AOI Disruptive person
df_no_outliers_disrup %>%
ggplot(mapping = aes(x = Group, y = Number_of_fixations.Disruptive_Person)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim(0, 80) +
labs(x = "", y = "Number of fixations") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Number of fixations\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_number_disrup
plot_number_disrup
# plotting average duration on AOI Disruptive person
df_no_outliers_disrup %>%
ggplot(mapping = aes(x = Group, y = Number_of_fixations.Disruptive_Person)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim(0, 100) +
labs(x = "", y = "Number of fixations") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Number of fixations\n(AOI disruptive person)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_number_disrup
plot_number_disrup
