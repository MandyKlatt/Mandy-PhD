ggtitle("GRI\n(micro-teaching unit)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_gri_group
plot_gri_group
# GRI (mirco-teaching unit)
# t-test for expertise differences
t.test(x = df_gri$GRI[df_gri$Group == "Expert"],
y = df_gri$GRI[df_gri$Group == "Novice"],
var.equal = TRUE)
# GRI (mirco-teaching unit)
# effect size for expertise differences
d_gri_all <- CohenD(x = df_gri$GRI[df_gri$Group == "Expert"],
y = df_gri$GRI[df_gri$Group == "Novice"],
na.rm = TRUE)
# GRI (mirco-teaching unit)
# t-test for expertise differences
t.test(x = df_gri$GRI[df_gri$Group == "Expert"],
y = df_gri$GRI[df_gri$Group == "Novice"],
var.equal = TRUE)
# GRI (mirco-teaching unit)
# effect size for expertise differences
d_gri_all <- CohenD(x = df_gri$GRI[df_gri$Group == "Expert"],
y = df_gri$GRI[df_gri$Group == "Novice"],
na.rm = TRUE)
round(d_gri_all, 2)
# demo data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 == 201,
!LI06_05 == 223) %>% # exclude participant due to missing eye tracking data
transmute(Participant = LI06_05,
`Teaching Experience` = LI04_01,
)
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(
Duration_of_interval,
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
GRI_mtu = round(Average_duration_mtu / Number_fixation_min_mtu, digits = 2)
) %>%
drop_na() %>%
dplyr::select(Participant,
Number_fixation_min_mtu,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
# average duration, number fixation, GRI (AOI student)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Participant,
Duration_of_interval,
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)",
"Number_of_fixations.Anna",
"Number_of_fixations.Bianca",
"Number_of_fixations.Carl(a)"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Stud_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Stud_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Stud_number_fixation_min = round(Duration_of_interval_min / Stud_number_fixation, digits = 2),
Average_duration_stud = round(Stud_duration_fixation / Stud_number_fixation, digits = 0),
GRI_stud = round(Average_duration_stud / Stud_number_fixation, digits = 2)
) %>%
dplyr::select(Participant,
Stud_number_fixation_min,
Average_duration_stud,
GRI_stud) -> df_aoi_stud
# average duration, number fixation, GRI (AOI disruptive person)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
mutate(
Average_duration_disrup = round(
Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person,
digits = 0),
GRI_disrup = round(
Average_duration_disrup / Number_of_fixations.Disruptive_Person, digits = 2)) %>%
dplyr::select(Participant,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
GRI_disrup
) -> df_aoi_disrup
df_aoi %>%
filter(TOI %in% c("Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
dplyr::select(Participant,
TOI,
Time_to_first_fixation.Disruptive_Person,
) %>%
rowwise() %>%
drop_na() %>%
group_by(Participant) %>%
filter(!Time_to_first_fixation.Disruptive_Person == 0, # exclude all participants with 0 msec
!Time_to_first_fixation.Disruptive_Person > 30000) %>% # cut-off 30sec
summarise(N = n(),
Time_to_first_fixation.Disruptive_Person_Sum = sum(Time_to_first_fixation.Disruptive_Person/N)
) %>%
mutate(Group = ifelse(Participant < 200, "Novice", "Expert"),
Sum_disruptions = sum(N),
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person_Sum / 1000,
digits = 2)) -> df_ttff_disrup # changing milliseconds into seconds
# rating scales
df_sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201,
223),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
) %>%
rename(Participant = ID) %>%
group_by(Participant) %>%
summarise(
Mean_disrupption_appraisal = round(mean(disruption_appraisal), 2),
Mean_confidence_appraisal = round(mean(confidence_appraisal), 2),
Mean_prevalence_rating = round(mean(prevalence_rating), 2)
)%>%
dplyr::select(Participant,
Mean_disrupption_appraisal,
Mean_confidence_appraisal)
# sjt
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
dplyr::select(UI06_05, # Participant
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 %in% c(201, 223)) %>%  # exclude ID with no eye tracking data
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_All = round(SJT_KF_gek, 2),
) %>%
arrange(Participant)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05, LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223)) %>% # exclude ID with no eye tracking data
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
transmute(
Participant = Participant,
"Quest_All" = round(mean(c_across(starts_with(
"L"
)), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2)
)
# create a big data frame with all measures
# put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_ttff_disrup,
df_sri,
df_sjt,
df_quest)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
# filter(`Teaching Experience` > 0) %>%
dplyr::select(Stud_number_fixation_min,
Average_duration_stud,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
Disrup_time_fixation_sec,
GRI_mtu,
SJT_All,
SJT_Monitoring,
Quest_All
)
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "pearson") %>%
round(., digits = 2)
### Teaching experience with only experts
# merge all data frames in list
df_merge_experts <-
df_list %>% reduce(full_join, by='Participant') %>%
filter(`Teaching Experience` > 0) %>%
dplyr::select(`Teaching Experience`,
Stud_number_fixation_min,
Average_duration_stud,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
Disrup_time_fixation_sec,
GRI_mtu,
SJT_All,
SJT_Monitoring,
Quest_All
)
# create a correlation matrix
cor_tab_experts <-
df_merge_experts %>%
cor(method = "pearson") %>%
round(., digits = 2)
# p-value for GRI x STJ_All
cor.test(df_merge$GRI_mtu, df_merge$SJT_All)
# p-value for GRI x STJ_Monitoring
cor.test(df_merge$GRI_mtu, df_merge$SJT_Monitoring)
# p-value for GRI x Teaching Experience
cor.test(df_merge_experts$Stud_number_fixation_min, df_merge_experts$`Teaching Experience`)
View(cor_tab)
# p-value for GRI x STJ_All
cor.test(df_merge$GRI_mtu, df_merge$SJT_All)
# p-value for GRI x STJ_Monitoring
cor.test(df_merge$GRI_mtu, df_merge$SJT_Monitoring)
# p-value for GRI x Teaching Experience
cor.test(df_merge_experts$Stud_number_fixation_min, df_merge_experts$`Teaching Experience`)
# p-value for GRI x Teaching Experience
cor.test(df_merge_experts$GRI_mtu, df_merge_experts$`Teaching Experience`)
##################### NUMBER OF FIXATION IN MICRO-TEACHING UNIT ########################
# filter group, participants, total duration & number fixation (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Group,
Participant,
Duration_of_interval,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Group = Group,
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Duration_of_interval_sec = round(Duration_of_interval/1000, digits = 2),
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_msec_mtu = round(Sum_number_fixation / Duration_of_interval, digits = 6),
Number_fixation_sec_mtu = round(Sum_number_fixation / Duration_of_interval_sec, digits = 2),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
Group = as_factor(Group)
) %>%
drop_na() -> df_aoi_sum
# N, M, SD, min & max number of fixation per minute (micro-teaching unit)
nof.table <-
df_aoi_sum %>%
group_by(Group) %>%
summarise(
N = n(),
"M" = round(mean(Number_fixation_min_mtu), digits = 2),
"SD" = round(sd(Number_fixation_min_mtu), digits = 2),
"Min" = round(min(Number_fixation_min_mtu), digits = 2),
"Max" = round(max(Number_fixation_min_mtu), digits = 2)
)
knitr::kable(nof.table,
caption = "N, M, SD, min & max number of fixation per minute (micro-teaching unit)")
# plotting number of fixations (micro-teaching unit)
df_aoi_sum %>%
ggplot(mapping = aes(x = Group, y = Number_fixation_min_mtu)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim(0, 150) +
labs(x = "", y = "Number of fixations per minute") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Number of fixations per minute\n(micro-teaching unit)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_number_group
plot_number_group
# NUMBER OF FIXATIONS PER MINUTE (micro-teaching unit)
# t-test for expertise differences
t.test(
x = df_aoi_sum$Number_fixation_min_mtu[df_aoi_sum$Group == "Expert"],
y = df_aoi_sum$Number_fixation_min_mtu[df_aoi_sum$Group == "Novice"],
var.equal = TRUE
)
# NUMBER OF FIXATIONS PER MINUTE (micro-teaching unit)
# effect size for expertise differences
d_number_all <- CohenD(
x = df_aoi_sum$Number_fixation_min_mtu[df_aoi_sum$Group == "Expert"],
y = df_aoi_sum$Number_fixation_min_mtu[df_aoi_sum$Group == "Novice"],
na.rm = TRUE
)
round(d_number_all, 2)
# N, M, SD, min & max average duration of fixations (micro-teaching unit)
dur.table <-
df_aoi_sum %>%
group_by(Group) %>%
summarise(
N = n(),
"M in ms" = round(mean(Average_duration_mtu), digits = 2),
"SD in ms" = round(sd(Average_duration_mtu), digits = 2),
"Min in ms" = round(min(Average_duration_mtu), digits = 2),
"Max in ms" = round(max(Average_duration_mtu), digits = 2)
)
knitr::kable(dur.table,
caption = "N, M, SD, min & max duration of fixations in milliseconds (micro-teaching unit)")
# plotting average duration (micro-teaching unit)
df_aoi_sum %>%
ggplot(mapping = aes(x = Group,
y = Average_duration_mtu)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
ylim(0, 1000) +
labs(x ="",
y = "Milliseconds") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Average duration of fixations\n(micro-teaching unit)") +
theme_cowplot() +
theme(legend.position="none") -> plot_average_duration_group
plot_average_duration_group
# AVERAGE DURATION OF FIXATIONS on all AOIs
# t-test for expertise differences
t.test(x = df_aoi_sum$Average_duration_mtu[df_aoi_sum$Group == "Expert"],
y = df_aoi_sum$Average_duration_mtu[df_aoi_sum$Group == "Novice"],
var.equal = TRUE)
# AVERAGE DURATION OF FIXATIONS on all AOIs
# effect size for expertise differences
d_aver_all <- CohenD(x = df_aoi_sum$Average_duration_mtu[df_aoi_sum$Group == "Expert"],
y = df_aoi_sum$Average_duration_mtu[df_aoi_sum$Group == "Novice"],
na.rm = TRUE)
round(d_aver_all, 2)
# load data files with modified scales
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 == 201) %>% # exclude ID with no eye tracking data
mutate(LI06_05 = ifelse(LI06_05 < 200, "Novice", "Expert")) %>%
rename(Group = LI06_05)
# remove NAs
df_quest <- na.omit(df_quest)
# create table with means
df_quest_table <-
df_quest %>%
group_by(Group) %>%
summarise(
N = n(),
"M cm" = round(mean(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"SD cm" = round(sd(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"Min cm" = round(min(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"Max cm" = round(max(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
# "N cm" = length(c_across(starts_with("LP")), na.rm = TRUE),
"M n&pv com" = round(mean(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2),
"SD n&pv com" = round(sd(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2),
"Min n&pv com" = round(min(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2),
"Max n&pv com" = round(max(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2)
)
knitr::kable(df_quest_table,
caption = "Mean, SD, min, max for classroom managament (cm) and non-/paraverbal communication (n&pv com)")
#################### Plots ############
# create table with means
df_quest_plot <-
df_quest %>%
rowwise() %>%
transmute(Group = Group,
"All" = round(mean(c_across(starts_with("L")), na.rm = TRUE), 2),
"Classroom management" = round(mean(c_across(starts_with("LM")), na.rm = TRUE), 2),
"Non-/paraverbal communication" = round(mean(c_across(starts_with("LP")), na.rm = TRUE), 2)
)
# changing from wide to long format
df_quest_long <- df_quest_plot %>%
pivot_longer(!Group, names_to = "Scales Classroom Questionnaire", values_to = "Mean")
# plotting mean of all aspects
quest_plot <-
df_quest_long %>%
mutate(Group = factor(Group,
levels = c("Novice",
"Expert")
)
) %>%
ggplot(mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 1,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
labs(x = "") +
ylim(0,4) +
scale_fill_brewer(palette  = "RdBu") +
facet_wrap(vars(`Scales Classroom Questionnaire`),
nrow = 1, strip.position = "bottom") +
theme_cowplot() +
ggtitle("Classroom Questionnaire") +
theme(
plot.title = element_text(size = 25,
face = "bold"),
legend.title = element_text(size = 20),
legend.text = element_text(size = 15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 8),
axis.title.y = element_text(size = 20),
axis.title.x = element_text(size = 22)
)
quest_plot
#### All ####
# t-test for expertise differences
t.test(x = df_quest_plot$All[df_quest_plot$Group == "Expert"],
y = df_quest_plot$All[df_quest_plot$Group == "Novice"],
var.equal = TRUE
)
# effect size for expertise differences
d_quest_all <- CohenD(x = df_quest_plot$All[df_quest_plot$Group == "Expert"],
y = df_quest_plot$All[df_quest_plot$Group == "Novice"],
na.rm = TRUE
)
round(d_quest_all, 2)
# plotting number of fixations on ALL AOIS
df_gri %>%
ggplot(mapping = aes(x = Group, y = GRI)) +
geom_boxplot(mapping = aes(fill = Group), outlier.shape = NA) +
geom_point(
size = 2,
alpha = 0.7,
position = position_jitter(
seed = 1,
width = 0.1,
height = 0.1
)
) +
ylim(0, 12) +
labs(x = "", y = "average duration of fixations/\nnumber of fixations per minute") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("GRI\n(micro-teaching unit)") +
theme_cowplot() +
theme(legend.position = "none") -> plot_gri_group
plot_gri_group
