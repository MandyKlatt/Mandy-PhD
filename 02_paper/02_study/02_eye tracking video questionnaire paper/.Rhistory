round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# rename columns
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table,
caption = "Scale analysis for teachers' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
quest.table
View(quest.table)
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table,
caption = "Scale analysis for teachers' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
setwd("~/GitHub/Mandy-PhD/02_paper/02_study/02_eye tracking video questionnaire paper")
# load data files
quest.data <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LB01_01:LB01_03,
LM01_01:LM01_08,
LO01_01:LO01_02,
LP01_01:LP01_08,
LV01_01:LV01_03)
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
colnames(quest.table) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","Alpha")
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "Alpha"] <- round(alpha$alpha,2)
}
# load data files
quest.data <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LB01_01:LB01_03,
LM01_01:LM01_08,
LP01_01:LP01_08,
LV01_01:LV01_03)
# load data files
quest.data <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LB01_01:LB01_03,
LM01_01:LM01_08,
LP01_01:LP01_08,
LV01_01:LV01_03)
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
colnames(quest.table) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","Alpha")
View(quest.table)
View(quest.table)
View(quest.table)
View(quest.table)
View(quest.table)
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating Alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "Alpha"] <- round(alpha$alpha,2)
}
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating Alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "Alpha"] <- round(alpha$Alpha,2)
}
# rename columns
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# load data files
quest.data <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LB01_01:LB01_03,
LM01_01:LM01_08,
LP01_01:LP01_08,
LV01_01:LV01_03)
psych::
psych::
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
# load data files
quest.data <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LB01_01:LB01_03,
LM01_01:LM01_08,
LP01_01:LP01_08,
LV01_01:LV01_03)
# creating a matrix
quest.table <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table) <- c("LM", "LB", "LP", "LV")
colnames(quest.table) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","Alpha")
quest.table
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating Alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "Alpha"] <- round(alpha$Alpha,2)
}
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data %>%
dplyr::select(starts_with(match = i))
quest.table[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table[i, "Kurtosis"]
# calculating Alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table[i, "Alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
quest.table
quest.table
# install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable,
psych)
tinytex::install_tinytex()
tinytex::install_tinytex()
