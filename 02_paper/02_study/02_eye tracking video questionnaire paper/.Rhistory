)
sri <sri <sri <- sri %>%
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = round(mean(disruption_appraisal), digits = 2),
mean_confi = round(mean(confidence_appraisal), digits = 2)
)
# Select the relevant columns (e.g., Disruption Appraisal and Confidence Appraisal)
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
)
# Perform exploratory factor analysis (EFA) with 2 factors
sri_efa_result <- fa(sri,
nfactors = 2,
rotate = "varimax"
)
# Display the result
print(sri_efa_result)
# Cronbach's Alpha
alpha_result <- alpha(sri)
print(alpha_result)
# Cronbach's Alpha
alpha_result <- alpha(sri)
# Perform exploratory factor analysis (EFA) with 2 factors
sri_efa_result <- fa(sri,
nfactors = 2,
rotate = "varimax"
)
# Display the result
print(sri_efa_result)
sri_efa_result$communality
# McDonald's Omega
omega_result <- omega(sri)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
) %>%
dplyr::select(mean_disrup,
mean_confi)
# Select the relevant columns (e.g., Disruption Appraisal and Confidence Appraisal)
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
) %>%
dplyr::select(mean_disrup,
mean_confi)
# Perform exploratory factor analysis (EFA) with 2 factors
sri_efa_result <- fa(sri,
nfactors = 2,
rotate = "varimax"
)
# Display the result
print(sri_efa_result)
sri_efa_result$communality
print(sri_efa_result$loadings, cutoff = 0.4)
# Cronbach's Alpha
alpha_result <- alpha(sri)
# Cronbach's Alpha
alpha_result <- alpha(sri,
check.keys=TRUE
)
print(alpha_result) %>%
# McDonald's Omega
omega_result <- omega(sri)
print(alpha_result) %>%
# McDonald's Omega
omega_result <- omega(sri)
print(alpha_result) %>%
# McDonald's Omega
omega_result <- omega(sri)
print(omega_result)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
) %>%
dplyr::select(mean_disrup,
mean_confi)
# Select the relevant columns (e.g., Disruption Appraisal and Confidence Appraisal)
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
) %>%
dplyr::select(mean_disrup,
mean_confi)
print(alpha_result) %>%
# McDonald's Omega
omega_result <- omega(sri)
# McDonald's Omega
omega_result <- omega(sri)
print(omega_result)
# McDonald's Omega
omega_result <- omega(sri)
alpha(sri), check.keys =TRUE))
# Select the relevant columns (e.g., Disruption Appraisal and Confidence Appraisal)
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
)
sri <- sri %>%
group_by(ID) %>%
summarise(mean_disrup = mean(disruption_appraisal),
mean_confi = mean(confidence_appraisal)
) %>%
dplyr::select(mean_disrup,
mean_confi)
# Cronbach's Alpha
alpha((sri), check.keys =TRUE)
alpha
# Cronbach's Alpha
alpha((sri), check.keys =TRUE)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>%
dplyr::select(UI06_05, # ID
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 == 201) # exclude ID with no eye tracking data
# remove NAs
df_sjt <- na.omit(df_sjt)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# select relevant columns --> only subject ID and mean
df_sjt <- df_sjt %>%
dplyr::select(UI06_05, # ID
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 == 201) # exclude ID with no eye tracking data
# remove NAs
df_sjt <- na.omit(df_sjt)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
View(df_sjt_long)
View(df_sjt)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
View(df_sjt)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# remove NAs
df_sjt <- na.omit(df_sjt)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# remove NAs
df_sjt <- na.omit(df_sjt)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable,
psych,
apaTables,
rstatix )
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable,
psych,
apaTables,
rstatix,
MBESS)
# read in data and combine multiple excel sheets into a single table
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
) %>%
mutate(ID = ifelse(ID < 200, "Novice", "Expert"))
View(sri)
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
)
# Select the relevant columns (e.g., Disruption Appraisal and Confidence Appraisal)
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
)
sri_wide <- sri %>%
pivot_wider(names_from = event,
values_from = c(disruption_appraisal, confidence_appraisal, prevalence_rating))
View(sri_wide)
sri_wide_disrup <- sri_wide %>%
dplyr::select(starts_with(disruption_appraisal))
sri_wide_disrup <- sri_wide %>%
dplyr::select(starts_with("disruption_appraisal"))
View(sri_wide_disrup)
ci.reliability (data = sri_wide_disrup,
type = "omega",
conf.level = 0,95,
interval.type = "mlr",
B = 1000)
ci.reliability(data = sri_wide_disrup,
type = "omega",
conf.level = 0.95,  # Punkt statt Komma
interval.type = "mlr",
B = 1000)
# create new data frame with relevant variables
sri_wide_disrup <- sri_wide %>%
dplyr::select(starts_with("disruption_appraisal")) %>%
drop_na()
ci.reliability(data = sri_wide_disrup,
type = "omega",
conf.level = 0.95,  # Punkt statt Komma
interval.type = "mlr",
B = 1000)
View(sri_wide_disrup)
omega_result <- omega(sri_wide_disrup)
print(omega_result)
omega_result <- omega(sri_wide_disrup)
omega_result <- omega(sri_wide_disrup)
print(omega_result)
omega_result <- omega(sri_wide_disrup)
omega_result <- omega(sri_wide_disrup)
# create new data frame with only confidence items
sri_wide_confi <- sri_wide %>%
dplyr::select(starts_with("confidence_appraisal")) %>%
drop_na()
# create new data frame with only confidence items
sri_wide_confi <- sri_wide %>%
dplyr::select(starts_with("confidence_appraisal")) %>%
drop_na()
# calculate omega with omega() function
omega_confi <- omega(sri_wide_confi)
# display the results
print(omega_confi)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
View(df_sjt)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
drop_na()
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# select relevant columns
df_sjt_mm <- df_sjt %>%
dplyr::select(ends_with("AL"))
View(df_sjt_mm)
# select relevant columns
df_sjt_mm <- df_sjt %>%
dplyr::select(starts_with("WT"),
ends_with("AL"))
View(df_sjt_mm)
# select relevant columns
df_sjt_mm <- df_sjt %>%
dplyr::select(matches("^WT.*AL$"))
View(df_sjt_mm)
# remove NAs
df_sjt_mm <- na.omit(df_sjt_mm)
# calculate omega with omega() function
omega_sjt_mm <- omega(omega_sjt_mm)
# remove NAs
df_sjt_mm <- na.omit(df_sjt_mm)
# calculate omega with omega() function
omega_sjt_mm <- omega(df_sjt_mm)
# display the results
print(omega_sjt_mm)
# select relevant columns
df_sjt_mm <- df_sjt %>%
dplyr::select(WT_S1_F1F2_AL:WT_S4_F4F6_AL)
# remove NAs
df_sjt_mm <- na.omit(df_sjt_mm)
# calculate omega with omega() function
omega_sjt_mm <- omega(df_sjt_mm)
# display the results
print(omega_sjt_mm)
# select relevant columns
df_sjt_m <- df_sjt %>%
dplyr::select(WT_S5_F1F2_ST:WT_S9_F4F5_ST)
# remove NAs
df_sjt_m <- na.omit(df_sjt_m)
# calculate omega with omega() function
omega_sjt_m <- omega(df_sjt_m)
# display the results
print(omega_sjt_m)
# select relevant columns
df_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R)
# remove NAs
df_sjt_m <- na.omit(df_sjt_m)
# remove NAs
df_sjt_r <- na.omit(df_sjt_r)
View(df_sjt_r)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# select relevant columns
df_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R)
f_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R)
df_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R)
View(df_sjt_r)
# select relevant columns
df_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R,
-WT_S11_F3F6_R) %>%
# remove NAs
df_sjt_r <- na.omit(df_sjt_r)
# select relevant columns
df_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R,
-WT_S11_F3F6_R)
# remove NAs
df_sjt_r <- na.omit(df_sjt_r)
# read in data
df_sjt <-
read_excel("./data/SJT.xlsx")
# select relevant columns
df_sjt_r <- df_sjt %>%
dplyr::select(WT_S11_F1F5_R:WT_S14_F4F6_R)
# calculate omega with omega() function
omega_sjt_r <- omega(df_sjt_r)
# display the results
print(omega_sjt_r)
# load data files with modified scales
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 == 201) %>% # exclude ID with no eye tracking data
mutate(LI06_05 = ifelse(LI06_05 < 200, "Novice", "Expert")) %>%
rename(Group = LI06_05)
# remove NAs
df_quest <- na.omit(df_quest)
# read in data
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) # non- & paraverbal communication
View(df_quest)
# read in data
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) # non- & paraverbal communication
# select relevant columns
df_quest_cm <- df_quest %>%
dplyr::select(LM01_01:LM01_08)
# remove NAs
df_quest_cm <- na.omit(df_quest_cm)
# calculate omega with omega() function
omega_quest_cm <- omega(df_quest_cm)
# display the results
print(omega_quest_cm)
# select relevant columns
df_quest_npvc <- df_quest %>%
dplyr::select(LP01_01:LP01_08)
# remove NAs
df_quest_npvc <- na.omit(df_quest_npvc)
# calculate omega with omega() function
omega_quest_npvc <- omega(df_quest_npvc)
# display the results
print(df_quest_npvc)
# display the results
print(df_quest_npvc)
# display the results
print(omega_quest_npvc)
