LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223, 232)) %>% # exclude ID with no eye tracking data
transmute(Participant = LI06_05,
"Quest_All" = round(mean(c_across(starts_with("L")), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with("LM")), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with("LP")), na.rm = TRUE), 2)
)
# create a big data frame with all measures
df_merge <- merge(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_sri,
df_sjt,
df_quest,
by = "Participant")
View(df_demo)
# create a big data frame with all measures
#put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_sri,
df_sjt,
df_quest)
#merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant')
View(df_merge)
View(df_quest)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223, 232)) %>% # exclude ID with no eye tracking data
transmute(Participant = LI06_05,
"Quest_All" = round(mean(c_across(starts_with("L")), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with("LM")), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with("LP")), na.rm = TRUE), 2)
)
View(df_quest)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223, 232)) %>% # exclude ID with no eye tracking data
group_by(LI06_05) %>%
transmute(Participant = LI06_05,
"Quest_All" = round(mean(c_across(starts_with("L")), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with("LM")), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with("LP")), na.rm = TRUE), 2)
)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223, 232)) %>% # exclude ID with no eye tracking data
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
transmute(Participant = Participant,
"Quest_All" = round(mean(c_across(starts_with("L")), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with("LM")), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with("LP")), na.rm = TRUE), 2)
)
# create a big data frame with all measures
#put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_sri,
df_sjt,
df_quest)
#merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant')
# install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable,
psych)
# demo data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 == 201,
!LI06_05 == 223,
!LI06_05 == 232) %>% # exclude participant due to missing eye tracking data
transmute(Participant = LI06_05,
Gender = LI02_01_1,
Age = LI03_01,
`Teaching Experience` = LI04_01,
)
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE)
) %>%
mutate(
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
GRI_mtu = round(Average_duration_mtu / Sum_number_fixation, digits = 2)) %>%
drop_na() %>%
dplyr::select(Participant,
Sum_number_fixation,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ",")) %>%
dplyr::select(Group,
Participant,
TOI,
starts_with("Total_duration_of_fixations"),
starts_with("Average_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Time_to_first_fixation")
)
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"))
}
# bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# extract only participants ID number
df_aoi$Participant <- as.numeric(
str_extract(df_aoi$Participant,
"\\d{3}")
)
# exclude invalid participants
df_aoi <- df_aoi %>%
filter(!Participant == 223,
!Participant == 232)
# remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
# demo data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 == 201,
!LI06_05 == 223,
!LI06_05 == 232) %>% # exclude participant due to missing eye tracking data
transmute(Participant = LI06_05,
Gender = LI02_01_1,
Age = LI03_01,
`Teaching Experience` = LI04_01,
)
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE)
) %>%
mutate(
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
GRI_mtu = round(Average_duration_mtu / Sum_number_fixation, digits = 2)) %>%
drop_na() %>%
dplyr::select(Participant,
Sum_number_fixation,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
# average duration, number fixation, GRI (AOI student)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Participant,
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)",
"Number_of_fixations.Anna",
"Number_of_fixations.Bianca",
"Number_of_fixations.Carl(a)"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Stud_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Stud_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE)
) %>%
mutate(
Average_duration_stud = round(Stud_duration_fixation / Stud_number_fixation, digits = 0),
GRI_stud = round(Average_duration_stud / Stud_number_fixation, digits = 2)
) %>%
dplyr::select(Participant,
Stud_number_fixation,
Average_duration_stud,
GRI_stud
)-> df_aoi_stud
# average duration, number fixation, GRI (AOI disruptive person)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
mutate(
Average_duration_disrup = round(
Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person,
digits = 0),
GRI_disrup = round(
Average_duration_disrup / Number_of_fixations.Disruptive_Person, digits = 2)) %>%
dplyr::select(Participant,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
GRI_disrup
) -> df_aoi_disrup
# time to first fixatoin (AOI disruptive person)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (Participant,
"Time_to_first_fixation.Disruptive_Person") %>%
rowwise() -> df_ttff_disrup
# rating scales
df_sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201,
223,
232),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
) %>%
rename(Participant = ID) %>%
group_by(Participant) %>%
summarise(
Mean_disrupption_appraisal = round(mean(disruption_appraisal), 2),
Mean_confidence_appraisal = round(mean(confidence_appraisal), 2),
Mean_prevalence_rating = round(mean(prevalence_rating), 2)
)%>%
dplyr::select(Participant,
Mean_disrupption_appraisal,
Mean_confidence_appraisal,
Mean_prevalence_rating)
# sjt
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
dplyr::select(UI06_05, # Participant
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 %in% c(201, 223, 232)) %>%  # exclude ID with no eye tracking data
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_Managing_momentum = round(SJT_ST_gek, 2),
SJT_Rules_routines = round(SJT_R_gek, 2),
SJT_All = round(SJT_KF_gek, 2)
)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05,
LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223, 232)) %>% # exclude ID with no eye tracking data
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
transmute(Participant = Participant,
"Quest_All" = round(mean(c_across(starts_with("L")), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with("LM")), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with("LP")), na.rm = TRUE), 2)
)
# create a big data frame with all measures
#put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_sri,
df_sjt,
df_quest)
#merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant')
View(df_merge)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
select(-Patricipant)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
select(-"Patricipant")
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
select(.,
-"Patricipant")
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
dplyr::select(.,
-"Patricipant")
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
dplyr::select(.,
-"Participant")
View(df_merge)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
dplyr::select(.,
-"Participant") %>%
cor()
View(df_merge)
# create a correlation matrix
cor_tab <-
df_merge %>%
cor()
View(cor_tab)
# create a correlation matrix
cor_tab <-
df_merge %>%
round(cor(), 2)
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "spearman")
?pairs
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "spearman") %>%
round(., digits = 2)
View(cor_tab)
# create a scatter plot
attach(df_merge)
# create a big data frame with all measures
# put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_sri,
df_sjt,
df_quest)
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
dplyr::select(.,
-"Participant")
# create a scatter plot
attach(df_merge)
View(df_merge)
view(df_merge)
pairs(~ Gender +
Age +
Teaching_experience)
pairs(~ Gender +
Age +
Teaching_Experience)
pairs(~ Gender +
Age +
`Teaching_Experience`)
pairs(~ Gender +
Age +
`Teaching Experience`)
pairs(~ Gender +
Age +
`Teaching Experience` +
Sum_number_fixation +
Stud_number_fixation +
Number_of_fixations.Disruptive_Person +
Average_duration_mtu +
Average_duration_stud +
Average_duration_disrup +
GRI_mtu +
GRI_stud +
GRI_disrup +
Mean_disrupption_appraisal +
Mean_confidence_appraisal +
Mean_prevalence_rating +
SJT_Monitoring +
SJT_Managing_momentum +
SJT_Rules_routines +
SJT_All +
Quest_classroom_management +
Quest_non_paraverbal_communication +
Quest_All)
pairs(~ Gender +
Age +
`Teaching Experience` +
Sum_number_fixation +
Stud_number_fixation +
Number_of_fixations.Disruptive_Person +
Average_duration_mtu +
Average_duration_stud +
Average_duration_disrup +
GRI_mtu +
GRI_stud +
GRI_disrup +
Mean_disrupption_appraisal +
Mean_confidence_appraisal +
Mean_prevalence_rating +
SJT_Monitoring +
SJT_Managing_momentum +
SJT_Rules_routines +
SJT_All +
Quest_classroom_management +
Quest_non_paraverbal_communication +
Quest_All,
upper.panel = NULL)
pairs(~ Gender +
Age +
`Teaching Experience` +
Sum_number_fixation +
Stud_number_fixation +
Number_of_fixations.Disruptive_Person +
Average_duration_mtu +
Average_duration_stud +
Average_duration_disrup +
GRI_mtu +
GRI_stud +
GRI_disrup +
Mean_disrupption_appraisal +
Mean_confidence_appraisal +
Mean_prevalence_rating +
SJT_Monitoring +
SJT_Managing_momentum +
SJT_Rules_routines +
SJT_All +
Quest_classroom_management +
Quest_non_paraverbal_communication +
Quest_All,
upper.panel = NULL,
pch = 20,
cex = 3,
main = "Correlation Table Expertise Measures",
col = Gender)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable,
psych,
apaTables)
apa.cor.table(cor_tab)
