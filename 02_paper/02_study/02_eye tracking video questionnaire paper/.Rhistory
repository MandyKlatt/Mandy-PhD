) %>%
dplyr::select(Participant,
Stud_number_fixation_min,
Average_duration_stud,
GRI_stud) -> df_aoi_stud
# average duration, number fixation, GRI (AOI disruptive person)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(Participant,
"Total_duration_of_fixations.Disruptive_Person",
"Number_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
mutate(
Average_duration_disrup = round(
Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person,
digits = 0),
GRI_disrup = round(
Average_duration_disrup / Number_of_fixations.Disruptive_Person, digits = 2)) %>%
dplyr::select(Participant,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
GRI_disrup
) -> df_aoi_disrup
df_aoi %>%
filter(TOI %in% c("Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
dplyr::select(Participant,
TOI,
Time_to_first_fixation.Disruptive_Person,
) %>%
rowwise() %>%
drop_na() %>%
group_by(Participant) %>%
filter(!Time_to_first_fixation.Disruptive_Person == 0, # exclude all participants with 0 msec
!Time_to_first_fixation.Disruptive_Person > 30000) %>% # cut-off 30sec
summarise(N = n(),
Time_to_first_fixation.Disruptive_Person_Sum = sum(Time_to_first_fixation.Disruptive_Person/N)
) %>%
mutate(Group = ifelse(Participant < 200, "Novice", "Expert"),
Sum_disruptions = sum(N),
Disrup_time_fixation_sec = round(Time_to_first_fixation.Disruptive_Person_Sum / 1000,
digits = 2)) -> df_ttff_disrup # changing milliseconds into seconds
# rating scales
df_sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% c(201,
223),
!disruption_appraisal == -100,
!confidence_appraisal == -100,
!disruption_appraisal == -99,
!confidence_appraisal == -99,
!disruption_appraisal == -88,
!confidence_appraisal == -88,
!prevalence_rating == -100,
!prevalence_rating == -99,
!prevalence_rating == -88
) %>%
rename(Participant = ID) %>%
group_by(Participant) %>%
summarise(
Mean_disrupption_appraisal = round(mean(disruption_appraisal), 2),
Mean_confidence_appraisal = round(mean(confidence_appraisal), 2),
Mean_prevalence_rating = round(mean(prevalence_rating), 2)
)%>%
dplyr::select(Participant,
Mean_disrupption_appraisal,
Mean_confidence_appraisal)
# sjt
df_sjt <-
read_excel("./data/SJT.xlsx") %>%
dplyr::select(UI06_05, # Participant
SJT_AL_gek, # Monitoring
SJT_ST_gek, # Managing momentum
SJT_R_gek, # Rules and routines
SJT_KF_gek) %>% # All
filter(!UI06_05 %in% c(201, 223)) %>%  # exclude ID with no eye tracking data
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_All = round(SJT_KF_gek, 2),
) %>%
arrange(Participant)
# classroom questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05, LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% c(201, 223)) %>% # exclude ID with no eye tracking data
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
transmute(
Participant = Participant,
"Quest_All" = round(mean(c_across(starts_with(
"L"
)), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2)
)
# create a big data frame with all measures
# put all data frames into list
df_list <- list(df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_ttff_disrup,
df_sri,
df_sjt,
df_quest)
# overall correlation
# merge all data frames in list
df_merge <-
df_list %>% reduce(full_join, by='Participant') %>%
# filter(`Teaching Experience` > 0) %>%
dplyr::select(
# Stud_number_fixation_min,
# Average_duration_stud,
# Number_of_fixations.Disruptive_Person,
# Average_duration_disrup,
# Disrup_time_fixation_sec,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
)
# demo data
df_demo <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 == 201,
!LI06_05 == 223) %>% # exclude participant due to missing eye tracking data
transmute(Participant = LI06_05,
`Teaching Experience` = LI04_01,
) %>%
arrange(Participant)
# average duration, number fixation, GRI (micro-teaching unit)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select(
Duration_of_interval,
Participant,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Average_duration_of_fixations.Disruptive_Person"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_average_duration_fixation = sum(c_across(starts_with("Average_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
GRI_mtu = round(Average_duration_mtu / Number_fixation_min_mtu, digits = 2)
) %>%
drop_na() %>%
dplyr::select(Participant,
Number_fixation_min_mtu,
Average_duration_mtu,
GRI_mtu) -> df_aoi_numb_dur
# average duration, number fixation, GRI (AOI student)
df_aoi %>%
filter(TOI == "Lesson") %>%
dplyr::select (
Participant,
Duration_of_interval,
"Total_duration_of_fixations.Anna",
"Total_duration_of_fixations.Bianca",
"Total_duration_of_fixations.Carl(a)",
"Number_of_fixations.Anna",
"Number_of_fixations.Bianca",
"Number_of_fixations.Carl(a)"
) %>%
rowwise() %>%
transmute(
Participant = Participant,
Duration_of_interval = Duration_of_interval,
Duration_of_interval_min = round(Duration_of_interval/60000, digits = 2),
Stud_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Stud_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Stud_number_fixation_min = round(Duration_of_interval_min / Stud_number_fixation, digits = 2),
Average_duration_stud = round(Stud_duration_fixation / Stud_number_fixation, digits = 0),
GRI_stud = round(Average_duration_stud / Stud_number_fixation, digits = 2)
) %>%
dplyr::select(Participant,
Stud_number_fixation_min,
Average_duration_stud,
GRI_stud) -> df_aoi_stud
df_merge <- df_list %>%
reduce(full_join, by = "Participant") %>%
select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
# Define excluded IDs for easy updating
excluded_ids <- c(201, 223)
# 1. Demo Data
df_demo <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 %in% excluded_ids) %>% # Exclude participants based on IDs
transmute(Participant = LI06_05, Teaching_Experience = LI04_01) %>%
arrange(Participant)
# 2. Aggregate AOI Data (Micro-teaching Unit)
df_aoi_numb_dur <- df_aoi %>%
filter(TOI == "Lesson") %>%
select(
Participant,
Duration_of_interval,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Average_duration")
) %>%
select(-ends_with("Disruptive_Person")) %>% # Exclude "Disruptive_Person" columns
mutate(Duration_of_interval_min = Duration_of_interval / 60000) %>%
rowwise() %>%
summarize(
Participant,
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Sum_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Average_duration_mtu = round(Sum_duration_fixation / Sum_number_fixation, digits = 0),
Number_fixation_min_mtu = round(Sum_number_fixation / Duration_of_interval_min, digits = 0),
GRI_mtu = round(Average_duration_mtu / Number_fixation_min_mtu, digits = 2)
) %>%
select(Participant,
Number_fixation_min_mtu,
Average_duration_mtu,
GRI_mtu)
# 3. Aggregate AOI Data (Students)
df_aoi_stud <- df_aoi %>%
filter(TOI == "Lesson") %>%
select(
Participant,
Duration_of_interval,
starts_with("Total_duration_of_fixations."),
starts_with("Number_of_fixations.")
) %>%
mutate(Duration_of_interval_min = Duration_of_interval / 60000) %>%
rowwise() %>%
summarize(
Participant,
Stud_duration_fixation = sum(c_across(starts_with("Total_duration")), na.rm = TRUE),
Stud_number_fixation = sum(c_across(starts_with("Number_of")), na.rm = TRUE),
Stud_number_fixation_min = round(Duration_of_interval_min / Stud_number_fixation, digits = 2),
Average_duration_stud = round(Stud_duration_fixation / Stud_number_fixation, digits = 0),
GRI_stud = round(Average_duration_stud / Stud_number_fixation_min, digits = 2)
) %>%
select(Participant,
Stud_number_fixation_min,
Average_duration_stud,
GRI_stud)
# 4. Aggregate AOI Data (Disruptive Person)
df_aoi_disrup <- df_aoi %>%
filter(TOI == "Lesson") %>%
select(
Participant,
Total_duration_of_fixations.Disruptive_Person,
Number_of_fixations.Disruptive_Person
) %>%
mutate(
Average_duration_disrup = round(
Total_duration_of_fixations.Disruptive_Person / Number_of_fixations.Disruptive_Person,
digits = 0
),
GRI_disrup = round(
Average_duration_disrup / Number_of_fixations.Disruptive_Person,
digits = 2
)
) %>%
select(
Participant,
Number_of_fixations.Disruptive_Person,
Average_duration_disrup,
GRI_disrup
)
# 5. Time to First Fixation on Disruptive Person
df_ttff_disrup <- df_aoi %>%
filter(
TOI %in% c(
"Chatting_with_neighbour",
"Clicking_pen",
"Drawing",
"Drumming_with_hands",
"Head_on_table",
"Heckling",
"Looking_at_phone",
"Snipping_with_fingers",
"Whispering"
)
) %>%
select(Participant, TOI, Time_to_first_fixation.Disruptive_Person) %>%
filter(
!is.na(Time_to_first_fixation.Disruptive_Person) &
Time_to_first_fixation.Disruptive_Person > 0 &
Time_to_first_fixation.Disruptive_Person <= 30000
) %>%
group_by(Participant) %>%
summarize(
N = n(),
Time_to_first_fixation_Disruptive_Person_Sum = mean(Time_to_first_fixation.Disruptive_Person),
Group = ifelse(Participant < 200, "Novice", "Expert"),
Sum_disruptions = sum(N),
Disrup_time_fixation_sec = round(Time_to_first_fixation_Disruptive_Person_Sum / 1000, 2)
)
# 6. Rating Scales
df_sri <- excel_sheets("data/Coding_SRI.xlsx") %>%
map_df( ~ read_xlsx("data/Coding_SRI.xlsx", .)) %>%
filter(
!ID %in% excluded_ids,
!disruption_appraisal %in% c(-100, -99, -88),
!confidence_appraisal %in% c(-100, -99, -88),
!prevalence_rating %in% c(-100, -99, -88)
) %>%
rename(Participant = ID) %>%
group_by(Participant) %>%
summarize(
Mean_disruption_appraisal = round(mean(disruption_appraisal), 2),
Mean_confidence_appraisal = round(mean(confidence_appraisal), 2),
Mean_prevalence_rating = round(mean(prevalence_rating), 2)
)
# 7. Situational Judgment Test (SJT) Data
df_sjt <- read_excel("./data/SJT.xlsx") %>%
filter(!UI06_05 %in% excluded_ids) %>%
transmute(
Participant = UI06_05,
SJT_Monitoring = round(SJT_AL_gek, 2),
SJT_All = round(SJT_KF_gek, 2)
)
# 8. Classroom Questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
filter(!LI06_05 %in% excluded_ids) %>%
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
summarize(
Quest_All = round(mean(c_across(starts_with(
"L"
)), na.rm = TRUE), 2),
Quest_classroom_management = round(mean(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
Quest_non_paraverbal_communication = round(mean(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2)
)
# 8. Classroom Questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05, LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% excluded_ids)) %>% # exclude ID with no eye tracking data
# 8. Classroom Questionnaire
df_quest <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
dplyr::select(LI06_05, LM01_01:LM01_08, # classroom management
LP01_01:LP01_08) %>% # non- & paraverbal communication
filter(!LI06_05 %in% excluded_ids) %>% # exclude ID with no eye tracking data
rename(Participant = LI06_05) %>%
group_by(Participant) %>%
transmute(
Participant = Participant,
"Quest_All" = round(mean(c_across(starts_with(
"L"
)), na.rm = TRUE), 2),
"Quest_classroom_management" = round(mean(c_across(starts_with(
"LM"
)), na.rm = TRUE), 2),
"Quest_non_paraverbal_communication" = round(mean(c_across(starts_with(
"LP"
)), na.rm = TRUE), 2)
)
# 9. Combine All Data Frames into a Single Data Frame
df_list <- list(
df_demo,
df_aoi_numb_dur,
df_aoi_stud,
df_aoi_disrup,
df_ttff_disrup,
df_sri,
df_sjt,
df_quest
)
df_merge <- df_list %>%
reduce(full_join, by = "Participant") %>%
select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
# create a correlation matrix
cor_tab <-
df_merge %>%
cor(method = "pearson") %>%
round(., digits = 2)
View(cor_tab)
### Only experts
# merge all data frames in list
df_merge_experts <-
df_list %>% reduce(full_join, by='Participant') %>%
filter(`Teaching Experience` > 0) %>%
dplyr::select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
### Only experts
# merge all data frames in list
df_merge_experts <-
df_list %>% reduce(full_join, by='Participant') %>%
filter(`Teaching Experience` > 0) %>%
dplyr::select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
### Only experts
# merge all data frames in list
df_merge_experts <-
df_merge %>%
filter(`Teaching Experience` > 0) %>%
dplyr::select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
)
colnames(df_merge)
### Only experts
# merge all data frames in list
df_merge_experts <-
df_merge %>%
filter(Teaching_Experience > 0) %>%
dplyr::select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
# create a correlation matrix
cor_tab_experts <-
df_merge_experts %>%
cor(method = "pearson") %>%
round(., digits = 2)
### Only novices
# merge all data frames in list
df_merge_novice <-
df_merge %>%
filter(Teaching_Experience == 0) %>%
dplyr::select(
Participant,
Teaching_Experience,
GRI_mtu,
SJT_All,
Quest_All,
Mean_disruption_appraisal,
Mean_confidence_appraisal
) %>%
drop_na()  # Drop rows with any NA values (if needed)
# create a correlation matrix
cor_tab_novices <-
df_merge_novice %>%
cor(method = "pearson") %>%
round(., digits = 2)
View(cor_tab_novices)
# p-value for GRI x Rating
cor.test(df_merge_novice$Quest_All, df_merge$Mean_confidence_appraisal)
# p-value for GRI x Rating
cor.test(df_merge_novice$Quest_All, df_merge_novice$Mean_confidence_appraisal)
