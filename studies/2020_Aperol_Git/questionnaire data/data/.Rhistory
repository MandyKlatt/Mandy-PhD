knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1201211.txt",sep="\t", header=T)
setwd("~/GitHub/Mandy-PhD/studies/2020_Aperol_Git/questionnaire data/data")
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1201211.txt",sep="\t", header=T)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1201211.txt",sep="\t", header=T)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
raw.data %>% # select data
filter(what == "head") %>% # select only lines with data and only valid trials
group_by(perspective, condition) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective, condition) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective, personID) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
# to create all values for the entire set:
N <- length(unique(mock.data$ID)) # number of participants
# to create all values for the entire set:
N <- length(unique(raw.data$personID)) # number of participants
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
rm(N)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = length(unique(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
str(raw.data)
is.na(raw.data)
is.na(raw.data)
table(is.na(raw.data))
raw.data <- raw.data  %>% filter(
shortID != "NA")
table(is.na(raw.data))
which(is.na(raw.data))
apply(is.na(raw.data), 2, which)
is.na(raw.data)
apply(is.na(raw.data), which)
apply(is.na(raw.data), 3, which)
### checking for missing values
apply(is.na(raw.data), 2, which)
raw.data <- raw.data  %>% filter(
personID != "NA")
apply(is.na(raw.data), 2, which)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective, session) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective, target) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective, target) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(perspective, session) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, perspective, target) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = length(unique(personID)),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = n_distinct(personID)),
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(target, session, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(n_distinct(sex)),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
sex = sum(n_distinct(sex)),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
sex = sum(n_distinct(sex)),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
###### Gender Plot All ###
# create percentages for gender; NOTE! the next two lines work no matter how many levels the column has
gendertable <- table(raw.data$sex)
genderpercs <- as.data.frame(round((gendertable / sum(gendertable)),2))
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
sex = sum(n_distinct(sex)),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex)),
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
