# ind.meankm <- mean(ind.km.data$value)
# ind.minkm <- min(ind.km.data$value)
# ind.maxkm <- max(ind.km.data$value)
# ind.sdkm <- sd(ind.km.data$value)
# ind.Nkm<-length(unique(ind.km.data$ID))
print(meankm)
print(Nkm)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_070121.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_070121.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
setwd("~/GitHub/Mandy-PhD/studies/2020_Aperol_Git/questionnaire data")
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(item == "Klassenmanagement")
view (raw.data)
class(raw.data$value)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm <- mean(km.data$value)
minkm <- min(km.data$value)
maxkm <- max(km.data$value)
sdkm <- sd(km.data$value)
Nkm<-length(unique(km.data$ID))
# # filter by parametervariable, i.e. create a subset for the individual lecturer
# ind.km.data <- km.data %>% filter(Dozierende == params$Dozierende)
# # erstelle Mittelwert, min, max, sd for individual lecturer
# ind.meankm <- mean(ind.km.data$value)
# ind.minkm <- min(ind.km.data$value)
# ind.maxkm <- max(ind.km.data$value)
# ind.sdkm <- sd(ind.km.data$value)
# ind.Nkm<-length(unique(ind.km.data$ID))
print(Nkm)
The mean of the item "classroom management" is `r round(meankm, 2)` (min = `r minkm`; max = `r maxkm`; SD = `r round(sdkm,2)`; N = `r Nkm)`; lickert-scale 1-4; 4 = best).
km.data <- raw.data %>% filter(scale == "Klassenmanagement")
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(item == "Klassenmanagement")
view (raw.data)
class(raw.data$value)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm <- mean(km.data$value)
minkm <- min(km.data$value)
maxkm <- max(km.data$value)
sdkm <- sd(km.data$value)
Nkm<-length(unique(km.data$ID))
# # filter by parametervariable, i.e. create a subset for the individual lecturer
# ind.km.data <- km.data %>% filter(Dozierende == params$Dozierende)
# # erstelle Mittelwert, min, max, sd for individual lecturer
# ind.meankm <- mean(ind.km.data$value)
# ind.minkm <- min(ind.km.data$value)
# ind.maxkm <- max(ind.km.data$value)
# ind.sdkm <- sd(ind.km.data$value)
# ind.Nkm<-length(unique(ind.km.data$ID))
# filter by parametervariable, i.e. create a subset for the individual lecturer
km.data <- raw.data %>% filter(scale == "Klassenmanagement")
# filter by parametervariable, i.e. create a subset for the individual lecturer
km.data <- raw.data %>% filter(item == "Klassenmanagement")
# value sometimes contained text before filtering, we have to convert the numbers to numeric
Modul.data <- Modul.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# filter by parametervariable, i.e. create a subset for the individual lecturer
km.data <- raw.data %>% filter(item == "Klassenmanagement")
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# to stick to the individual vs all style necessary for anonymized feedback in plotting
# we create a new vector from Dozierende that we call "Teilnehmende" and copy the names
# of the name called by the parameter but rename all others to "all"
# now the "fill ="option can use the new column to differentiate all vs parameter dozent
modul.plot.data <- Modul.data %>%
mutate(Teilnehmende = ifelse(Dozierende == params$Dozierende, toString(params$Dozierende), "Alle Kurse"))
view(km.data)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/questionnaire_data_080121.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
View(raw.data)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# # change data structure: everything is turned into factors except for
# main.data <- raw.data %>%
#   filter(what == "data"& valid == 1)  %>%
#   mutate(across(!correct&!agem&!aged, as.factor),
#          correct = as.integer(correct))
view (raw.data)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
filter (what == "head") %>% # select only lines with data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
filter (what == "head") %>% # select only lines with data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective(teacher, observer, student)) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(item == "Klassenmanagement")
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(scale == "Klassenmanagement")
view (raw.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm <- mean(km.data$value)
minkm <- min(km.data$value)
maxkm <- max(km.data$value)
sdkm <- sd(km.data$value)
Nkm<-length(unique(km.data$ID))
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(scale == "Klassenmanagement")
view (km.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm <- mean(km.data$value)
minkm <- min(km.data$value)
maxkm <- max(km.data$value)
sdkm <- sd(km.data$value)
Nkm<-length(unique(km.data$ID))
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
raw.data<-read.table("./data/short_questionnaire_data_1301211.txt",sep="\t", header=T)
# loading packages
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
view (raw.data)
str(raw.data)
raw.data %>% # select data
group_by(session, target, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"sd age" = round(sd(age), 2),
) %>%
knitr::kable(digits = 2)
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(scale == "Klassenmanagement")
view (km.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm <- mean(km.data$value)
minkm <- min(km.data$value)
maxkm <- max(km.data$value)
sdkm <- sd(km.data$value)
Nkm<-length(unique(km.data$ID))
### classroom management
# filter by parameter variable, i.e. create a subset for each group (expert/novice/experimenter)
km.data <- raw.data %>% filter(scale == "Klassenmanagement")
view (km.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km.data <- km.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm <- mean(km.data$value)
minkm <- min(km.data$value)
maxkm <- max(km.data$value)
sdkm <- sd(km.data$value)
Nkm<-length(unique(km.data$itemID))
# filter by parameter variable, i.e. create a subset for each group
km1.data <- raw.data %>% filter(scale == "Klassenmanagement",
session == "1")
view (km1.data)
km1.data <- km1.data %>%  mutate(value = as.numeric(as.character(factor(value))))
meankm1 <- mean(km1.data$value)
minkm1 <- min(km1.data$value)
maxkm1 <- max(km1.data$value)
sdkm1 <- sd(km1.data$value)
Nkm1<-length(unique(km1.data$personID))
# filter by parameter variable, i.e. create a subset for each group
km2.data <- raw.data %>% filter(scale == "Klassenmanagement",
session == "2")
view (km2.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
km2.data <- km2.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create  mean, min, max, sd of classroom management
meankm2 <- mean(km2.data$value)
minkm2 <- min(km2.data$value)
maxkm2 <- max(km2.data$value)
sdkm2 <- sd(km2.data$value)
Nkm2<-length(unique(km2.data$personID))
mdkm1 <- median(km1.data$value)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = n_distinct(personID),
male = sum(sex),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age)
) %>%
knitr::kable(digits = 2)
raw.data %>% # select data
group_by(session, perspective) %>%
summarise(N = n_distinct(personID),
"mean age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age)
) %>%
knitr::kable(digits = 2)
