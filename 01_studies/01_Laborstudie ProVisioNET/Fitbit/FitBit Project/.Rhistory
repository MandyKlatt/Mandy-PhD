summarise(dia_left = mean(left),
dia_right = mean(right)
) %>%
ungroup() %>%
mutate(Time = hms(hours = hours,
minutes = minutes,
seconds = seconds
)
) %>%
select(dia_left,
dia_right,
Time,
ID)
# df_dia_aggr$time <-
# hms(hours = df_dia_aggr$hours,
#     minutes = df_dia_aggr$minutes,
#     seconds = df_dia_aggr$seconds)
#
rm(df_dia)
part <- read_xlsx(path = "Data/Heart Rate.xlsx")
#...............................................................................
#                                                                              .
#  Enter the missing cases in Heart Rate table below.                                       .
#                                                                              .
#...............................................................................
part <- filter(part,
`ID participant` != 108 # |
#`ID participant` != | etc.
)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_m.csv",
sep = ""
)
)
)
}
df_dia_aggr <-
df_dia_aggr %>%
filter(ID != "108" &
ID != "109")
for (i in unique(df_dia_aggr$ID)) {
name <- paste0("pupil", i)
df <- filter(df_dia_aggr,
ID == i)
assign(x = name,
value = df)
}
for (i in unique(df_dia_aggr$ID)) {
name1 <- paste0("m", i)
name2 <- paste0("pupil", i)
name3 <- paste0("tib_", i)
df <- left_join(x = get(name1),
y = get(name2),
by = "Time")
df <- df %>% mutate(dia_left = scale(dia_left),
dia_right = scale(dia_right),
`Heart Rate` = scale(`Heart Rate`)
)
assign(name3,
value = df)
}
rm(df)
rm(name3)
df_compl <-
mget(ls(pattern = "tib")) %>%
bind_rows() %>%
mutate(ID = as_factor(ID),
Type = as_factor(ifelse(test = as.numeric(as.character(ID)) > 200,
yes = "advanced",
no = "novice"
)
)
)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = as_factor(Type))) +
geom_smooth(method = "lm")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_left,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = as_factor(Type))) +
geom_smooth(method = "lm")
ggplot(data = na.omit(df_compl)
) +
geom_histogram(mapping = aes(x = dia_left),
alpha = 0.4,
color = "blue") +
geom_histogram(mapping = aes(x = dia_right),
alpha = 0.4,
color = "red")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_left,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm")
ggplot(data = na.omit(df_compl)
) +
geom_histogram(mapping = aes(x = dia_left),
alpha = 0.4,
color = "blue") +
geom_histogram(mapping = aes(x = dia_right),
alpha = 0.4,
color = "red")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type))
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_left,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_left,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE)
ggplot(data = na.omit(df_compl)
) +
geom_histogram(mapping = aes(x = dia_left),
alpha = 0.4,
color = "blue") +
geom_histogram(mapping = aes(x = dia_right),
alpha = 0.4,
color = "red")
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
needs(tidyverse,
lubridate,
hms,
readxl,
viridis)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
scale_color_viridis_c(option = "A")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
scale_color_viridis_b(option = "A")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
scale_color_viridis_d(option = "A")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
scale_color_viridis_d(option = "A",
begin = 0.3)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type)) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
scale_color_viridis_d(option = "A",
begin = 0.3,
end = 0.7)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type),
alpha = 0.7) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
scale_color_viridis_d(option = "A",
begin = 0.3,
end = 0.7)
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type),
alpha = 0.7) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
labs(x = "Pupil Dialation\n(in ,standardized)",
y = "Heart Rate\n(in beats per minute, standardized)")
ggplot(data = na.omit(df_compl),
mapping = aes(x = dia_right,
y = `Heart Rate`
)
) +
geom_point(mapping = aes(color = Type),
alpha = 0.7) +
geom_smooth(method = "lm",
mapping = aes(color = Type),
se = FALSE) +
labs(x = "Pupil Dialation\n(in ,standardized)",
y = "Heart Rate\n(in beats per minute, standardized)") +
scale_color_viridis_d(option = "A",
begin = 0.3,
end = 0.7)
#install.packages("needs")
#1
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
part <- read_xlsx(path = "Data/Heart Rate.xlsx")
#...............................................................................
#                                                                              .
#  Enter the missing cases in Heart Rate table below.                                       .
#                                                                              .
#...............................................................................
part <- filter(part,
`ID participant` != 108 # |
#`ID participant` != | etc.
)
part <- part$`ID participant`
for (i in part) {
nam <- paste("m", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_m.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("a", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_a.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste("p", i, sep = "")
assign(x = nam,
value = read_csv(file = paste("Data/", i, "_p.csv",
sep = ""
)
)
)
}
for (i in part) {
nam <- paste0("m", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("m", i), df)
}
for (i in part) {
nam <- paste0("a", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("a", i), df)
}
for (i in part) {
nam <- paste0("p", i)
value <- get(nam)$Time - min(get(nam)$Time)
`Heart Rate` <- get(nam)$`Heart Rate`
df <- tibble(Time = as.numeric(value),
`Heart Rate` = `Heart Rate`,
ID = i
)
assign(paste0("p", i), df)
}
rm(part)
rm(nam)
rm(`Heart Rate`)
rm(i)
rm(value)
rm(df)
df_m <-
mget(ls(pattern = "m")) %>%
bind_rows()
df_p <-
mget(ls(pattern = "p")) %>%
bind_rows()
df_a <-
mget(ls(pattern = "a")) %>%
bind_rows()
df_a$Type <- "Post"
df_m$Type <- "Main"
df_p$Type <- "Pre"
df_all <- bind_rows(list(df_a,df_p, df_m))
df_all <- df_all %>%
mutate(Type = factor(Type,
levels = c("Pre","Main","Post")),
ID = as_factor(ID)
)
df_aggr <- df_all %>%
group_by(Type, ID, status) %>%
summarise(mean = mean(`Heart Rate`))
df_all$status <- if_else(as.numeric(as.character(df_all$ID)) < 200,
"novice",
"advanced")
df_all_min <- df_all %>%
group_by(ID) %>%
summarise(min = max(Time))
plot_flow <-
ggplot(data = filter(df_all),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
geom_line(mapping = aes(color = as_factor(ID),
linetype = as_factor(status)
),
size = 0.3,
alpha = 0.7
) +
xlim(0, min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
plot_flow_leg <-
ggplot(data = df_all,
mapping = aes(x = Time,
y = `Heart Rate`
)
) +
geom_smooth(mapping = aes(color = as_factor(ID),
linetype = as_factor(status)
),
method = "loess") +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank()) +
facet_grid(cols = vars(Type))
legend <- cowplot::get_legend(plot_flow_leg)
plot_loess <-
ggplot(data = filter(df_all),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
stat_smooth(geom = "line",
mapping = aes(color = as.factor(ID),
linetype = as_factor(status)
),
method = "loess",
se = FALSE) +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
facet_grid(cols = vars(Type),
scales = "free_x",
) +
theme(text = element_text(family = "serif"),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_blank()
)
plot_box <-
ggplot(data = df_aggr,
mapping = aes(x = Type,
y = mean,
color = as_factor(ID)
)
) +
geom_boxplot(color = "darkgrey",
fill = "grey",
alpha = 0.6) +
geom_line(data = filter(df_aggr,
status == "novice"),
mapping = aes(x = Type,
y = mean,
group = as_factor(ID)
),
linetype = 1
) +
geom_line(data = filter(df_aggr,
status == "advanced"),
mapping = aes(x = Type,
y = mean,
group = as_factor(ID)
),
linetype = 6
) +
geom_point(size = 2) +
labs(x = "",
y = "Average Heart Rate\n(in Beats per Minute)") +
scale_color_viridis_d(option = "A",
end = 0.8) +
theme_minimal() +
theme(text = element_text(family = "serif"),
strip.text = element_blank(),
legend.position = "none",
axis.text.x = element_blank()
) +
aes(fill = Type)
lo_mat <- rbind(c(1,1,1,1,1,1,NA),
c(2,2,2,2,2,2,4),
c(3,3,3,3,3,3,NA))
plot_fitbit <-
grid.arrange(grobs = list(plot_flow, plot_loess, plot_box, legend),
layout_matrix = lo_mat)
ggsave(plot = plot_fitbit,
file = "Plots/fitbit.pdf",
height = 16,
width = 20,
units = "cm"
)
