end = 0.8,
begin = 0.3,
name = "") +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
theme(legend.title = "")
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_fill_viridis_d(option = "A",
end = 0.8,
begin = 0.3,
name = "") +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
)
?labs
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_fill_viridis_b(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
)
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_b(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
)
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
)
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3,
name = "Group"
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
)
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
theme(legend.title = element_text(label = "Group"))
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
theme(legend.title = element_text(title = "Group"))
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
theme(legend.title = element_text("Group"))
?legend.title
??legend.title
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
guide_legend(title = "Group")
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
theme(legend.title = element_blank())
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized"
) +
theme_minimal() +
theme(legend.title = element_blank())
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized)"
) +
theme_minimal() +
theme(legend.title = element_blank())
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized)"
) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
)
fit_nov <- lm(mean ~ Steps,
data = filter(df_steps,
type == "Novice"
)
)
fit_adv <- lm(mean ~ Steps,
data = filter(df_steps,
type == "Advanced"
)
)
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized)"
) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
)
plot_scatter <-
ggplot(data = df_steps,
mapping = aes(x = Steps,
y = mean)
) +
geom_smooth(mapping = aes(color = type),
method = "lm",
se = F) +
geom_point(mapping = aes(shape = type),
alpha = 0.6,
size = 2.5) +
scale_color_viridis_d(option = "A",
end = 0.8,
begin = 0.3
) +
labs(x = "Steps\n(z-standardized)",
y = "Mean Heart Rate\n(z-standardized)"
) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
)
?ggsave
?ggsave2
plot_scatter
ggsave(plot = plot_scatter,
filename = "Plots/scatter.pdf",
height = 5,
width = 7,
units = "in")
#plot_flow <-
ggplot(data = df_all %>% filter(ID == "101") %>%
arrange(Time),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
#  geom_path(mapping = aes(color = ID),
#            size = 0.4,
#            alpha = 0.6) +
geom_smooth(mapping = aes(color = ID),
method = "loess") +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
#legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
#plot_flow <-
ggplot(data = df_all %>%
#filter(ID == "101") %>%
arrange(Time),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
#  geom_path(mapping = aes(color = ID),
#            size = 0.4,
#            alpha = 0.6) +
geom_smooth(mapping = aes(color = ID),
method = "loess") +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
#legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
#plot_flow <-
ggplot(data = df_all %>%
#filter(ID == "101") %>%
arrange(Time),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
#  geom_path(mapping = aes(color = ID),
#            size = 0.4,
#            alpha = 0.6) +
geom_smooth(mapping = aes(color = ID),
method = "loess",
se = F) +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
#legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
#plot_flow <-
ggplot(data = df_all %>%
#filter(ID == "101") %>%
arrange(Time),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
#  geom_path(mapping = aes(color = ID),
#            size = 0.4,
#            alpha = 0.6) +
geom_smooth(mapping = aes(color = ID),
method = "loess") +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
#legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
plot_flow_leg <-
ggplot(data = df_all,
mapping = aes(x = Time,
y = `Heart Rate`
)
) +
# geom_line(mapping = aes(color = ID)) +
geom_smooth(mapping = aes(color = ID),
method = "loess") +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif")) +
facet_grid(cols = vars(Type))
legend <- cowplot::get_legend(plot_flow_leg)
plot_flow
plot_box <-
ggplot(data = df_aggr,
mapping = aes(x = factor(0),
y = mean
)
) +
geom_boxplot(aes(group = Type)) +
geom_point(size = 2,
position = position_jitter(seed = 1,
width = 0.1
),
color = "#000004FF"
) +
labs(x = "",
y = "Average Heart Rate\n(in Beats per Minute)") +
scale_fill_viridis_d(option = "A",
end = 0.8,
begin = 0.3) +
theme_minimal() +
theme(text = element_text(family = "serif"),
axis.text.x = element_blank(),
legend.position = "none",
strip.text = element_blank()
) +
facet_grid(cols = vars(Type)) +
aes(fill = Type)
plot_box
lo_mat <- rbind(c(1,1,1,1,1,1,3),
c(2,2,2,2,2,2,NA))
plot_fitbit <-
grid.arrange(grobs = list(plot_flow, plot_box, legend),
layout_matrix = lo_mat)
plot_flow <-
ggplot(data = df_all %>%
#filter(ID == "101") %>%
arrange(Time),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
#  geom_path(mapping = aes(color = ID),
#            size = 0.4,
#            alpha = 0.6) +
geom_smooth(mapping = aes(color = ID),
method = "loess") +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
#legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
plot_fitbit <-
grid.arrange(grobs = list(plot_flow, plot_box, legend),
layout_matrix = lo_mat)
plot_flow <-
ggplot(data = df_all %>%
#filter(ID == "101") %>%
arrange(Time),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
#  geom_path(mapping = aes(color = ID),
#            size = 0.4,
#            alpha = 0.6) +
geom_smooth(mapping = aes(color = ID),
method = "loess") +
xlim(0,min(df_all_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
plot_fitbit <-
grid.arrange(grobs = list(plot_flow, plot_box, legend),
layout_matrix = lo_mat)
ggsave(plot = plot_fitbit,
file = "Plots/fitbit.pdf",
height = 16,
width = 20,
units = "cm"
)
