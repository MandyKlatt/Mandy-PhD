y = mean,
group = as_factor(ID)
),
linetype = 1,
alpha = 0.5
) +
geom_line(data = filter(df_heart_aggr,
status == "Expert"),
mapping = aes(x = Type,
y = mean,
group = as_factor(ID)
),
linetype = 6,
alpha = 0.5
) +
geom_point(size = 2,
alpha = 0.5) +
labs(x = "",
y = "Average Heart Rate\n(in Beats per Minute)") +
scale_color_viridis_d(option = "A",
end = 0.8) +
theme_minimal() +
theme(text = element_text(family = "serif"),
strip.text = element_blank(),
legend.position = "none",
axis.text.x = element_blank()
) +
aes(fill = Type)
lo_mat <- rbind(c(1,1,1,1,1,1,NA),
c(2,2,2,2,2,2,4),
c(3,3,3,3,3,3,NA))
plot_heart <-
grid.arrange(grobs = list(plot_flow, plot_loess, plot_box, legend),
layout_matrix = lo_mat)
plot_heart
df_steps <- read_rds(file = "final_data/steps.rds")
set.seed(5678)
ggplot(data = df_steps,
mapping = aes(x = type,
y = Steps
)
) +
geom_boxplot(mapping = aes(color = type),
fill = "grey",
alpha = 0.6) +
geom_jitter(mapping = aes(color = type),
alpha = 0.9,
width = 0.3) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "",
y = "Steps During\nMain Phase") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
source(file = "data.wrangling.R")
source(file = "data.wrangling.R")
source(file = "data.wrangling.R")
library(needs)
needs(tidyverse,
janitor,
lubridate)
df_test <- read_tsv(file = "data/Acc_Test_Data.tsv") %>%
clean_names()
View(df_test)
knitr::opts_chunk$set(echo = FALSE)
# Packages
# install.packages("needs")
# Choose "No"
library(needs)
needs(tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS)
source(file = "data.wrangling.R")
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/Fitbit/fitbit_proj_final")
# Plots
df_heart_all <-
read_rds(file = "final_data/heart_all.rds") |>
mutate(status = factor(status,
levels = c("Expert","Novice"),
labels = c("Expert","Novice")
)
)
df_heart_min <-
read_rds(file = "final_data/heart_min.rds")
df_heart_aggr <-
read_rds(file = "final_data/heart_aggr.rds") |>
mutate(status = factor(status,
levels = c("Novice","Expert"),
labels = c("Novice","Expert")
)
)
plot_flow <-
ggplot(data = df_heart_all,
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`,
group = ID)
) +
geom_line(mapping = aes(color = status),
size = 0.3,
alpha = 1
) +
xlim(0, min(df_heart_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8)  +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.position = "none",
strip.text = element_text(size = 16)) +
facet_grid(cols = vars(Type),
scales = "free_x")
plot_flow_leg <-
ggplot(data = df_heart_all,
mapping = aes(x = Time,
y = `Heart Rate`
)
) +
geom_smooth(mapping = aes(color = status),
method = "loess") +
scale_color_viridis_d(option = "A",
end = 0.8) +
# scale_linetype_manual(values = c(1, 6)) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank())
legend <- cowplot::get_legend(plot_flow_leg)
plot_loess <-
ggplot(data = filter(df_heart_all),
mapping = aes(x = as.numeric(Time),
y = `Heart Rate`
)
) +
stat_smooth(geom = "line",
mapping = aes(color = status),
method = "loess",
se = FALSE) +
xlim(0,min(df_heart_min$min)) +
scale_color_viridis_d(option = "A",
end = 0.8) +
scale_linetype_manual(values = c(1, 6)) +
labs(x = "Time (in Seconds)",
y = "Heart Rate\n(in Beats per Minute)") +
theme_minimal() +
facet_grid(cols = vars(Type),
scales = "free_x",
) +
theme(text = element_text(family = "serif"),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_blank()
)
plot_box <-
ggplot(data = df_heart_aggr,
mapping = aes(x = Type,
y = mean,
color = status
)
) +
geom_boxplot(color = "darkgrey",
fill = "grey") +
geom_line(data = filter(df_heart_aggr,
status == "Novice"),
mapping = aes(x = Type,
y = mean,
group = as_factor(ID)
),
linetype = 1,
alpha = 0.5
) +
geom_line(data = filter(df_heart_aggr,
status == "Expert"),
mapping = aes(x = Type,
y = mean,
group = as_factor(ID)
),
linetype = 6,
alpha = 0.5
) +
geom_point(size = 2,
alpha = 0.5) +
labs(x = "",
y = "Average Heart Rate\n(in Beats per Minute)") +
scale_color_viridis_d(option = "A",
end = 0.8) +
theme_minimal() +
theme(text = element_text(family = "serif"),
strip.text = element_blank(),
legend.position = "none",
axis.text.x = element_blank()
) +
aes(fill = Type)
lo_mat <- rbind(c(1,1,1,1,1,1,NA),
c(2,2,2,2,2,2,4),
c(3,3,3,3,3,3,NA))
plot_heart <-
grid.arrange(grobs = list(plot_flow, plot_loess, plot_box, legend),
layout_matrix = lo_mat)
plot_heart
df_steps <- read_rds(file = "final_data/steps.rds")
set.seed(5678)
ggplot(data = df_steps,
mapping = aes(x = type,
y = Steps
)
) +
geom_boxplot(mapping = aes(color = type),
fill = "grey",
alpha = 0.6) +
geom_jitter(mapping = aes(color = type),
alpha = 0.9,
width = 0.3) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "",
y = "Steps During\nMain Phase") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
df_steps <- read_rds(file = "final_data/steps.rds")
set.seed(5678)
ggplot(data = df_steps,
mapping = aes(x = type,
y = Steps
)
) +
geom_boxplot(mapping = aes(color = type),
fill = "grey",
alpha = 0.6) +
geom_jitter(mapping = aes(color = type),
alpha = 0.9,
width = 0.3) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "",
y = "Steps During\nMain Phase") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
### Validation of steps
sample(df_steps)
### Validation of steps
sample_n(df_steps, 5)
View(df_steps)
### Validation of steps
sample_n(df_steps, 6)
### Validation of steps
sample_n(df_steps, 6)
# Combined Analysis
### Validation of steps
sample_n(df_steps, 6)
knitr::opts_chunk$set(echo = FALSE)
# Packages
# install.packages("needs")
# Choose "No"
library(needs)
needs(tidyverse,
janitor,
lubridate,
readxl,
ggthemes,
gridExtra,
imputeTS)
source(file = "data.wrangling.R")
df_steps <- read_rds(file = "final_data/steps.rds")
set.seed(5678)
ggplot(data = df_steps,
mapping = aes(x = type,
y = Steps
)
) +
geom_boxplot(mapping = aes(color = type),
fill = "grey",
alpha = 0.6) +
geom_jitter(mapping = aes(color = type),
alpha = 0.9,
width = 0.3) +
scale_color_viridis_d(option = "A",
end = 0.8) +
labs(x = "",
y = "Steps During\nMain Phase") +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
### Validation of steps
# selecting some rows at random with sample_n()
sample_n(df_steps, 6)
# Output:
# Experts: 219, 218, 214
# Novices: 108, 117, 110
View(df_steps)
knitr::opts_chunk$set(include = FALSE)
library("papaja")
r_refs(file = "r-references.bib")
audit_table <- structure(
list(
Description = c(
"The teacher reacts exclusively non-verbally to a disturbance. The flow of the lesson is not interrupted.",
"The teacher reacts nonverbally and simultaneously with a short verbal reaction. The nonverbal response includes gestures (stop signals, decreasing proximity) and facial expressions (fixing gaze). The verbal response includes name calling, brief verbal prompts / admonitions.",
"The teacher responds briefly and verbally to a disruption without a preceding nonverbal response.",
"The teacher responds nonverbally and simultaneously overlapping with a verbal long response to a disruption. The nonverbal response includes gestures (stop signals, decreasing proximity) and facial expressions (fixating gaze).",
"There is no reaction from the teacher to a disruption because the teacher does not consider it relevant to address the disruption. This information can only be obtained through the Stimulated Recall Interview.",
"There is no reaction to a disruption on the part of the teacher because the teacher has not registered the disruption. This information can only be obtained through the Stimulated Recall Interview.",
"Dysfunctional Response: the teacher responds inappropriately to a disruption through a lengthy verbal discussion of class rules, yelling around, etc."
),
`1` = c("Never", "1â€“2", "Never"),
`2` = c("Monthly or less", "3-4", "Less than monthly"),
`3` = c("2-4 times per month", "5-6", "monthly"),
`4` = c("2-3 times per week","7-9", "Weekly"),
`5` = c("4+ times per week", "10+", "Daily or almost daily"),
`6` = c("bla"),
`7` = c("bla")
),
class = "data.frame",
row.names = c(NA)
)
knitr::opts_chunk$set(include = FALSE)
library("papaja")
r_refs(file = "r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools,
formattable)
# load data files
quest.data <- read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
mutate(Group = ifelse(LI06_05 < 200, "Novice","Expert")) %>%
dplyr::select(Group, LM01_01:LO01_02)
# create two data frames
quest.data.novice <- quest.data %>% filter(Group == "Novice")
quest.data.expert <- quest.data %>% filter(Group == "Expert")
############## NOVICE TABLE #########################
# creating a matrix
quest.table.novice <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table.novice) <- c("LM", "LB", "LP", "LV")
colnames(quest.table.novice) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","alpha")
# creating a loop
i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data.novice %>%
dplyr::select(starts_with(match = i))
quest.table.novice[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table.novice[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table.novice[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table.novice[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table.novice[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table.novice[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table.novice[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table.novice[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table.novice) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table.novice,
caption = "Scale analysis for novices' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
############## EXPERT TABLE #########################
# creating a matrix
quest.table.expert <- matrix(data = NA, nrow = 4, ncol = 8)
rownames(quest.table.expert) <- c("LM", "LB", "LP", "LV")
colnames(quest.table.expert) <- c("N Items","M","SD","Min","Max","Skewness","Kurtosis","alpha")
# creating a loop
# i <- "LM"
for (i in c("LM", "LB", "LP", "LV")) {
loop.data <- quest.data.expert %>%
dplyr::select(starts_with(match = i))
quest.table.expert[i, "N Items"] <- length(loop.data)
# calculating mean
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
mean() %>%
round(., digits = 2) ->
quest.table.expert[i, "M"]
# calculating SD
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
sd() %>%
round(., digits = 2) ->
quest.table.expert[i, "SD"]
# calculating Min
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
min() %>%
round(., digits = 2) ->
quest.table.expert[i, "Min"]
# calculating Max
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
max() %>%
round(., digits = 2) ->
quest.table.expert[i, "Max"]
# calculating Skewness
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
skewness() %>%
round(., digits = 2) ->
quest.table.expert[i, "Skewness"]
# calculating Kurtosis
loop.data %>%
mutate(mean = rowMeans(.)) %>%
pull(mean) %>%
kurtosis() %>%
round(., digits = 2) ->
quest.table.expert[i, "Kurtosis"]
# calculating alpha
alpha <- loop.data %>%
cronbach.alpha()
quest.table.expert[i, "alpha"] <- round(alpha$alpha,2)
}
# rename columns
rownames(quest.table.expert) <- c("Classroom Management", "Balance", "Presence", "Natural Behavior")
# format and insert table in manuscript
papaja::apa_table(
quest.table.expert,
caption = "Scale analysis for experts' self-assessment",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
quest.data %>%
dplyr::filter(Group == "Novice") %>%
dplyr::select(contains("LM")) %>%
as.data.frame() %>%
tab_itemscale(CSS = list(
css.firsttablerow.col7 = "'cronbachs alpha';"
))
