)
}
mget(ls(pattern = "provis")) %>%
bind_rows() %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group)) +
geom_point(aes(y = peaks_exp,
color = group),
size = 3) +
xlim(5000,10000)
mget(ls(pattern = "provis")) %>%
bind_rows() %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group)) +
geom_point(aes(y = peaks_exp,
color = group),
size = 3) +
scale_color_brewer(palette = "Dark2") +
xlim(5000,10000)
mget(ls(pattern = "provis")) %>%
bind_rows() %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group)) +
geom_point(aes(y = peaks_exp,
color = group),
size = 3) +
scale_color_brewer(palette = "Dark2") +
xlim(10000,15000)
mget(ls(pattern = "provis")) %>%
bind_rows() %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group)) +
geom_point(aes(y = peaks_exp,
color = group),
size = 3) +
scale_color_brewer(palette = "Dark2") #+
mget(ls(pattern = "provis")) %>%
bind_rows() %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group)) +
geom_point(aes(y = peaks_exp,
color = group),
size = 1) +
scale_color_brewer(palette = "Dark2") #+
mget(ls(pattern = "provis")) %>%
bind_rows() %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.2) +
geom_point(aes(y = peaks_exp,
color = group),
size = 1) +
scale_color_brewer(palette = "Dark2") #+
?seq
seq(from = 0,
to = max(df_sound_all-5000),
by = 1)
seq(from = 0,
to = max(df_sound_all) - 5000,
by = 1)
mget(ls(pattern = "provis")) %>%
bind_rows() ->
df_sound_all
seq(from = 0,
to = max(df_sound_all$time_ms) - 5000,
by = 1)
mget(ls(pattern = "provis")) %>%
bind_rows() ->
df_sound_all
time <-
seq(from = 0,
to = max(df_sound_all$time_ms) - 5000,
by = 1)
set.seed(567)
start_time <- sample(time, size = 1)
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.2) +
geom_point(aes(y = peaks_exp,
color = group),
size = 1) +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000)
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000)
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)")
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)") +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000)
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)") +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000) +
theme_minimal() +
theme(text = element_text(family = "serif"))
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)",
color = "Group") +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000) +
theme_minimal() +
theme(text = element_text(family = "serif"))
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)",
color = "") +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000) +
theme_minimal() +
theme(text = element_text(family = "serif"))
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)",
color = "") +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.position = "bottom")
x <- 1:100
summary(x)
summary(x)$min
x <- summary(x)
is.list(x)
as.list(x)
as.list(x)$Min.
?format
peter <- list(name = "peter", age = 12, friends = FALSE)
View(peter)
View(peter)
peter <- list(name = "peter", age = c(12,16,29,10), friends = FALSE)
View(peter)
mean(peter$age)
library(needs)
needs(tidyverse,
pracma,
gridExtra)
list_csv <- list.files(path = "output", pattern = ".csv")
for (i in list_csv) {
name_list <- str_extract_all(i, pattern = "[:digit:]")[[1]]
name_list <- str_flatten(name_list[1:3])
read_csv(file = paste0("output/", i)) ->
df_sound
peaks <- pracma::findpeaks(df_sound$env, minpeakdistance = 10,
minpeakheight = mean(df_sound$env)-(1 * sd(df_sound$env)))
df_sound %>%
mutate(ID = name_list,
group = if_else(ID < 200,
"Novice",
"Expert"
)
) ->
df_sound
df_sound$peaks <- NA
df_sound$peaks[peaks[,2]] <- peaks[,1]
assign(x = paste0("provis_", name_list),
value = df_sound
)
}
mget(ls(pattern = "provis")) %>%
bind_rows() ->
df_sound_all
time <-
seq(from = 0,
to = max(df_sound_all$time_ms) - 5000,
by = 1)
set.seed(567)
start_time <- sample(time, size = 1)
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in MS)",
y = "log(Amplitude)",
color = "") +
scale_color_brewer(palette = "Dark2") +
xlim(start_time,start_time + 5000) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.position = "bottom")
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))(max(time_ms)/diff(range(time_ms)))
group = group)
)
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))(max(time_ms)/diff(range(time_ms))),
group = group
)
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))(max(time_ms)/diff(range(time_ms)))
)
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms)))
)
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(env_ts$time_ms[!is.na(env_ts$peaks)]))
) %>%
ungroup() %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar()
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar()
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(stat = "identity")
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(stat = "identity",
width = 0.3)
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(stat = "identity",
width = 0.3) +
theme_minimal()
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
mutate(group = if_else(ID < 200,
"Novice",
"Expert"
)
) %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(mapping = aes(fill = group),
stat = "identity",
width = 0.3) +
theme_minimal()
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
mutate(group = if_else(ID < 200,
"Novice",
"Expert"
)
) %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(mapping = aes(fill = group),
stat = "identity",
width = 0.3) +
scale_fill_brewer(palette = "Dark2")
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
mutate(group = if_else(ID < 200,
"Novice",
"Expert"
)
) %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(mapping = aes(fill = group),
stat = "identity",
width = 0.3) +
scale_fill_brewer(palette = "Dark2") +
theme_minimal() +
theme(text = element_text(family = "serif",
size = 12))
df_sound_all %>%
group_by(ID) %>%
summarise(syllable_p_sec = sum(!is.na(peaks))/(max(time_ms)/diff(range(time_ms))),
syllable_sd = sd(diff(time_ms[!is.na(peaks)]))
) %>%
ungroup() %>%
mutate(group = if_else(ID < 200,
"Novice",
"Expert"
)
) %>%
ggplot(mapping = aes(x = ID,
y = syllable_p_sec)) +
geom_bar(mapping = aes(fill = group),
stat = "identity",
width = 0.3) +
labs(y = "Syllables per Second",
fill = "Group") +
scale_fill_brewer(palette = "Dark2") +
theme_minimal() +
theme(text = element_text(family = "serif",
size = 12))
range(df_sound_all$time_ms)
x <- range(df_sound_all$time_ms)
library(readr)
audio_cartoon_ENV <- read_csv("~/Documents/GitHub/EnvisionBootcamp2021/R/ExtractAmplitudeEnvelope/output/audio_cartoon_ENV.csv")
View(audio_cartoon_ENV)
library(pracma) #package that has a peakfinding function
library(ggplot2) #plotting
library(gridExtra) #some plotting extras
#lets read in an amplitude envelope time series
env_ts <- read.csv("~/Documents/GitHub/EnvisionBootcamp2021/R/ExtractAmplitudeEnvelope/output/audio_cartoon_ENV.csv")
#identify peaks: #this will give you the height of the peak,
#the index, the index of the left through [,3] and the right through [,4]
peaks <- pracma::findpeaks(env_ts$env, minpeakdistance = 10,
minpeakheight = mean(env_ts$env)-(1*sd(env_ts$env)))
#initialize a peak variable
env_ts$peaks <- NA
#at each location of the timeseries where there is a peak, load in the value of that peak so we can plot it later
env_ts$peaks[peaks[,2]] <- peaks[,1]
#lets plot a sample of 5 seconds
a <- ggplot(env_ts, aes(x=time_ms, y = env) ) + geom_path() +
geom_point(aes(y=peaks), color = "red", size = 3) + xlim(5000, 10000) + theme_bw()
#lets also plot the original sound file to see how this compares
snd <- rPraat::snd.read(paste0(data_to_process, "audio_cartoon.wav"))
syllable_p_sec <- sum(!is.na(env_ts$peaks))/(max(env_ts$time_ms)/diff(range(env_ts$time_ms)))
print(paste0("N syllables produced p/s: ", syllable_p_sec))
print(paste0("SD in ms syllable interval: ", sd(diff(env_ts$time_ms[!is.na(env_ts$peaks)]))))
df_sound_all %>%
mutate(env_exp = log(env),
peaks_exp = log(peaks)
) %>%
ggplot(aes(x = time_ms,
y = env_exp
)
) +
geom_path(mapping = aes(color = group),
alpha = 0.8) +
geom_point(aes(y = peaks_exp,
color = group),
size = 2) +
labs(x = "Time (in ms)",
y = "log(Amplitude)",
color = "") +
scale_color_brewer(palette = "Dark2") +
#  xlim(start_time,start_time + 5000) +
theme_minimal() +
theme(text = element_text(family = "serif"),
legend.position = "bottom")
