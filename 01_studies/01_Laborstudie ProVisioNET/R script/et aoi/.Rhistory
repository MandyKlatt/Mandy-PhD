# t-test for expertise differences
t.test(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"],
na.rm = TRUE)
View(main)
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
df_sjt,
df_alternatives_count,
df_alternatives_nd)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
# SELF-REPORT DATA
df_sri <-
excel_sheets("data/coding_sri.xlsx") %>%
map_df(~read_xlsx("data/coding_sri.xlsx",.)) %>%
dplyr::select(ID, Event, `Confidence Factor`) %>%
filter(
ID %in% c(101:126, 201:228),
!ID %in% c(204, 226),
Event %in% c("chatting")) %>%
janitor::clean_names()
# SJT CM
df_sjt <- read_csv2(file = "data/SJT.csv",
locale = locale(decimal_mark = ",")) %>%
select(UI06_05,
SJT_KF_gek) %>%
filter(UI06_05 %in% c(101:126, 201:228),
!UI06_05 %in% c(204, 226)
) %>%
na.omit() %>%
rename("id" = "UI06_05",
"sjt" = "SJT_KF_gek")
# ACTION ALTERNATIVES count
df_alternatives_count <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
group_by(id) %>%
# mutate(mean_code = mean(code)) %>%
mutate(count = max(count)) %>%
distinct(count)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
df_sjt,
df_alternatives_count,
df_alternatives_nd)
View(df_list)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
View(main)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code < 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code >= 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code >= 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
df_sjt,
df_alternatives_count,
df_alternatives_nd)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
# replace NA with 0
main[is.na(main)] <- 0
main$id = ifelse(main$id < 200, "Novice","Expert")
#### confidence factor
# t-test for expertise differences
t.test(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"],
na.rm = TRUE)
### action alternatives count
# t-test for expertise differences
t.test(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"],
na.rm = TRUE)
### action alternatives non-disruptive
# t-test for expertise differences
t.test(x = main$nd[main$id == "Expert"],
y = main$nd[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$nd[main$id == "Expert"],
y = main$nd[main$id == "Novice"],
na.rm = TRUE)
# ACTION ALTERNATIVES count
df_alternatives_count <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
group_by(id) %>%
# mutate(mean_code = mean(code)) %>%
mutate(count = max(count)) %>%
distinct(count)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
df_sjt,
df_alternatives_count,
df_alternatives_nd)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
# replace NA with 0
main[is.na(main)] <- 0
main$id = ifelse(main$id < 200, "Novice","Expert")
#### confidence factor
# t-test for expertise differences
t.test(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"],
na.rm = TRUE)
#### confidence factor
# t-test for expertise differences
t.test(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"],
na.rm = TRUE)
### action alternatives count
# t-test for expertise differences
t.test(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"],
na.rm = TRUE)
### action alternatives non-disruptive
# t-test for expertise differences
t.test(x = main$nd[main$id == "Expert"],
y = main$nd[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$nd[main$id == "Expert"],
y = main$nd[main$id == "Novice"],
na.rm = TRUE)
# novices: correlation between confidence factor and count
main %>%
filter(id %in% c("Novice")) -> corr.nov
nov_confi_count_corr <- cor.test(corr.nov$confidence_factor,
corr.nov$count,
method=c("pearson"),
adjust="holm")
print(nov_confi_count_corr,
short = F)
# experts: correlation between confidence factor and count
main %>%
filter(id %in% c("Expert")) -> corr.exp
exp_confi_count_corr <- cor.test(corr.exp$confidence_factor,
corr.exp$count,
method=c("pearson"),
adjust="holm")
print(exp_confi_count_corr,
short = F)
# full sample: correlation between confidence factor and count
full_confi_count_corr <- corr.test(main$confidence_factor,
main$count,
method=c("pearson"),
adjust="holm")
print(full_confi_count_corr,
short = F)
# full sample: correlation between confidence factor and count
full_confi_count_corr <- corr.test(main$confidence_factor,
main$count,
method=c("pearson"),
adjust="holm")
View(full_confi_count_corr)
# ACTION ALTERNATIVES count
df_alternatives_count <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
group_by(id) %>%
# mutate(mean_code = mean(code)) %>%
mutate(count = max(count)) %>%
distinct(count)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
df_sjt,
df_alternatives_count,
df_alternatives_nd)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
View(df_alternatives_count)
# SELF-REPORT DATA
df_sri <-
excel_sheets("data/coding_sri.xlsx") %>%
map_df(~read_xlsx("data/coding_sri.xlsx",.)) %>%
dplyr::select(ID, Event, `Confidence Factor`) %>%
filter(
ID %in% c(101:126, 201:228),
!ID %in% c(204, 226),
Event %in% c("chatting")) %>%
janitor::clean_names()
# SJT CM
df_sjt <- read_csv2(file = "data/SJT.csv",
locale = locale(decimal_mark = ",")) %>%
select(UI06_05,
SJT_KF_gek) %>%
filter(UI06_05 %in% c(101:126, 201:228),
!UI06_05 %in% c(204, 226)
) %>%
na.omit() %>%
rename("id" = "UI06_05",
"sjt" = "SJT_KF_gek")
# ACTION ALTERNATIVES count
df_alternatives_count <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
group_by(id) %>%
# mutate(mean_code = mean(code)) %>%
mutate(count = max(count)) %>%
distinct(count)
# ACTION ALTERNATIVES non-disruptive
df_alternatives_nd <- read_excel("data/coding_action_alternatives.xlsx") %>%
na.locf() %>%
janitor::clean_names() %>%
select(id, code) %>%
mutate(nd =
as.numeric(
case_when(code > 3 ~ '0',
code <= 3 ~ '1',
TRUE ~ 'F'
)
)
) %>%
group_by(id) %>%
summarise(nd = sum(nd))
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
df_sjt,
df_alternatives_count,
df_alternatives_nd)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
View(main)
View(df_alternatives_count)
View(df_alternatives_nd)
View(df_sjt)
View(df_sri)
# SJT CM
df_sjt <- read_csv2(file = "data/SJT.csv",
locale = locale(decimal_mark = ",")) %>%
select(UI06_05,
SJT_KF_gek) %>%
filter(UI06_05 %in% c(101:126, 201:228),
!UI06_05 %in% c(204, 226)
) %>%
na.omit() %>%
rename("id" = "UI06_05",
"sjt" = "SJT_KF_gek")
View(df_sjt)
# merge data frames
# put all data frames into list
df_list <- list(df_sri,
# df_sjt,
df_alternatives_count,
df_alternatives_nd)
# merge all data frames in list
main <-
df_list %>% reduce(full_join, by='id') %>%
janitor::clean_names() %>%
select(!event)
# replace NA with 0
main[is.na(main)] <- 0
main$id = ifelse(main$id < 200, "Novice","Expert")
View(main)
#### confidence factor
# t-test for expertise differences
t.test(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$confidence_factor[main$id == "Expert"],
y = main$confidence_factor[main$id == "Novice"],
na.rm = TRUE)
### action alternatives count
# t-test for expertise differences
t.test(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$count[main$id == "Expert"],
y = main$count[main$id == "Novice"],
na.rm = TRUE)
### action alternatives non-disruptive
# t-test for expertise differences
t.test(x = main$nd[main$id == "Expert"],
y = main$nd[main$id == "Novice"])
# effect size for expertise differences
CohenD(x = main$nd[main$id == "Expert"],
y = main$nd[main$id == "Novice"],
na.rm = TRUE)
# novices: correlation between confidence factor and count
main %>%
filter(id %in% c("Novice")) -> corr.nov
nov_confi_count_corr <- cor.test(corr.nov$confidence_factor,
corr.nov$count,
method=c("pearson"),
adjust="holm")
print(nov_confi_count_corr,
short = F)
# experts: correlation between confidence factor and count
main %>%
filter(id %in% c("Expert")) -> corr.exp
exp_confi_count_corr <- cor.test(corr.exp$confidence_factor,
corr.exp$count,
method=c("pearson"),
adjust="holm")
print(exp_confi_count_corr,
short = F)
# full sample: correlation between confidence factor and count
full_confi_count_corr <- corr.test(main$confidence_factor,
main$count,
method=c("pearson"),
adjust="holm")
print(full_confi_count_corr,
short = F)
full_confi_count_corr
View(full_confi_count_corr)
# novices: correlation between confidence factor and non-disruptive alternatives
nov_confi_nd_corr <- cor.test(corr.nov$confidence_factor,
corr.nov$nd,
method=c("pearson"),
adjust="holm")
print(nov_confi_nd_corr,
short = F)
# experts: correlation between confidence factor and non-disruptive alternatives
exp_confi_nd_corr <- cor.test(corr.exp$confidence_factor,
corr.exp$nd,
method=c("pearson"),
adjust="holm")
print(exp_confi_nd_corr,
short = F)
# full sample: correlation between confidence factor and non-disruptive alternatives
full_confi_nd_corr <- corr.test(main$confidence_factor,
main$nd, method=c("pearson"),
adjust="holm")
print(full_confi_nd_corr,
short = F)
# novices: correlation between count and non-disruptive alternatives
nov_count_nd_corr <- cor.test(corr.nov$count,
corr.nov$nd,
method=c("pearson"),
adjust="holm")
print(nov_count_nd_corr,
short = F)
# novices: correlation between count and non-disruptive alternatives
nov_count_nd_corr <- cor.test(corr.nov$count,
corr.nov$nd,
method=c("pearson"),
adjust="holm")
print(nov_count_nd_corr,
short = F)
# experts: correlation between count and non-disruptive alternatives
exp_count_nd_corr <- cor.test(corr.exp$count,
corr.exp$nd,
method=c("pearson"),
adjust="holm")
print(exp_count_nd_corr,
short = F)
# full sample: correlation between confidence factor and non-disruptive alternatives
full_count_nd_corr <- corr.test(main$count,
main$nd,
method=c("pearson"),
adjust="holm")
print(full_count_nd_corr,
short = F)
full_count_nd_corr
View(full_count_nd_corr)
