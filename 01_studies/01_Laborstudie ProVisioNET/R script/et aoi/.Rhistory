# novices
mean_number_nov <-
df_aoi_sum %>%
filter(Group == "Novice") %>%
pull(Sum_number_fixation) %>%
mean() %>%
round(., digits = 0)
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person") %>%
rowwise() %>%
transmute(Group = Group,
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")
),
na.rm = TRUE
),
Sum_number_fixation = sum(c_across(starts_with("Number_of")
),
na.rm = TRUE
)
) %>%
mutate(Average_duration = round(Sum_duration_fixation/Sum_number_fixation,
digits = 0),
Group = as_factor(Group)) -> df_aoi_sum
View(df_aoi_sum)
# mean & SD number fixation
# novices
mean_number_nov <-
df_aoi_sum %>%
filter(Group == "Novice") %>%
pull(Sum_number_fixation) %>%
mean() %>%
round(., digits = 0)
sd_number_nov <-
df_aoi_sum %>%
filter(Group == "Novice") %>%
pull(Sum_number_fixation) %>%
sd() %>%
round(., digits = 0)
# experts
mean_number_exp <-
df_aoi_sum %>%
filter(Group == "Expert") %>%
pull(Sum_number_fixation) %>%
mean() %>%
round(., digits = 0)
sd_number_exp <-
df_aoi_sum %>%
filter(Group == "Expert") %>%
pull(Sum_number_fixation) %>%
sd() %>%
round(., digits = 0)
# plotting number of fixations on ALL AOIS
df_aoi_sum %>%
ggplot(mapping = aes(x = Group,
y = Sum_number_fixation)) +
geom_boxplot(mapping = aes(fill = Group),
outlier.shape = NA) +
geom_point(size = 2,
alpha = 0.7,
position = position_jitter(seed = 1,
width = 0.1,
height = 0.1)) +
# scale_x_discrete(labels = paste(
#   c("Novice\n", "Expert\n"),
#   glue("$M$ = "),
#   c(mean_number_nov, mean_number_exp),
#   glue("; $SD$ = "),
#   c(sd_number_nov, sd_number_exp)
# )) +
# scale_x_discrete(labels = c(
#   paste(
#     "Novice\n",
#     glue("<i>M</i>"),
#     " = ",
#     c(mean_number_nov, mean_number_exp)
#   ),
#   c(
#     "Expert\n",
#     ";",
#     glue("<i>SD</i>"),
#     " = ",
#     c(sd_number_nov, sd_number_exp)
#   )
# )) +
labs(x ="",
y = "Number") +
scale_fill_brewer(palette  = "RdBu") +
ggtitle("Number of Fixations on all AOIs") +
theme_cowplot() +
theme(legend.position="none",
axis.text.x = element_text(size = 34),
axis.text.y = element_text(size = 18),
axis.title = element_text(size = 34),
plot.title = element_text(size = 35,
face = "bold")
) -> plot_number_group
plot_number_group
View(df_aoi_sum)
View(df_aoi)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
rm(work_data)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Number_of_fixation_starts.Disruptive_Person")
View(df_aoi)
View(df_aoi)
df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Number_of_fixation_starts.Disruptive_Person") %>%
rowwise() %>%
transmute(Group = Group,
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")
),
na.rm = TRUE
),
Sum_number_fixation = sum(c_across(starts_with("Number_of")
),
na.rm = TRUE
)
) %>%
mutate(Average_duration = round(Sum_duration_fixation/Sum_number_fixation,
digits = 0),
Group = as_factor(Group)) -> df_aoi_sum
View(df_aoi_sum)
rm(df_aoi)
rm(df_aoi_sum)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
View(df_aoi)
df_aoi -> df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Number_of_fixation_starts.Disruptive_Person")
df_aoi <- df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Number_of_fixation_starts.Disruptive_Person")
View(df_aoi)
rm(df_aoi)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
View(df_aoi)
df_aoi <- df_aoi %>%
filter(TOI == "Lesson")
View(df_aoi)
df_aoi <- df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Fixation_hit"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Fixation_hit.Disruptive_Person")
View(df_aoi)
rm(df_aoi)
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra,
janitor,
RColorBrewer,
cowplot)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
# rm(df_aoi)
View(df_aoi)
head(df_aoi)
head(df_aoi)
df_aoi <- df_aoi %>%
filter(TOI == "Lesson")
head(df_aoi)
df_aoi <- df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"))
head
head(df_aoi)
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/et aoi")
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra,
janitor,
RColorBrewer,
cowplot)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra,
janitor,
RColorBrewer,
cowplot)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
View(tib_ProVisioNET_study_glasses_metrics_136_interval_complete)
ex <- tib_ProVisioNET_study_glasses_metrics_136_interval_complete %>%
filter(TOI = "Lesson")
ex <- tib_ProVisioNET_study_glasses_metrics_136_interval_complete %>%
filter(TOI == "Lesson")
View(tib_ProVisioNET_study_glasses_metrics_136_interval_complete)
View(tib_ProVisioNET_study_glasses_metrics_136_interval_complete)
View(ex)
View(ex)
ex <- tib_ProVisioNET_study_glasses_metrics_136_interval_complete %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"))
View(ex)
View(ex)
ex <- tib_ProVisioNET_study_glasses_metrics_136_interval_complete %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Number_of_fixation_starts"))
View(ex)
ex <- tib_ProVisioNET_study_glasses_metrics_136_interval_complete %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Fixation_hit"))
View(ex)
View(df_aoi)
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
View(df_aoi)
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra,
janitor,
RColorBrewer,
cowplot)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# return a character vector with names of .tsv data in data folder
file_names <- list.files(path = "data",
pattern = "interval_complete.tsv")
# read every object names in file_names and save it as a tibble
for (i in file_names) {
work_data <-
read_tsv(file = paste0("data/", i),
locale = locale(decimal_mark = ","))
assign(value = work_data,
x = str_remove(paste0("tib_", i),
pattern = ".tsv"
)
)
}
# Bind every tibble that contains "interval_complete" to a new tible
df_aoi <-
mget(ls(pattern = "interval_complete")) %>%
bind_rows()
# Remove temporary data for a cleaner workspace
rm(list = ls(pattern = "^tib_ProVisio"))
rm(work_data)
rm(file_names)
rm(i)
df_aoi %>%
filter(TOI == "Lesson")
df_aoi %>%
filter(TOI == "Lesson")
View(df_aoi)
df_aoi <- df_aoi %>%
filter(TOI == "Lesson")
View(df_aoi)
df_aoi <- df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
starts_with("Fixation_hit"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person",
!"Fixation_hit.Disruptive_Person") %>%
rowwise()
View(df_aoi)
df_aoi %>%
filter(TOI == "Lesson") %>%
select (Group,
starts_with("Total_duration_of_fixations"),
starts_with("Number_of_fixations"),
!"Total_duration_of_fixations.Disruptive_Person",
!"Number_of_fixations.Disruptive_Person") %>%
rowwise() %>%
transmute(Group = Group,
Sum_duration_fixation = sum(c_across(starts_with("Total_duration")
),
na.rm = TRUE
),
Sum_number_fixation = sum(c_across(starts_with("Number_of")
),
na.rm = TRUE
)
) %>%
mutate(Average_duration = round(Sum_duration_fixation/Sum_number_fixation,
digits = 0),
Group = as_factor(Group)) -> df_aoi_sum
View(df_aoi_sum)
