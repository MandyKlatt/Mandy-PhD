sri_dropout <-
sri %>%
filter(!`Disruption Factor` == -100)
# drop out all drop out
sri_dropout <-
sri %>%
filter(!`Disruption Factor` == -100,
!`Confident Factor` == -100,
!`Disruption Factor`== -99)
View(sri_dropout)
# drop out all drop out
sri <-
sri %>%
filter(!`Disruption Factor` == -100,
!`Confident Factor` == -100,
!`Disruption Factor`== -99)
View(sri)
# read in data and combine multiple excel sheets into a single table
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>%
select(Group, Event, `Disruption Factor`, `Confident Factor`) %>% # select relevant columns
filter(Group %in% c(101:122, 201:212))# filter relevant rows
# counting drop outs (-99 not perceived, -100 not answered)
# all dropout
sri$dropout <-
length(which(sri$`Disruption Factor`== -99 |
sri$`Disruption Factor`== -100 |
sri$`Confident Factor` == -100))
# not perceived
sri$not_perceived <-
length(which(sri$`Disruption Factor`== -99))
View(sri)
# count all events
sri$sum_events <-
count(sri$Event)
# count all events
sri$sum_events <-
as.character(sri$Event) %>%
count(sri$Event)
sri$sum_events <-
as.character(sri$Event)
class(Event)
class(sri$Event)
# count all events
sri$sum_events <-
as.character(sri$Event) %>%
count(sri$Event)
# count all events
sri$sum_events <-
as.character(sri$Event) %>%
count(Event)
# count all events
length(summary(as.factor(sri$Event)
View(sri)
View(sri)
# count all events
sri$sum_events <-
View(sri)
View(sri)
# count all events
sri$sum_events <-
count(summary(as.factor(sri$Event)))
# count all events
sri$sum_events <-
length(summary(as.factor(sri$Event)))
View(sri)
View(sri)
# count all events
sri$sum_events <-
length(summary(as.factor(sri$Group)))
View(sri)
# count all events and calculate percentage of dropouts
sri$sum_events <-
length(summary(as.factor(sri$Group))) %>%
mutate(percent_all_dropout = (dropout/sum_events)*100)
class(sri$sum_events)
# counting drop outs (-99 not perceived, -100 not answered)
# all dropout
sri$dropout <-
length(which(sri$`Disruption Factor`== -99 |
sri$`Disruption Factor`== -100 |
sri$`Confident Factor` == -100)) %>%
as.numeric(sri$dropout)
# not perceived
sri$not_perceived <-
length(which(sri$`Disruption Factor`== -99)) %>%
as.numeric(sri$not_perceived)
# count all events and calculate percentage of dropouts
sri$sum_events <-
length(summary(as.factor(sri$Group))) %>%
as.numeric(sri$sum_events) %>%
mutate(percent_all_dropout = (dropout/sum_events)*100)
class(sri_dropout)
View(sri)
View(sri_dropout)
# count all events and calculate percentage of dropouts
sri$sum_events <-
length(summary(as.factor(sri$Group))) %>%
as.numeric(sri$sum_events) %>%
mutate(all_dropout_percent= (dropout/sum_events)*100)
# counting drop outs (-99 not perceived, -100 not answered)
# all dropout
sri$dropout <-
length(which(sri$`Disruption Factor`== -99 |
sri$`Disruption Factor`== -100 |
sri$`Confident Factor` == -100)) %>%
as.numeric(sri$dropout)
# not perceived
sri$not_perceived <-
length(which(sri$`Disruption Factor`== -99)) %>%
as.numeric(sri$not_perceived)
# count all events and calculate percentage of dropouts
sri$sum_events <-
length(summary(as.factor(sri$Group))) %>%
as.numeric(sri$sum_events) %>%
mutate(all_dropout_percent= (dropout/sum_events)*100)
# define expert and novice with ifelse function
sri$Group = ifelse(sri$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disrup <- subset.data.frame(sri, select = c(Group, Event, `Disruption Factor`))
sri_confi <- subset.data.frame(sri, select = c(Group, Event, `Confident Factor`))
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
dist_group_plot
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = `Disruption Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
dist_group_plot
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = `Disruption Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.1,
#                                       height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
dist_group_plot
ggsave(plot = dist_group_plot,
filename = "plots/dist_group_plot.png",
height = 8,
width = 8,
units = "in")
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = `Confident Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.15,
#                                       height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
confi_group_plot
ggsave(plot = confi_group_plot,
filename = "plots/confi_group_plot.png",
height = 8,
width = 8,
units = "in")
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = `Disruption Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.1,
#                                       height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_manual(values=c("steelblue","firebrick")) +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
dist_group_plot
ggsave(plot = dist_group_plot,
filename = "plots/dist_group_plot.png",
height = ,
width = 8,
units = "in")
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = `Confident Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.15,
#                                       height = 0)) +
scale_fill_manual(values=c("steelblue","firebrick")) +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
confi_group_plot
ggsave(plot = confi_group_plot,
filename = "plots/confi_group_plot.png",
height = 8,
width = 8,
units = "in")
# Disruption Factor
# t-test for expertise differences
t.test(x = sri$`Disruption Factor`[sri$Group == "Expert"],
y = sri$`Disruption Factor`[sri$Group == "Novice"])
# Disruption Factor
# effect size for expertise differences
d_sri_disrup <- CohenD(x = sri$`Disruption Factor`[sri$Group == "Novice"],
y = sri$`Disruption Factor`[sri$Group == "Expert"],
na.rm = TRUE)
CohenD(x = sri$`Disruption Factor`[sri$Group == "Novice"],
y = sri$`Disruption Factor`[sri$Group == "Expert"],
na.rm = TRUE)
# Confident Factor
# t-test for expertise differences
t.test(x = sri$`Confident Factor`[sri$Group == "Expert"],
y = sri$`Confident Factor`[sri$Group == "Novice"])
# Confident Factor
# effect size for expertise differences
d_sri_confi <- CohenD(x = sri$`Confident Factor`[df_aoi$Group == "Novice"],
y = sri$`Confident Factor`[df_aoi$Group == "Expert"],
na.rm = TRUE)
# Confident Factor
# effect size for expertise differences
d_sri_confi <- CohenD(x = sri$`Confident Factor`[sri$Group == "Novice"],
y = sri$`Confident Factor`[sri$Group == "Expert"],
na.rm = TRUE)
CohenD(x = sri$`Confident Factor`[sri$Group == "Novice"],
y = sri$`Confident Factor`[sri$Group == "Expert"],
na.rm = TRUE)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data and combine multiple excel sheets into a single table
sri <-
excel_sheets("data/Coding_SRI.xlsx") %>%
map_df(~read_xlsx("data/Coding_SRI.xlsx",.)) %>%
select(Group, Event, `Disruption Factor`, `Confident Factor`) %>% # select relevant columns
filter(Group %in% c(101:122, 201:212))# filter relevant rows
# counting drop outs (-99 not perceived, -100 not answered)
# all dropout
sri$dropout <-
length(which(sri$`Disruption Factor`== -99 |
sri$`Disruption Factor`== -100 |
sri$`Confident Factor` == -100)) %>%
as.numeric(sri$dropout)
# drop out all drop out
sri <-
sri %>%
filter(!`Disruption Factor` == -100,
!`Confident Factor` == -100,
!`Disruption Factor`== -99)
View(sri)
View(sri)
# define expert and novice with ifelse function
sri$Group = ifelse(sri$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disrup <- subset.data.frame(sri, select = c(Group, Event, `Disruption Factor`))
sri_confi <- subset.data.frame(sri, select = c(Group, Event, `Confident Factor`))
# Disruption Factor
# t-test for expertise differences
t.test(x = sri$`Disruption Factor`[sri$Group == "Expert"],
y = sri$`Disruption Factor`[sri$Group == "Novice"])
# Disruption Factor
# effect size for expertise differences
d_sri_disrup <- CohenD(x = sri$`Disruption Factor`[sri$Group == "Novice"],
y = sri$`Disruption Factor`[sri$Group == "Expert"],
na.rm = TRUE)
CohenD(x = sri$`Disruption Factor`[sri$Group == "Novice"],
y = sri$`Disruption Factor`[sri$Group == "Expert"],
na.rm = TRUE)
# Confident Factor
# t-test for expertise differences
t.test(x = sri$`Confident Factor`[sri$Group == "Expert"],
y = sri$`Confident Factor`[sri$Group == "Novice"])
# Confident Factor
# effect size for expertise differences
d_sri_confi <- CohenD(x = sri$`Confident Factor`[sri$Group == "Novice"],
y = sri$`Confident Factor`[sri$Group == "Expert"],
na.rm = TRUE)
CohenD(x = sri$`Confident Factor`[sri$Group == "Novice"],
y = sri$`Confident Factor`[sri$Group == "Expert"],
na.rm = TRUE)
# Disruption Factor
# t-test for expertise differences
t.test(x = sri$`Disruption Factor`[sri$Group == "Expert"],
y = sri$`Disruption Factor`[sri$Group == "Novice"])
# Disruption Factor
# effect size for expertise differences
d_sri_disrup <- CohenD(x = sri$`Disruption Factor`[sri$Group == "Expert"],
y = sri$`Disruption Factor`[sri$Group == "Novice"],
na.rm = TRUE)
CohenD(x = sri$`Disruption Factor`[sri$Group == "Expert"],
y = sri$`Disruption Factor`[sri$Group == "Novice"],
na.rm = TRUE)
# Confident Factor
# t-test for expertise differences
t.test(x = sri$`Confident Factor`[sri$Group == "Expert"],
y = sri$`Confident Factor`[sri$Group == "Novice"])
# Confident Factor
# effect size for expertise differences
d_sri_confi <- CohenD(x = sri$`Confident Factor`[sri$Group == "Expert"],
y = sri$`Confident Factor`[sri$Group == "Novice"],
na.rm = TRUE)
CohenD(x = sri$`Confident Factor`[sri$Group == "Expert"],
y = sri$`Confident Factor`[sri$Group == "Novice"],
na.rm = TRUE)
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = `Disruption Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.1,
#                                       height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_manual(values=c("steelblue","firebrick")) +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
dist_group_plot
ggsave(plot = dist_group_plot,
filename = "plots/dist_group_plot.png",
height = 8,
width = 8,
units = "in")
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = `Confident Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.15,
#                                       height = 0)) +
scale_fill_manual(values=c("steelblue","firebrick")) +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
confi_group_plot
ggsave(plot = confi_group_plot,
filename = "plots/confi_group_plot.png",
height = 8,
width = 8,
units = "in")
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = `Confident Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.15,
#                                       height = 0)) +
scale_fill_manual(values=c("steelblue","firebrick")) +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 18),
plot.title = element_text(size = 20,
face = "bold"),
)
confi_group_plot
ggsave(plot = confi_group_plot,
filename = "plots/confi_group_plot.png",
height = 8,
width = 8,
units = "in")
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = `Disruption Factor`)) +
geom_boxplot(mapping = aes(fill = Group)) +
# geom_point(size = 2,
#            alpha = 0.4,
#            position = position_jitter(seed = 1,
#                                       width = 0.1,
#                                       height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_manual(values=c("steelblue","firebrick")) +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 18),
plot.title = element_text(size = 20,
face = "bold"),
)
dist_group_plot
ggsave(plot = dist_group_plot,
filename = "plots/dist_group_plot.png",
height = 8,
width = 8,
units = "in")
