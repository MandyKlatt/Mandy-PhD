angle = 80))
dist_plot
Spectral
Spectral
# plotting Disruption factor
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Spectral") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 8,
angle = 80))
dist_plot
# plotting Disruption factor
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Dark2") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 8,
angle = 80))
dist_plot
# plotting Disruption factor
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Pastel1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 8,
angle = 80))
dist_plot
# plotting Disruption factor
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Pastel2") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 8,
angle = 80))
dist_plot
# plotting Disruption factor
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 8,
angle = 80))
dist_plot
# plotting Confident factor
confi_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel in dealing with this event?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80))
confi_plot
# arranging plots
grid.arrange(dist_plot, confi_plot, ncol=2, nrow =1)
# plotting Confident factor
confi_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel in dealing with this event?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80))
confi_plot
# arranging plots
grid.arrange(dist_plot, confi_plot, ncol=2, nrow =1)
dist_plot
# plotting Disruption factor
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80))
dist_plot
confi_plot
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
# define expert and novice with ifelse function
df_sjt_long$Group = ifelse(df_sjt_long$Group < 200, "Novice","Expert")
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 45))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 45))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 10,
angle = 45))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 10))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 12))
mean_plot
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disruption_Factor, Confident_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disruption_Factor, Confident_Factor)
# combine the two data frames with novice and expert
sri <- rbind(sri_expert, sri_novice)
# removing all NAs
sri_filter <- na.omit(sri)
# define expert and novice with ifelse function
sri_filter$Group = ifelse(sri_filter$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disrup <- subset.data.frame(sri_filter, select = c(Group, Event, Disruption_Factor))
sri_confi <- subset.data.frame(sri_filter, select = c(Group, Event, Confident_Factor))
# plotting Disruption factor for groups
dist_group_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(
legend.position="none",
axis.text.x = element_text(size = 15),
plot.title = element_text(size = 19, face = "bold"),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 15))
sri_disrup$Event
sri_disrup %>%
mutate(Event = factor(Event,
levels = c("chatting",
"whispering",
"heckling",
"snipping",
"drumming",
"clicking",
"looking at phone",
"head on table",
"drawing"
),
labels = c("Chatting",
"Whispering",
"Heckling",
"Snipping",
"Drumming",
"Clicking pen",
"Looking at phone",
"Head on table",
"Drawing"
)
))
# plotting Disruption factor for all disruptions
dist_plot <-
sri_disrup %>%
mutate(Event = factor(Event,
levels = c("chatting",
"whispering",
"heckling",
"snipping",
"drumming",
"clicking",
"looking at phone",
"head on table",
"drawing"
),
labels = c("Chatting",
"Whispering",
"Heckling",
"Snipping",
"Drumming",
"Clicking pen",
"Looking at phone",
"Head on table",
"Drawing"
)
)) %>%
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 90),
plot.title = element_text(size = 15, face = "bold"))
dist_plot
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.position="none",
axis.text.x = element_text(size = 11),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting confident factor for all disruptions
confi_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
