library(readxl)
Coding_SRI_novice <- read_excel("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/data/Coding_SRI_AL.xlsx")
View(Coding_SRI_novice)
library(readxl)
Coding_SRI_expert <- read_excel("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/data/Coding_SRI_expert.xlsx")
View(Coding_SRI_expert)
library(readxl)
Coding_SRI_novice <- read_excel("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/data/Coding_SRI_novice.xlsx")
View(Coding_SRI_novice)
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_expert <- read_excel(file = "data/Coding_SRI_expert.xlsx")
# read in data
sri_expert <- read_excel(file = "./data/Coding_SRI_expert.xlsx")
# read in data
sri_expert <- read_excel(file = "./data/coding_sri_expert.xlsx")
sri_expert <- read_excel(file = "./data/coding_sri_expert.xlsx")
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/sri coding")
# read in data
sri_expert <- read_excel(file = "./data/coding_sri_expert.xlsx")
# read in data
sri_expert <- read_excel(file = "/data/coding_sri_expert.xlsx")
# read in data
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
rm(Coding_SRI_expert)
rm(Coding_SRI_novice)
View(sri_expert)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
View(sri_novice)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_novice.xlsx")
View(sri_expert)
View(sri_novice)
View(sri_expert)
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
View(sri_expert)
View(sri_novice)
View(sri_expert)
View(sri_expert)
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(VP_ID, event, disturbing_factor, safety_factor)
View(sri_expert)
View(sri_novice)
sri_expert <- sri_expert %>% select(VP_ID, event, disturbing_factor, safety_factor)
View(sri_novice)
View(sri_expert)
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
sri_expert <- sri_expert %>% select(VP_ID, event, disturbing_factor, safety_factor)
View(sri_expert)
# combine the two data frames
sri <- left_join(x = sri_expert,
y = sri_novice,
by = "VP_ID")
View(sri)
rm(sri)
# combine the two data frames
sri <- rbind(sri_expert, sri_novice,by = "VP_ID")
View(sri)
# combine the two data frames
sri <- rbind(sri_expert, sri_novice)
View(sri)
?pivot
?pivot_longer
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor", "Safety Factor"),
values_to = "Rating")
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor", "Safety Factor"),
names_pattern = "(.)(.)",
values_to = "Rating")
View(sri_long)
rm(sri_long)
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor", "Safety Factor"),
names_pattern = "",
values_to = "Rating")
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor", "Safety Factor"),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = "Rating")
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor", "Safety Factor"),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = "Rating")
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor", "Safety Factor"),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = "Rating")
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = c("Disturbing Factor"),vlues_to = "Rating")
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = "Disturbing Factor",vlues_to = "Rating")
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = "Disturbing Factor",values_to = "Rating")
View(sri_long)
rm(sri_long)
# define expert and novice with ifelse function
sri$VP_ID = ifelse(sri$VP_ID < 200, "Novice","Expert")
View(sri)
View(sri)
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = "Factor", values_to = "Value")
View(sri_long)
View(sri)
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, !event, names_to = "Factor", values_to = "Value")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(VP_ID, event, disturbing_factor, safety_factor)
sri_expert <- sri_expert %>% select(VP_ID, event, disturbing_factor, safety_factor)
# combine the two data frames
sri <- rbind(sri_expert, sri_novice)
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, !event, names_to = "Factor", values_to = "Value")
# plotting mean
mean_plot <-
ggplot(data = sri,
mapping = aes(x = VP_ID,
y = "Value")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1) +
theme_cowplot()
mean_plot
library(needs)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# plotting mean
mean_plot <-
ggplot(data = sri,
mapping = aes(x = VP_ID,
y = "Value")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1) +
theme_cowplot()
mean_plot
# plotting mean
mean_plot <-
ggplot(data = sri,
mapping = aes(x = VP_ID,
y = "Value")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1) +
theme_blank()
mean_plot
# plotting mean
mean_plot <-
ggplot(data = sri,
mapping = aes(x = VP_ID,
y = "Value")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Factor`),
nrow = 1) +
theme_blank()
mean_plot
# changing from wide to long format
sri_long <- sri %>%
pivot_longer(!VP_ID, names_to = "Factor", values_to = "Value")
# plotting mean
mean_plot <-
ggplot(data = sri_long,
mapping = aes(x = VP_ID,
y = "Value")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Factor`),
nrow = 1) +
theme_blank()
mean_plot
rm(mean)
rm(mean_plot
rm(mean_plot)
rm(mean_plot)
View(sri_long)
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(VP_ID, event, disturbing_factor, safety_factor)
sri_expert <- sri_expert %>% select(VP_ID, event, disturbing_factor, safety_factor)
# combine the two data frames
sri <- rbind(sri_expert, sri_novice)
sri_disturb <- subset.data.frame(sri, select = c(VP_ID, event, disturbing_factor))
View(sri_disturb)
View(sri_disturb)
sri_safe <- subset.data.frame(sri, select = c(VP_ID, event, safe_factor))
sri_disturb <- subset.data.frame(sri, select = c(VP_ID, event, disturbing_factor))
sri_safe <- subset.data.frame(sri, select = c(VP_ID, event, safety_factor))
View(sri_safe)
# define expert and novice with ifelse function
sri_disturb$VP_ID = ifelse(sri_disturb$VP_ID < 200, "Novice","Expert")
View(sri_disturb)
sri_safe$VP_ID = ifelse(sri_safe$VP_ID < 200, "Novice","Expert")
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Event,
y = "Value")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(event),
nrow = 1) +
theme_blank()
dist_plot
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = event,
y = "safety_factor")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(event),
nrow = 1) +
theme_blank()
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = VP_ID,
y = "safety_factor")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(event),
nrow = 1) +
theme_blank()
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = event,
y = "safety_factor")) +
geom_boxplot(mapping = aes(fill = VP_ID)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(event),
nrow = 1) +
theme_blank()
dist_plot
View(sri_long)
rm(sri_long)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(group, event, disturbing_factor, safety_factor)
sri_expert <- sri_expert %>% select(group, event, disturbing_factor, safety_factor)
# combine the two data frames
sri <- rbind(sri_expert, sri_novice)
# create a new data frame
sri_disturb <- subset.data.frame(sri, select = c(group, event, disturbing_factor))
sri_safe <- subset.data.frame(sri, select = c(group, event, safety_factor))
# define expert and novice with ifelse function
sri_disturb$group = ifelse(sri_disturb$group < 200, "Novice","Expert")
sri_safe$group = ifelse(sri_safe$group < 200, "Novice","Expert")
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = event,
y = "safety_factor")) +
geom_boxplot(mapping = aes(fill = group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(event),
nrow = 1) +
theme_blank()
dist_plot
View(sri_safe)
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = group,
y = "safety_factor")) +
geom_boxplot(mapping = aes(fill = group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(event),
nrow = 1) +
theme_blank()
dist_plot
