sri[is.na(sri)] = 11
# creating a new column --> event was "seen" / "not seen"
# WARNING! ifelse() needs three parameters: test, truth value, false value
sri$Seen <- ifelse(sri$Disturbing_Factor <= 10, 'seen', ifelse(sri$Disturbing_Factor > 11, 'not seen', 'not seen'))
# define expert and novice with ifelse function
sri$Group = ifelse(sri_disturb$Group < 200, "Novice","Expert")
View(sri)
View(sri)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disturbing_Factor, Safety_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disturbing_Factor, Safety_Factor)
# combine the two data frames with novice and expert
sri <- rbind(sri_expert, sri_novice)
View(sri)
# replacing NA with 11
sri[is.na(sri)] = 11
# creating a new column --> event was "seen" / "not seen"
# WARNING! ifelse() needs three parameters: test, truth value, false value
sri$Seen <- ifelse(sri$Disturbing_Factor <= 10, 'seen', ifelse(sri$Disturbing_Factor > 11, 'not seen', 'not seen'))
View(sri)
# define expert and novice with ifelse function
sri$Group = ifelse(sri$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disturb <- subset.data.frame(sri, select = c(Group, Event, Disturbing_Factor, Seen))
sri_safe <- subset.data.frame(sri, select = c(Group, Event, Safety_Factor, Seen))
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# removing all NAs
na.omit(sri)
# removing all NAs
sri %>% drop_na ()
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disturbing_Factor, Safety_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disturbing_Factor, Safety_Factor)
# combine the two data frames with novice and expert
sri <- rbind(sri_expert, sri_novice)
# removing all NAs
sri %>% drop_na ()
View(sri)
# removing all NAs
sri %>% drop_na()
View(sri)
# removing all NAs
sri %>% drop_na(Disturbing_Factor, Safety_Factor)
View(sri)
# removing all NAs
sri %>% drop_na(Disturbing_Factor, Safety_Factor)
View(sri)
# removing all NAs
sri <- sri[!row.has.na,]
# removing all NAs
sri <- final[!row.has.na,]
# removing all NAs
sri <- na.omit(sri)
View(sri)
# create a new data frame with both factors
sri_disturb <- subset.data.frame(sri_filter, select = c(Group, Event, Disturbing_Factor))
sri_safe <- subset.data.frame(sri_filter, select = c(Group, Event, Safety_Factor))
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = "Disturbing Factor")
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = "Disturbing Factor")
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = "Disturbing Factor"))
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting safety factor
safe_plot <-
ggplot(data = sri_safe,
mapping = aes(x = Group,
y = Safety_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
safe_plot
# arraing plots
grid_arrange_shared_legend(dist_plot, safe_plot
nrow = 2, ncol = 1, position = "right")
# arraing plots
grid_arrange_shared_legend(dist_plot, safe_plot,
nrow = 2, ncol = 1, position = "right")
# arraing plots
grid_arrange(dist_plot, safe_plot,
nrow = 2, ncol = 1, position = "right")
?grid_arrange
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 1))
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 1))+
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 1))+
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10))+
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disturbing was the event for you?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting safety factor
safe_plot <-
ggplot(data = sri_safe,
mapping = aes(x = Group,
y = Safety_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel in dealing with this event?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
safe_plot
# arraing plots
grid.arrange(dist_plot, safe_plot,
nrow = 2, ncol = 1, position = "right")
# arraing plots
grid.arrange(dist_plot, safe_plot,
nrow = 2, ncol = 1)
?grid.arrage
# arraing plots
grid_arrange_shared_legend(dist_plot, safe_plot,
nrow = 2, ncol = 1)
# arraing plots
grid_arrange_shared_legend(dist_plot, safe_plot,
nrow = 1, ncol = 1)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
library(needs)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disturbing_Factor, Safety_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disturbing_Factor, Safety_Factor)
# combine the two data frames with novice and expert
sri <- rbind(sri_expert, sri_novice)
# removing all NAs
sri_filter <- na.omit(sri)
# define expert and novice with ifelse function
sri_filter$Group = ifelse(sri_filter$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disturb <- subset.data.frame(sri_filter, select = c(Group, Event, Disturbing_Factor))
sri_safe <- subset.data.frame(sri_filter, select = c(Group, Event, Safety_Factor))
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disturbing was the event for you?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting safety factor
safe_plot <-
ggplot(data = sri_safe,
mapping = aes(x = Group,
y = Safety_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel in dealing with this event?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
safe_plot
# arraing plots
grid_arrange_shared_legend(dist_plot, safe_plot,
nrow = 1, ncol = 1)
# arraing plots
ggarrange(dist_plot, safe_plot,
nrow = 1, ncol = 1)
?ggarrange
# arraning plots
plot_grid(dist_plot, safe_plot,
nrow = 1, ncol = 1)
# arraning plots
plot_grid(dist_plot, safe_plot,
nrow = 1, ncol = 1)
# arraning plots
plot_grid(dist_plot, safe_plot)
# arraning plots
plot_grid(dist_plot, safe_plot, ncol = 2, nrow = 1))
# arraning plots
plot_grid(dist_plot, safe_plot, ncol = 2, nrow = 1)
plot_grid(dist_plot, safe_plot, ncol = 2, nrow = 1)
# arraning plots
plot_grid(dist_plot, safe_plot, labels=c("A", "B"), ncol = 2, nrow = 1)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra)
library(needs)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra)
# arraning plots
grid.arrange(dist_plot, safe_plot, ncol=2, nrow =2)
# arraning plots
grid.arrange(dist_plot, safe_plot, ncol=2, nrow =1)
library(needs)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disturbing_Factor, Confident_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disturbing_Factor, Confident_Factor)
# combine the two data frames with novice and expert
sri <- rbind(sri_expert, sri_novice)
# removing all NAs
sri_filter <- na.omit(sri)
# define expert and novice with ifelse function
sri_filter$Group = ifelse(sri_filter$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disturb <- subset.data.frame(sri_filter, select = c(Group, Event, Disturbing_Factor))
sri_confi <- subset.data.frame(sri_filter, select = c(Group, Event, Confident_Factor))
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disturbing was the event for you?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting Confident factor
confi_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel in dealing with this event?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
confi_plot
# arraning plots
grid.arrange(dist_plot, confi_plot, ncol=2, nrow =1)
