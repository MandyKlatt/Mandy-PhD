) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH")
ggplot(data = filter(df_cappa_start,
TOI != "Lesson"),
mapping = aes(x = Start_of_interval_RD,
y = Start_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Start coded by RD",
y = "Start coded by EH"
)
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
)
needs(tidyverse,
psych,
ggthemes
)
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_few()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_wsj()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_tufte()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_solarized_2()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_solarized()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_economist()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_minimal()
ggplot(data = filter(df_cappa_start,
TOI != "Lesson"),
mapping = aes(x = Start_of_interval_RD,
y = Start_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Start coded by RD",
y = "Start coded by EH",
title = "Inter-coder reliability"
) +
theme_minimal()
library(needs)
needs(tidyverse,
psych,
ggthemes
)
df_EH <- read_tsv(file = "data/03_03_EH_ProVisioNET_study_glasses Metrics_interval-based.tsv"
)
df_RD <- read_tsv(file = "data/03_03_RD_ProVisioNET_study_glasses Metrics_interval-based.tsv"
)
df_EH <- df_EH %>%
select(TOI, Duration_of_interval, Start_of_interval)
df_RD <- df_RD %>%
select(TOI, Duration_of_interval, Start_of_interval)
df_cappa_start <- matrix(ncol = 3,
nrow = 8)
View(df_cappa_start)
colnames(df_cappa_start) <- c("TOI","Start_of_interval_EH","Start_of_interval_RD")
View(df_cappa_start)
df_cappa_start <- as_tibble(df_cappa_start)
View(df_cappa_start)
TOI_names <- c("Calibration_phase","Clicking_pen","Drumming_with_hands",
"Head_on_table","Heckling","Lesson","Snipping_with_fingers",
"Whispering")
df_cappa_start$TOI <- TOI_names
View(df_EH)
# EH Start TOI
for (i in TOI_names) {
val <- df_EH$Start_of_interval[df_EH == i]
df_cappa_start$Start_of_interval_EH[df_cappa_start$TOI == i] <- val
}
View(df_cappa_start)
# EH Start TOI
for (i in TOI_names) {
val <- df_EH$Start_of_interval[df_EH$TOI == i]
df_cappa_start$Start_of_interval_EH[df_cappa_start$TOI == i] <- val
}
View(df_cappa_start)
df_EH$TOI == i
df_EH$Start_of_interval
View(df_EH)
# RD Start TOI
for (i in TOI_names) {
val <- df_RD$Start_of_interval[df_RD == i]
df_cappa_start$Start_of_interval_RD[df_cappa_start$TOI == i] <- val
}
df_cappa_dur <- matrix(ncol = 3,
nrow = 8)
colnames(df_cappa_dur) <- c("TOI","Duration_of_interval_EH","Duration_of_interval_RD")
df_cappa_dur <- as_tibble(df_cappa_dur)
TOI_names <- c("Calibration_phase","Clicking_pen","Drumming_with_hands",
"Head_on_table","Heckling","Lesson","Snipping_with_fingers",
"Whispering")
df_cappa_dur$TOI <- TOI_names
# EH Duration TOI
for (i in TOI_names) {
val <- df_EH$Duration_of_interval[df_EH == i]
df_cappa_dur$Duration_of_interval_EH[df_cappa_dur$TOI == i] <- val
}
# RD Duration TOI
for (i in TOI_names) {
val <- df_RD$Duration_of_interval[df_RD == i]
df_cappa_dur$Duration_of_interval_RD[df_cappa_dur$TOI == i] <- val
}
df_cappa_dur$Duration_of_interval_EH <- round(df_cappa_dur$Duration_of_interval_EH/1000,
digits = 2
)
df_cappa_dur$Duration_of_interval_RD <- round(df_cappa_dur$Duration_of_interval_RD/1000,
digits = 2
)
df_cappa_start$Start_of_interval_EH <- round(df_cappa_start$Start_of_interval_EH/1000,
digits = 2
)
df_cappa_start$Start_of_interval_RD <- round(df_cappa_start$Start_of_interval_RD/1000,
digits = 2
)
fun_1 <- function(x) {
y <- x
return(y)
}
cor.test(x = df_cappa_dur$Duration_of_interval_EH,
y = df_cappa_dur$Duration_of_interval_RD,
method = "pearson")
ICC(x = select(df_cappa_dur,
Duration_of_interval_EH,
Duration_of_interval_RD
)
)
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_minimal()
cor.test(x = df_cappa_dur$Duration_of_interval_EH,
y = df_cappa_dur$Duration_of_interval_RD,
method = "pearson")
ICC(x = select(df_cappa_dur,
Duration_of_interval_EH,
Duration_of_interval_RD
)
)
ggplot(data = df_cappa_dur,
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_minimal()
ggplot(data = filter(df_cappa_dur,
TOI != "Lesson"),
mapping = aes(x = Duration_of_interval_RD,
y = Duration_of_interval_EH
)
) +
geom_point(size = 2) +
geom_abline(intercept = 0,
slope = 1,
color = "red",
linetype = 3
) +
labs(x = "Duration coded by RD",
y = "Duration coded by EH",
title = "Inter-coder reliability"
) +
theme_minimal()
library(needs)
needs(tidyverse, psych, readxl)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_expertise_visual_engagement_JH.xlsx")
#delete NAs
r1 <- na.omit(r1)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_expertise_visual_engagement_FP.xlsx")
# different number of variables in r1 and r2 --> select all variables in r2 till 986
r2new <- r2[c(1:986)]
# merge two data frames vertically with rbind
r3 <- rbind(r1, r2new)
# add a new column to differentiate rater1 and rater2 in wide format
r3$Added_Column <- c("rater1", "rater2")
#rename column
r3 <- r3 %>% rename(rater = Added_Column)
# relocate the column to the first place
r3 <- r3 %>% relocate(rater)
# create a new df r3 with only the ratings
r3 <- r3[-c(2:3)]
# wide to long format
r3_long <- gather(r3, timestamp, value, 2:985)
View(r3_long)
View(r3)
View(r3)
View(r3_long)
View(r3)
r3_long <- pivot_longer(r3)
?pivot_longer
r3_long <- pivot_longer(r3,
cols = !rater
)
View(r3_long)
r3_long <- pivot_longer(r3,
cols = rater
)
View(r3_long)
r3_long <- pivot_wider(r3,
cols = !rater
)
?pivot_wider
r3_long <- pivot_wider(r3)
View(r3_long)
str(r3)
r3_long <- pivot_longer(r3,
cols = everything())
r3_long <- pivot_longer(r3,
cols = !rater)
r3$`00:00:01` <- as.numeric(r3$`00:00:01`)
r3_long <- pivot_longer(r3,
cols = !rater)
View(r3_long)
r3_long <- pivot_longer(r3,
cols = everything())
r3 <- select(r3,
!rater)
r3_long <- pivot_longer(r3,
cols = everything())
View(r3_long)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_expertise_visual_engagement_JH.xlsx")
#delete NAs
r1 <- na.omit(r1)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_expertise_visual_engagement_FP.xlsx")
# different number of variables in r1 and r2 --> select all variables in r2 till 986
r2new <- r2[c(1:986)]
# merge two data frames vertically with rbind
r3 <- rbind(r1, r2new)
# add a new column to differentiate rater1 and rater2 in wide format
r3$Added_Column <- c("rater1", "rater2")
#rename column
r3 <- r3 %>% rename(rater = Added_Column)
# relocate the column to the first place
r3 <- r3 %>% relocate(rater)
# create a new df r3 with only the ratings
r3 <- r3[-c(2:3)]
r3$`00:00:01` <- as.numeric(r3$`00:00:01`)
r3_long <- pivot_longer(r3,
cols = everything()
)
r3_long <- pivot_longer(r3,
cols = !rater
)
ncols(r3)
ncols(r3)
ncol(r3)
r3_long[1:(ncols-1),]
r3_long[1:(ncol-1),]
ncol(r3)-1
r3_long[1:ncol-1,]
r3_long[1:ncol(r3)-1,]
r3_long_1 <- r3_long[1:ncol(r3)-1,]
r3_long_2 <- r3_long[ncol(r3)-1:nrow(r3_long)/2,]
nrow(r3_long)
nrow(r3_long)/2
r3_long_2 <- r3_long[ncol(r3)-1:nrow(r3_long)/2,]
r3_long[!1:ncol(r3)-1,]
r3_long_1 <- r3_long[1:ncol(r3)-1,]
View(r3_long_1)
r3_long_1$rater1 <- r3_long_1$value
r3_long[-(1:ncol(r3)-1),]
r3_long_2 <- r3_long[-(1:ncol(r3)-1),]
View(r3_long_2)
# wide to long format
r3_long <- gather(r3, timestamp, value, 2:985)
r3_long_wide <- pivot_wider(r3_long,
names_from = rater)
View(r3_long_wide)
View(r3_long_wide)
?gather
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
df_AP_01 <- read_tsv(file = "data/01_01_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
df_MK_01 <- read_tsv(file = "data/01_01_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
df_AP_02 <- read_tsv(file = "data/02_02_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
df_MK_02 <- read_tsv(file = "data/02_02_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
df_AP_01 <- df_AP_01 %>%
select(TOI, Duration_of_interval)
df_MK_01 <- df_MK_01 %>%
select(TOI, Duration_of_interval)
# Duration
df_cappa_dur <- matrix(ncol = 3,
nrow = 11)
colnames(df_cappa_dur) <- c("TOI","Duration_of_interval_AP_01","Duration_of_interval_MK_01")
df_cappa_dur <- as_tibble(df_cappa_dur)
TOI_names <- c("Calibration_phase","Chatting_with_neighbour", "Clicking_pen","Drawing", "Drumming_with_hands",
"Head_on_table", "Looking_at_phone", "Heckling","Lesson","Snipping_with_fingers",
"Whispering")
df_cappa_dur$TOI <- TOI_names
# AP Duration TOI
for (i in TOI_names) {
val <- df_AP_01$Duration_of_interval[df_AP_01 == i]
df_cappa_dur$Duration_of_interval_AP_01[df_cappa_dur$TOI == i] <- val
}
# MK Duration TOI
for (i in TOI_names) {
val <- df_MK_01$Duration_of_interval[df_MK_01 == i]
df_cappa_dur$Duration_of_interval_MK_01[df_cappa_dur$TOI == i] <- val
}
# In seconds
df_cappa_dur$Duration_of_interval_AP_01 <- round(df_cappa_dur$Duration_of_interval_AP_01/1000,
digits = 2
)
df_cappa_dur$Duration_of_interval_MK_01 <- round(df_cappa_dur$Duration_of_interval_MK_01/1000,
digits = 2
)
View(df_cappa_dur)
fun_1 <- function(x) {
y <- x
return(y)
}
df_cappa_dur$TOI_class[df_cappa_dur$TOI == "Calibration_phase"] <- "Calibration_phase"
df_cappa_dur$TOI_class[df_cappa_dur$TOI == "Chatting_with_neighbour" |
df_cappa_dur$TOI == "Heckling" |
df_cappa_dur$TOI == "Whispering"] <- "Calibration_phase"
df_cappa_dur$TOI_class[df_cappa_dur$TOI == "Chatting_with_neighbour" |
df_cappa_dur$TOI == "Heckling" |
df_cappa_dur$TOI == "Whispering"] <- "Verbal_disruption"
df_cappa_dur$TOI_class[df_cappa_dur$TOI == "Head_on_table" |
df_cappa_dur$TOI == "Looking_at_phone" |
df_cappa_dur$TOI == "Drawing"] <- "leg_of_eagerness"
df_cappa_dur$TOI_class[df_cappa_dur$TOI == "Lesson"] <- "Lesson"
df_cappa_dur$TOI_class[is.na(df_cappa_dur$TOI_class)] <- "Agitation"
df_cappa_dur$TOI_class <- as_factor(df_cappa_dur$TOI_class)
df_cappa_dur_aggr <- df_cappa_dur %>%
group_by(TOI_class) %>%
summarise(Duration_mean_AP = mean(Duration_of_interval_AP_01),
Duration_mean_MK = mean(Duration_of_interval_AP_01)
)
ungroup(df_cappa_dur_aggr)
View(df_cappa_dur_aggr)
group_by(TOI_class)
df_cappa_dur %>%
group_by(TOI_class)
df_cappa_dur
df_cappa_dur_aggr <- df_cappa_dur %>%
group_by(TOI_class) %>%
summarise(Duration_mean_AP = mean(Duration_of_interval_AP_01),
Duration_mean_MK = mean(Duration_of_interval_MK_01)
)
df_cappa_dur_aggr
