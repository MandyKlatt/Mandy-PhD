r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number)
r2 <- r2 %>% select(number)
View(r1)
View(r2)
View(r1)
View(r2)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number)
r2 <- r2 %>% select(ID, number)
# fill in non-overlapping columns with NAs
r1[setdiff(names(r2), names(r1))] <- NA
r2[setdiff(names(r1), names(r2))] <- NA
View(r1)
r3 <- bind_rows(r1, r2)
View(r3)
# sample data, variable c is in df1, variable d is in df2
df1 = data.frame(a=1:5, b=6:10, d=month.name[1:5])
df2 = data.frame(a=6:10, b=16:20, c = letters[8:12])
View(df1)
View(df2)
View(df1)
View(df2)
View(df1)
View(df2)
# fill in non-overlapping columns with NAs
df1[setdiff(names(df2), names(df1))] <- NA
df2[setdiff(names(df1), names(df2))] <- NA
View(df1)
View(df2)
View(r2)
View(r3)
View(df2)
View(df1)
View(r1)
View(r2)
r3 <- bind_rows(r2$number, r2$number) %>%
rename(rating1 = ...1,
rating2 = ...2)
r3 <- bind_rows(r2$number, r2$number)
r3 <- bind_rows(r1$number, r2$number) %>%
rename(rating1 = ...1,
rating2 = ...2)
r3 <- bind_rows(r1$number, r2$number)
r3 <- bind_rows(r1, r2)
View(r3)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number)
r2 <- r2 %>% select(number)
r3 <- bind_rows(r1, r2)
View(r3)
r1$number <- as.numeric(r1$number)
r2$number <- as.numeric(r2$number)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number)
r2 <- r2 %>% select(ID, number)
r1$number <- as.numeric(r1$number)
r2$number <- as.numeric(r2$number)
# merge two data frames vertically
r3 <- bind_cols(r2$number, r2$number) %>%
rename(rating1 = ...1,
rating2 = ...2)
View(r1)
View(r2)
r3 <- r1 %>%
full_join(r2, by = c("ID"))
View(r3)
r3 <- r1 %>%
full_join(r2, by = c("ID", "number"))
View(r3)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number)
r2 <- r2 %>% select(ID, number)
r1$number <- as.numeric(r1$number)
r2$number <- as.numeric(r2$number)
r3 <- r1 %>%
full_join(r2, by = c("ID"))
View(r3)
r3 <- cbindX(r1, r2)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number1)
r2 <- r2 %>% select(ID, number2)
View(r1)
View(r2)
r3 <- r1 %>%
full_join(r2, by = c("ID"))
View(r3)
rm(df1)
rm(df2)
rm(r3)
# merge two data frames vertically
r3 <- bind_cols(r2$number1, r2$number2) %>%
rename(rating1 = ...1,
rating2 = ...2)
r3 <- bind_cols(r2$number1, r2$number2)
# merge two data frames vertically
r3 <- bind_cols(r1$number1, r2$number2)
View(r3)
#add column to each data frame with row number
r1$number1 <- row.names(r1)
View(r1)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number1)
r2 <- r2 %>% select(number2)
View(r1)
View(r2)
#add column to each data frame with row number
r1$number <- row.names(r1)
View(r1)
r2$number <- row.names(r2)
r3 <- merge(r1, r2, by = "number", all = TRUE)
View(r3)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number1)
r2 <- r2 %>% select(number2)
View(r1)
r1$number <- as.numeric(r1$number)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number1)
r2 <- r2 %>% select(number2)
r1$number <- as.numeric(r1$number)
#add column to each data frame with row number
r1$number <- row.names(r1)
View(r1)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number1)
r2 <- r2 %>% select(ID, number2)
#add column to each data frame with row number
r1$number <- row.names(r1)
r2$number <- row.names(r2)
View(r1)
View(r2)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "ID", all = TRUE)
View(r3)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "number", all = TRUE)
View(r3)
# install.packages
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
coding_data_r1 <-read_tsv ("./data/03_03_EH_ProVisioNET_study_glasses Metrics_event-based.tsv",
locale = locale(decimal_mark = ","))
View(coding_data_r1)
# filter only rows lesson
r1 <- coding_data_r1 %>% filter(TOI == "Lesson")
# select variable AOI + Hit_proportion
r1 <- r1 %>% select(AOI, Hit_proportion)
View(coding_data_r1)
View(r1)
#delete NAs
r1 <- na.omit(r1)
# round Hit_proportion to 1
r1$Hit_proportion <- round(r1$Hit_proportion,
digits = 0)
# group data by AOI and summarise Hit_prop
r1_aggr <- group_by(.data = r1,
AOI) %>% summarise(Hit_count = length(Hit_proportion))
View(r1_aggr)
# read in data from rater1 while specifying locale allows to set ","
coding_data_r2 <-read_tsv ("./data/03_03_RD_ProVisioNET_study_glasses Metrics_event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r2 <- coding_data_r2 %>% filter(TOI == "Lesson")
# select variable AOI + Hit_proportion
r2 <- r2 %>% select(AOI, Hit_proportion)
#delete NAs
r2 <- na.omit(r2)
# round Hit_proportion to 1
r2$Hit_proportion <- round(r2$Hit_proportion,
digits = 0)
# group data by AOI and summarise Hit_prop
r2_aggr <- group_by(.data = r2,
AOI) %>% summarise(Hit_count = length(Hit_proportion))
View(r2_aggr)
View(r1_aggr)
View(r2_aggr)
r1_filter <- r1_aggr %>% filter(AOI != "Board_Screen",
AOI != "Disruptive_Person,students_material",
AOI != "Material",
AOI != "students_material")
r1_filter
r1_filter <- r1_aggr %>% filter(AOI != "Board_Screen",
AOI != "Disruptive_Person,students_material",
AOI != "Material",
AOI != "students_material")
# read in data from rater1 while specifying locale allows to set ","
coding_data_r1 <-read_tsv ("./data/03_03_EH_ProVisioNET_study_glasses Metrics_event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r1 <- coding_data_r1 %>% filter(TOI == "Lesson")
# select variable AOI + Hit_proportion
r1 <- r1 %>% select(AOI, Hit_proportion)
#delete NAs
r1 <- na.omit(r1)
# round Hit_proportion to 1
r1$Hit_proportion <- round(r1$Hit_proportion,
digits = 0)
# group data by AOI and summarise Hit_prop
r1_aggr <- group_by(.data = r1,
AOI) %>% summarise(Hit_count = length(Hit_proportion))
# read in data from rater1 while specifying locale allows to set ","
coding_data_r2 <-read_tsv ("./data/03_03_RD_ProVisioNET_study_glasses Metrics_event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r2 <- coding_data_r2 %>% filter(TOI == "Lesson")
# select variable AOI + Hit_proportion
r2 <- r2 %>% select(AOI, Hit_proportion)
#delete NAs
r2 <- na.omit(r2)
# round Hit_proportion to 1
r2$Hit_proportion <- round(r2$Hit_proportion,
digits = 0)
# group data by AOI and summarise Hit_prop
r2_aggr <- group_by(.data = r2,
AOI) %>% summarise(Hit_count = length(Hit_proportion))
r1_filter <- r1_aggr %>% filter(AOI != "Board_Screen",
AOI != "Disruptive_Person,students_material",
AOI != "Material",
AOI != "students_material")
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number1)
r2 <- r2 %>% select(ID, number2)
r1$number <- as.numeric(r1$number1)
r2$number <- as.numeric(r2$number2)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "ID")
View(r3)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "ID", all = TRUE)
View(r3)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number1)
r2 <- r2 %>% select(ID, number2)
r1$number1 <- as.numeric(r1$number1)
r2$number2 <- as.numeric(r2$number2)
View(r1)
View(r2)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "ID", all = TRUE)
View(r3)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "number1", all = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number)
r2 <- r2 %>% select(ID, number)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "number", all = TRUE)
View(r3)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number)
r2 <- r2 %>% select(number)
r1$number1 <- as.numeric(r1$number1)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "number", all = TRUE)
View(r3)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number)
r2 <- r2 %>% select(ID, number)
View(coding_data_r1)
View(r2_aggr)
View(r1)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number) %>%
na.omit(r1)
r2 <- r2 %>% select(ID, number) %>%
na.omit(r2)
View(r1)
r1$number <- as.numeric(r1$number)
r2$number <- as.numeric(r2$number)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "ID")
View(r3)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_handlungsalternativen_JG.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_handlungsalternativen_MK.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(ID, number) %>%
na.omit(r1)
r2 <- r2 %>% select(ID, number) %>%
na.omit(r2)
r1$number <- as.numeric(r1$number)
r2$number <- as.numeric(r2$number)
#merge data frames
#"all = TRUE" will mean that NA values will be added whenever there is no match
r3 <- merge(r1, r2, by = "ID")
#################### Percentage Agreement ##############################
agree(r3, tolerance = 1)
View(r3)
r3 <- bind_cols(r1$number, r2$number) %>%
rename(rating1 = ...1,
rating2 = ...2)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number) %>%
na.omit(r1)
r2 <- r2 %>% select(number) %>%
na.omit(r2)
r1$number <- as.numeric(r1$number)
r2$number <- as.numeric(r2$number)
r3 <- bind_cols(r1$number, r2$number) %>%
rename(rating1 = ...1,
rating2 = ...2)
r3 <- bind_cols(r1$number, r2$number)
View(r3)
r3 <- bind_cols(r1$number, r2$number) %>%
rename(rating1 = ...1,
rating2 = ...2)
r3 <- bind_cols(r1$number, r2$number)
View(r3)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 1)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 0)
#################### CohenKappa ##############################
kappa <- psych::cohen.kappa(x = as.matrix(r3))
kappa
r4 <-read_excel ("./data/coding_handlungsalternativen_JG_MK_nur_ratings.xlsx", col_names = TRUE)
View(r4)
?subset
View(r4)
r4 <- subset(r4, select = c(code1, code2))
View(r4)
kappa <- psych::cohen.kappa(x = as.matrix(r4))
kappa
agree(r4, tolerance = 0)
kappa
# install needed packages
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
irr,
readxl,
plyr)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_reactions_MK.xlsx", col_names = TRUE)
View(r1)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_reactions_GS.xlsx", col_names = TRUE)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(number) %>%
na.omit(r1)
r1$code <- as.numeric(r1$code)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(code) %>%
na.omit(r1)
r2 <- r2 %>% select(code) %>%
na.omit(r2)
r1$code <- as.numeric(r1$code)
r2$code <- as.numeric(r2$code)
r3 <- bind_cols(r1$code, r2$code)
View(r3)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 0)
r4 <- subset(r4, select = c(code1, code2))
#################### CohenKappa ##############################
kappa <- psych::cohen.kappa(x = as.matrix(r3))
View(kappa)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_reactions_MK.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_reactions_GS.xlsx", col_names = TRUE)
View(r1)
View(r2)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(code) %>%
na.omit(r1)
r2 <- r2 %>% select(code) %>%
na.omit(r2)
r1$code <- as.numeric(r1$code)
r2$code <- as.numeric(r2$code)
r3 <- bind_cols(r1$code, r2$code)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 0)
#################### CohenKappa ##############################
kappa <- psych::cohen.kappa(x = as.matrix(r3))
View(kappa)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 0)
#################### CohenKappa ##############################
kappa <- psych::cohen.kappa(x = as.matrix(r3))
View(kappa)
psych::cohen.kappa(x = as.matrix(r3))
View(kappa)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_reactions_MK.xlsx", col_names = TRUE)
# install needed packages
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
irr,
readxl,
plyr)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
r1 <-read_excel ("./data/coding_reactions_MK.xlsx", col_names = TRUE)
# read in data from rater1 while specifying locale allows to set ","
r2 <-read_excel ("./data/coding_reactions_GS.xlsx", col_names = TRUE)
# read in data from two ratings
r3 <-read_excel ("./data/coding_handlungsalternativen_JG_MK_nur_ratings.xlsx", col_names = TRUE) %>%
select(code1, code2)
# filter relevant rows and select relevant columns
r1 <- r1 %>% select(code) %>%
na.omit(r1)
r2 <- r2 %>% select(code) %>%
na.omit(r2)
r1$code <- as.numeric(r1$code)
r2$code <- as.numeric(r2$code)
r3 <- bind_cols(r1$code, r2$code)
# read in data from two ratings
r3 <-read_excel ("./data/coding_handlungsalternativen_JG_MK_nur_ratings.xlsx", col_names = TRUE) %>%
select(code1, code2)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 1)
#################### Percentage Agreement ##############################
agree(r3, tolerance = 1)
r4 <- subset(r4, select = c(code1, code2))
kappa <- psych::cohen.kappa(x = as.matrix(r3))
psych::cohen.kappa(x = as.matrix(r3))
View(r3)
# read in data from two ratings
r3 <-read_excel ("./data/coding_handlungsalternativen_JG_MK_nur_ratings.xlsx", col_names = TRUE) %>%
select(code1, code2)
View(r3)
# read in data from two ratings
r3 <-read_excel ("./data/coding_handlungsalternativen_JG_MK_nur_ratings.xlsx", col_names = TRUE) %>%
select(code1, code2)
View(r3)
r3 <-read_excel ("./data/coding_handlungsalternativen_JG_MK_nur_ratings.xlsx", col_names = TRUE)
View(r3)
