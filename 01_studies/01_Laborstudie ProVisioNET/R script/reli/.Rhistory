y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks = element_blank())
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank()),
axis.text.x = element_text("Factes of Classroom Management"))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text("Factes of Classroom Management"))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_text("Factes of Classroom Management"),
axis.ticks.x = element_blank())
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mean_plot
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra)
AOI_AP_01 <- read_tsv(file = "data/01_01_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
AOI_MK_01 <- read_tsv(file = "data/01_01_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
AOI_AP_04 <- read_tsv(file = "data/04_04_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
AOI_MK_04 <- read_tsv(file = "data/04_04_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv")
# select relevant columns
AOI_AP_01 <- AOI_AP_01 %>%
select(TOI,
starts_with("Total_duration_of_fixation"))
AOI_MK_01 <- AOI_MK_01 %>%
select(TOI,
starts_with("Total_duration_of_fixation"))
AOI_AP_04 <- AOI_AP_04 %>%
select(TOI,
starts_with("Total_duration_of_fixation"))
AOI_MK_04 <- AOI_MK_04 %>%
select(TOI,
starts_with("Total_duration_of_fixation"))
# filter only for TOIs
AOI_AP_01 <- AOI_AP_01 %>%
filter(  TOI == "Chatting_with_neighbour" |
TOI == "Clicking_pen" |
TOI == "Drawing" |
TOI == "Drumming_with_hands" |
TOI == "Head_on_table" |
TOI == "Looking_at_phone" |
TOI == "Heckling"|
TOI == "Lesson" |
TOI == "Snipping_with_fingers" |
TOI == "Whispering" |
TOI == "Entire Recording")
AOI_MK_01 <- AOI_MK_01 %>%
filter(  TOI == "Chatting_with_neighbour" |
TOI == "Clicking_pen" |
TOI == "Drawing" |
TOI == "Drumming_with_hands" |
TOI == "Head_on_table" |
TOI == "Looking_at_phone" |
TOI == "Heckling"|
TOI == "Lesson" |
TOI == "Snipping_with_fingers" |
TOI == "Whispering" |
TOI == "Entire Recording")
AOI_AP_04 <- AOI_AP_04 %>%
filter(  TOI == "Chatting_with_neighbour" |
TOI == "Clicking_pen" |
TOI == "Drawing" |
TOI == "Drumming_with_hands" |
TOI == "Head_on_table" |
TOI == "Looking_at_phone" |
TOI == "Heckling"|
TOI == "Lesson" |
TOI == "Snipping_with_fingers" |
TOI == "Whispering"|
TOI == "Entire Recording")
AOI_MK_04 <- AOI_MK_04 %>%
filter(  TOI == "Chatting_with_neighbour" |
TOI == "Clicking_pen" |
TOI == "Drawing" |
TOI == "Drumming_with_hands" |
TOI == "Head_on_table" |
TOI == "Looking_at_phone" |
TOI == "Heckling"|
TOI == "Lesson" |
TOI == "Snipping_with_fingers" |
TOI == "Whispering"|
TOI == "Entire Recording")
# create new column names that give total duration of looking at all AOIs
AOI_AP_01 <- AOI_AP_01  %>%
rename (Anna = Total_duration_of_fixations.Anna,
Bianca = Total_duration_of_fixations.Bianca,
Carl_a = `Total_duration_of_fixations.Carl(a)`,
Disruptive_Person = Total_duration_of_fixations.Disruptive_Person,
Board_Screen = Total_duration_of_fixations.Board_Screen,
Classroom_Others = Total_duration_of_fixations.Classroom_Others,
Material = Total_duration_of_fixations.Material,
Nametag_Anna = Total_duration_of_fixations.Nametag_Anna,
Nametag_Bianca = Total_duration_of_fixations.Nametag_Bianca,
Nametage_Carl_a = `Total_duration_of_fixations.Nametag_Carl(a)`)
AOI_MK_01 <- AOI_MK_01  %>%
rename (Anna = Total_duration_of_fixations.Anna,
Bianca = Total_duration_of_fixations.Bianca,
Carl_a = `Total_duration_of_fixations.Carl(a)`,
Disruptive_Person = Total_duration_of_fixations.Disruptive_Person,
Board_Screen = Total_duration_of_fixations.Board_Screen,
Classroom_Others = Total_duration_of_fixations.Classroom_Others,
Teacher_Material = Total_duration_of_fixations.Material_Teacher,
Students_Material = Total_duration_of_fixations.Material_Students,
Nametag_Anna = Total_duration_of_fixations.Nametag_Anna,
Nametag_Bianca = Total_duration_of_fixations.Nametag_Bianca,
Nametage_Carl_a = `Total_duration_of_fixations.Nametag_Carl(a)`)
AOI_AP_04 <- AOI_AP_04  %>%
rename (Anna = Total_duration_of_fixations.Anna,
Bianca = Total_duration_of_fixations.Bianca,
Carl_a = `Total_duration_of_fixations.Carl(a)`,
Disruptive_Person = Total_duration_of_fixations.Disruptive_Person,
Board_Screen = Total_duration_of_fixations.Board_Screen,
Classroom_Others = Total_duration_of_fixations.Classroom_Others,
Material = Total_duration_of_fixations.Material,
Nametag_Anna = Total_duration_of_fixations.Nametag_Anna,
Nametag_Bianca = Total_duration_of_fixations.Nametag_Bianca,
Nametage_Carl_a = `Total_duration_of_fixations.Nametag_Carl(a)`)
AOI_MK_04 <- AOI_MK_04  %>%
rename (Anna = Total_duration_of_fixations.Anna,
Bianca = Total_duration_of_fixations.Bianca,
Carl_a = `Total_duration_of_fixations.Carl(a)`,
Disruptive_Person = Total_duration_of_fixations.Disruptive_Person,
Board_Screen = Total_duration_of_fixations.Board_Screen,
Classroom_Others = Total_duration_of_fixations.Classroom_Others,
Students_Material = Total_duration_of_fixations.Students_material,
Teacher_Material = Total_duration_of_fixations.Teacher_material,
Nametag_Anna = Total_duration_of_fixations.Nametag_Anna,
Nametag_Bianca = Total_duration_of_fixations.Nametag_Bianca,
Nametage_Carl_a = `Total_duration_of_fixations.Nametag_Carl(a)`)
# replace NAs with 0
AOI_AP_01 <- AOI_AP_01 %>%
mutate_all(~replace(., is.na(.), 0))
AOI_AP_04 <- AOI_AP_04 %>%
mutate_all(~replace(., is.na(.), 0))
AOI_MK_01 <- AOI_MK_01 %>%
mutate_all(~replace(., is.na(.), 0))
AOI_MK_04 <- AOI_MK_04 %>%
mutate_all(~replace(., is.na(.), 0))
# create data set of total durations in long format for plotting --> for later
AOI_AP_01_long <- gather(AOI_AP_01, TOI, Duration)
AOI_MK_01_long <- gather(AOI_MK_01, TOI, Duration)
AOI_AP_04_long <- gather(AOI_AP_04, TOI, Duration)
AOI_MK_04_long <- gather(AOI_MK_04, TOI, Duration)
# create a new column with name sum_aois that gives the sum of looking at all AOIs
AOI_AP_01 <- AOI_AP_01  %>% mutate(Sum_AOI = Anna +
Bianca +
Carl_a +
Disruptive_Person +
Board_Screen +
Classroom_Others +
Material +
Nametag_Anna +
Nametag_Bianca +
Nametage_Carl_a)
AOI_MK_01 <- AOI_MK_01  %>% mutate(Sum_AOI = Anna +
Bianca +
Carl_a +
Disruptive_Person +
Board_Screen +
Classroom_Others +
Teacher_Material +
Students_Material +
Nametag_Anna +
Nametag_Bianca +
Nametage_Carl_a)
AOI_AP_04 <- AOI_AP_04  %>% mutate(Sum_AOI = Anna +
Bianca +
Carl_a +
Disruptive_Person +
Board_Screen +
Classroom_Others +
Material +
Nametag_Anna +
Nametag_Bianca +
Nametage_Carl_a)
AOI_MK_04 <- AOI_MK_04  %>% mutate(Sum_AOI = Anna +
Bianca +
Carl_a +
Disruptive_Person +
Board_Screen +
Classroom_Others +
Teacher_Material +
Students_Material +
Nametag_Anna +
Nametag_Bianca +
Nametage_Carl_a)
# create new columns that give proportion of the duration of looking at all AOIs
# the proportion is the relative duration divided by total duration
prop_AP_01 <- AOI_AP_01  %>%
mutate(Anna = Anna/Sum_AOI)   %>%
mutate(Bianca = Bianca/Sum_AOI)   %>%
mutate (Carl_a = Carl_a/Sum_AOI) %>%
mutate(Disruptive_Person = Disruptive_Person/Sum_AOI)   %>%
mutate(Board_Screen = Board_Screen/Sum_AOI) %>%
mutate(Classroom_Others = Classroom_Others/Sum_AOI) %>%
mutate (Material = Material/Sum_AOI) %>%
mutate (Nametag_Anna = Nametag_Anna/Sum_AOI) %>%
mutate (Nametag_Bianca = Nametag_Bianca/Sum_AOI) %>%
mutate (Nametage_Carl_a = Nametage_Carl_a/Sum_AOI)
# chose all columns exept the last one (Sum_AOI)
prop_AP_01 <- prop_AP_01 %>% filter(TOI == "Lesson") %>%
select(,1:11)
prop_MK_01 <- AOI_MK_01  %>%
mutate(Anna = Anna/Sum_AOI)   %>%
mutate(Bianca = Bianca/Sum_AOI)   %>%
mutate (Carl_a = Carl_a/Sum_AOI) %>%
mutate(Disruptive_Person = Disruptive_Person/Sum_AOI)   %>%
mutate(Board_Screen = Board_Screen/Sum_AOI) %>%
mutate(Classroom_Others = Classroom_Others/Sum_AOI) %>%
mutate (Teacher_Material = Teacher_Material/Sum_AOI) %>%
mutate (Nametag_Anna = Nametag_Anna/Sum_AOI) %>%
mutate (Nametag_Bianca = Nametag_Bianca/Sum_AOI) %>%
mutate (Nametage_Carl_a = Nametage_Carl_a/Sum_AOI) %>%
rename(Material = Teacher_Material)
prop_MK_01 <- prop_MK_01 %>% filter(TOI == "Lesson") %>%
select(!"Students_Material")
prop_AP_04 <- AOI_AP_04  %>%
mutate(Anna = Anna/Sum_AOI)   %>%
mutate(Bianca = Bianca/Sum_AOI)   %>%
mutate (Carl_a = Carl_a/Sum_AOI) %>%
mutate(Disruptive_Person = Disruptive_Person/Sum_AOI)   %>%
mutate(Board_Screen = Board_Screen/Sum_AOI) %>%
mutate(Classroom_Others = Classroom_Others/Sum_AOI) %>%
mutate (Material = Material/Sum_AOI) %>%
mutate (Nametag_Anna = Nametag_Anna/Sum_AOI) %>%
mutate (Nametag_Bianca = Nametag_Bianca/Sum_AOI) %>%
mutate (Nametage_Carl_a = Nametage_Carl_a/Sum_AOI)
prop_AP_04 <- prop_AP_04 %>% filter(TOI == "Lesson") %>%
select(,1:11)
prop_MK_04 <- AOI_MK_04  %>%
mutate(Anna = Anna/Sum_AOI)   %>%
mutate(Bianca = Bianca/Sum_AOI)   %>%
mutate (Carl_a = Carl_a/Sum_AOI) %>%
mutate(Disruptive_Person = Disruptive_Person/Sum_AOI)   %>%
mutate(Board_Screen = Board_Screen/Sum_AOI) %>%
mutate(Classroom_Others = Classroom_Others/Sum_AOI) %>%
mutate (Teacher_Material = Teacher_Material/Sum_AOI) %>%
mutate(Students_Material = Students_Material/Sum_AOI) %>%
mutate (Nametag_Anna = Nametag_Anna/Sum_AOI) %>%
mutate (Nametag_Bianca = Nametag_Bianca/Sum_AOI) %>%
mutate (Nametage_Carl_a = Nametage_Carl_a/Sum_AOI) %>%
mutate (Material = Students_Material + Teacher_Material)
prop_MK_04 <- prop_MK_04 %>% filter(TOI == "Lesson") %>%
select(!"Students_Material") %>%
select(!"Teacher_Material") %>%
select (!"Sum_AOI")
# create data set of proportions in long format for plotting
prop_AP_01_long  <- prop_AP_01 %>% gather(TOI, Duration)
prop_MK_01_long <- prop_MK_01 %>% gather (TOI, Duration)
prop_AP_04_long <- prop_AP_04 %>% gather (TOI, Duration)
prop_MK_04_long <- prop_MK_04 %>% gather (TOI, Duration)
################################################
# install.packages
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
coding_data_r1 <-read_tsv ("./data/03_03_EH_ProVisioNET_study_glasses Metrics_event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r1 <- coding_data_r1 %>% filter(TOI == "Lesson")
# select variable AOI + Hit_proportion
r1 <- r1 %>% select(AOI, Hit_proportion)
#delete NAs
r1 <- na.omit(r1)
# round Hit_proportion to 1
r1$Hit_proportion <- round(r1$Hit_proportion,
digits = 0)
# group data by AOI and summarise Hit_prop
r1_aggr <- group_by(.data = r1,
AOI) %>% summarise(Hit_count = length(Hit_proportion))
# read in data from rater1 while specifying locale allows to set ","
coding_data_r2 <-read_tsv ("./data/03_03_RD_ProVisioNET_study_glasses Metrics_event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r2 <- coding_data_r2 %>% filter(TOI == "Lesson")
# select variable AOI + Hit_proportion
r2 <- r2 %>% select(AOI, Hit_proportion)
#delete NAs
r2 <- na.omit(r2)
# round Hit_proportion to 1
r2$Hit_proportion <- round(r2$Hit_proportion,
digits = 0)
# group data by AOI and summarise Hit_prop
r2_aggr <- group_by(.data = r2,
AOI) %>% summarise(Hit_count = length(Hit_proportion))
r1_filter <- r1_aggr %>% filter(AOI != "Board_Screen",
AOI != "Disruptive_Person,students_material",
AOI != "Material",
AOI != "students_material")
r1_filter
r2_filter <- r2_aggr %>% filter(AOI != "Board_Screen",
AOI != "Anna,Bianca,Disruptive_Person",
AOI != "Disruptive_Person,students_material",
AOI != "Material",
AOI != "students_material")
r2_filter
r3 <- merge(r1_filter, r2_filter, by = 'AOI')
# create a new df with only the ratings
r3_agree <- r3 %>% select(Hit_count.x, Hit_count.y)
# function agree() with a tolerance
agree(r3_agree, tolerance=50)
# first, create a xtab and specify who is rater1 and rater2
ratertab <- xtabs(~r3$Hit_count.x + r3$Hit_count.y)
ratertab
# now you can calculate CohenKappa
CohenKappa(ratertab)
# build a subset that contains the two AOI hit variables
data_icc <- subset(r3, select = c(Hit_count.x, Hit_count.y))
# calculate the ICC for two raters with new subset
ICC(data_icc)
# now you can calculate CohenKappa
CohenKappa(ratertab)
# install needed packages
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data from rater1 while specifying locale allows to set ","
coding_data_r1_v1 <-read_tsv ("./data/01_01_AP_ProVisioNET_study_glasses_Metrics_Event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r1_v1 <- coding_data_r1_v1 %>% filter(TOI == "Lesson")
# select relevant variables
r1_v1 <- r1_v1 %>% select(EventIndex, AOI)
# read in data from rater2 while specifying locale allows to set ","
coding_data_r2_v1 <-read_tsv ("./data/01_01_MK_ProVisioNET_study_glasses_Metrics_Event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r2_v1 <- coding_data_r2_v1 %>% filter(TOI == "Lesson")
# select relevant variables
r2_v1 <- r2_v1 %>% select(EventIndex, AOI)
#rename values in row Material = Teacher_Material
r2_v1$AOI[r2_v1$AOI == "Material_Teacher"] <- "Material"
v1_r1 <- v1_r1 %>% filter(EventIndex != 1728,
EventIndex != 1729,
EventIndex != 1730,
EventIndex != 1731)
v1_r1
r3_v1 <- left_join(r1_v1, r2_v1, by = 'EventIndex')
#compare AOI.x and AOI.y and output results to new column titled rating_compare
r3_v1$rating_compare <- as.numeric(r3_v1$AOI.x == r3_v1$AOI.y)
# replace NA with 0
r3_v1 <- r3_v1 %>%
mutate_all(~replace(., is.na(.), 0))
# create a new df with only the ratings
r3_agree_v1 <- r3_v1 %>% select(AOI.x, AOI.y)
View(r3_agree_v1)
# function agree() with a tolerance
agree(r3_agree_v1)
r3_kappa_v1 <- select(r3_v1,
AOI.x, AOI.y)
r3_kappa_v1 <- as_factor(r3_kappa_v1)
r3_kappa_v1$AOI.x <- as_factor(r3_kappa_v1$AOI.x)
r3_kappa_v1$AOI.y <- as_factor(r3_kappa_v1$AOI.y)
psych::cohen.kappa(x = as.matrix(r3_kappa_v1))
# read in data from rater1 while specifying locale allows to set ","
coding_data_r1_v2 <-read_tsv ("./data/02_02_AP_ProVisioNET_study_glasses_Metrics_Event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r1_v2 <- coding_data_r1_v2 %>% filter(TOI == "Lesson")
# select relevant variables
r1_v2 <- r1_v2 %>% select(EventIndex, AOI)
# read in data from rater2 while specifying locale allows to set ","
coding_data_r2_v2 <-read_tsv ("./data/02_02_MK_ProVisioNET_study_glasses_Metrics_Event-based.tsv",
locale = locale(decimal_mark = ","))
# filter only rows lesson
r2_v2 <- coding_data_r2_v2 %>% filter(TOI == "Lesson")
# select relevant variables
r2_v2 <- r2_v2 %>% select(EventIndex, AOI)
#rename values in row Material = Teacher_Material
r2_v2$AOI[r2_v2$AOI == "Teacher_material"] <- "Material"
r2_v2 <- r2_v2 %>% filter(EventIndex != 2398,
EventIndex != 2399,
EventIndex != 2400,
EventIndex != 2401)
r1_v2
r3_v2 <- left_join(r1_v2, r2_v2, by = 'EventIndex')
#compare AOI.x and AOI.y and output results to new column titled rating_compare
r3_v2$rating_compare <- as.numeric(r3_v2$AOI.x == r3_v2$AOI.y)
# replace NA with 0
r3_v2 <- r3_v2 %>%
mutate_all(~replace(., is.na(.), 0))
# create a new df with only the ratings
r3_agree_v2 <- r3_v2 %>% select(AOI.x, AOI.y)
# function agree() with a tolerance
agree(r3_agree_v2)
r3_kappa_v2 <- select(r3_v2,
AOI.x, AOI.y)
r3_kappa_v2 <- as_factor(r3_kappa_v2)
r3_kappa_v2$AOI.x <- as_factor(r3_kappa_v2$AOI.x)
r3_kappa_v2$AOI.y <- as_factor(r3_kappa_v2$AOI.y)
psych::cohen.kappa(x = as.matrix(r3_kappa_v2))
