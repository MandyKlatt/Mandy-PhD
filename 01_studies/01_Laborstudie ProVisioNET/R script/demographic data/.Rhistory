group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
knitr::opts_chunk$set(include = FALSE)
library("papaja")
r_refs(file = "r-references.bib")
# install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR,
moments,
ltm,
sjPlot,
kableExtra,
xtable,
DescTools)
# load data files
quest.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# read in data and select and rename relevant columns with transmute
demo.data <-
read_excel("./data/data_empschul_labor_lehrperson.xlsx") %>%
transmute(Group = LI06_05,
Gender = LI02_01_1,
Age = LI03_01,
`Teaching Experience` = LI04_01,
`Type of School` = LI18,
Grade = LI16_05,
Subject = LI10_05,
Semester = LI11_01,
Internship = LI13_01,
`Extracurricular Teaching Experience` = LI14,
`Secondary Teaching Activities` = LI17
)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender to count female gender (male = 2 --> 0)
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character Gender into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# changing character Semester into numeric
demo.data$Semester <- as.numeric(demo.data$Semester)
# creating new column with total participants to calculate percent of gender
demo.data <- demo.data %>%
group_by(Group) %>%
mutate(Gender_Sum=n())
# changing Type of School into character
# LI18:
# 1: Grundschule
# 2: Oberschule
# 3: Gymnasium
# 4: Förderschule/Sondershausen
# 5: Berufsbildende Schule
# -1: andere Schulform
demo.data$`Type of School` <- factor(x = demo.data$`Type of School`,
levels = c("1","2","3","4","5","-1"), # Mögliche Werte # andere Möglichkeit: unique(demo.data$`Type of School`)
labels = c("Grundschule","Oberschule","Gymnasium","Förderschule","Berufsbildende Schule", "andere Schulform")) # Bezeichnungen
# changing `Extracurricular Teaching Experience` to count experience (no experience = 2 --> 0)
demo.data$`Extracurricular Teaching Experience` = ifelse(demo.data$`Extracurricular Teaching Experience` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Extracurricular Teaching Experience` <- as.numeric(demo.data$`Extracurricular Teaching Experience`)
# changing `Secondary Teaching Activities` to count experience (no experience = 2 --> 0)
demo.data$`Secondary Teaching Activities` = ifelse(demo.data$`Secondary Teaching Activities` == 1, "1","0")
# changing character Extra. Exp. into numeric
demo.data$`Secondary Teaching Activities` <- as.numeric(demo.data$`Secondary Teaching Activities`)
# create new columns that give proportion of Gender
# percent = female gender divided by all female Gender
# demo.data <- demo.data  %>%
#   group_by(Group) %>%
#   mutate(Gender_percent = Gender/Gender_Sum) %>%
#   mutate(Gender_percent = round(sum(Gender_percent)*100, digits=0))
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Gender female in percent" = round(sum(Gender/Gender_Sum) * 100, digits = 1),
"M Age in years" = round(mean(Age), 1),
"SD Age in years" = round(sd(Age), 1),
"Min Age in years" = min(Age),
"Max Age in years" = max(Age)
)
# format and insert table in manuscript
demo.table %>%
papaja::apa_table(
caption = "Demographic Information",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# create a basic table (tibble) using tidyverse functions
exp.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"M Exp." = round(mean(`Teaching Experience`), 1),
"SD Exp." = round(sd(`Teaching Experience`), 1),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"M Semester" = round(mean(Semester), 1),
"SD Semester" = round(sd(Semester), 1),
"Min Semester" = min(Semester),
"Max Semester" = max(Semester),
"M Internship" = round(mean(Internship), 1),
"SD Internship" = round(sd(Internship), 1),
"Min Internship" = min(Internship),
"Max Internship" = max(Internship),
"Extracurricular Teaching Experience" = round(sum(`Extracurricular Teaching Experience`/Gender_Sum) * 100, digits = 1),
"Secondary Teaching Activities" = round(sum(`Secondary Teaching Activities`/Gender_Sum) * 100)
)
# format and insert table in manuscript
exp.table %>%
papaja::apa_table(
caption = "Teaching Experience in years, internship experience in teaching units (45min) and extracurricular teaching experience in percent",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "tiny" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(quest.data)
View(exp.table)
View(demo.table)
View(exp.table)
library("papaja")
r_refs("r-references.bib")
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read_csv("./data/data_empschul_labor_lehrperson.csv")
# prepare data (selected from questionnaire data)
demo.data <- read.csv2("./data/data_empschul_labor_lehrperson.csv")
# prepare data (selected from questionnaire data)
demo.data <- read_csv("./data/data_empschul_labor_lehrperson.csv")
library("papaja")
r_refs("r-references.bib")
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
View(demo.data)
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
View(demo.data)
View(demo.data)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
#filter without 121
demo.data <-  demo.data[-c(28), ]
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
View(demo.data)
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.data)
View(demo.table)
View(demo.table)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
demo.table
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
View(demo.data)
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
View(demo.data)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
View(demo.data)
View(demo.data)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
#filter --> 121 two times
demo.data <-  demo.data[-c(28), ]
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
#filter --> 121 two times
demo.data <-  demo.data[-c(28), ]
View(demo.data)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
#filter --> 121 two times
demo.data <-  demo.data[-c(28), ]
View(demo.data)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
View(demo.data)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Female" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
View(demo.table)
