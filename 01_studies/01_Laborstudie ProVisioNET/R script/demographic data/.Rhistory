<<<<<<< Updated upstream
=======
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson_2021-11-24.xlsx")
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/demographic data")
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson_2021-11-24.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
View(demo.data)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
View(demo.data)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = count(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
View(demo.table)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = length(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
View(demo.table)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = length(Gender = ifelse >2),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = length(Gender = ifelse(demo.data$Gender > 2)),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = unique(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender < 2, "0","1")
View(demo.data)
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender < 2, "1","0")
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = length(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
View(demo.data)
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender = 2, "1","0")
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson_2021-11-24.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson_2021-11-24.xlsx")
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson_2021-11-24.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
>>>>>>> Stashed changes
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Female" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
View(demo.data)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Female" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# #filter --> 121 two times
# demo.data <-  demo.data[-c(28), ]
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Female" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# #filter --> 121 two times
# demo.data <-  demo.data[-c(28), ]
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Female" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
View(exp.table)
library("papaja")
r_refs("r-references.bib")
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- readxl::read_xlsx("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 1
demo.data$Gender = ifelse(demo.data$Gender == 2, "1","0")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# #filter --> 121 two times
# demo.data <-  demo.data[-c(28), ]
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Female" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
library("papaja")
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
View(demo.table)
View(demo.data)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
View(demo.table)
View(demo.data)
library("papaja")
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
View(demo.data)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01"))
View(demo.data)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01")) %>%
filter(Group %in% c(101:136, 202:217))# filter relevant rows
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
"Teaching Experience" = "LI04_01")) %>%
filter(Group %in% c(101:136, 202:217))# filter relevant rows
View(demo.data)
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
View(demo.table)
library("papaja")
r_refs("r-references.bib")
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
<<<<<<< Updated upstream
=======
library("papaja")
install.packages(papaja)
install.packages("papaja")
library("papaja")
install.packages('papaja')
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/demographic data")
install.packages('papaja')
library("papaja")
# Install devtools package if necessary
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
# Install the stable development verions from GitHub
devtools::install_github("crsh/papaja")
# Install the latest development snapshot from GitHub
devtools::install_github("crsh/papaja@devel")
if(!"tinytex" %in% rownames(installed.packages())) install.packages("tinytex")
tinytex::install_tinytex()
install.packages('papaja')
library("papaja")
r_refs("r-references.bib")
library(rlang)
library("papaja")
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library("papaja")
r_refs("r-references.bib")
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
remove.packages("rlang")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/", repo=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.0.tar.gz", repo=NULL, type="source")
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
library("papaja")
r_refs("r-references.bib")
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
rlang,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.0.tar.gz")
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
rlang,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
detach("package:ARTofR", unload = TRUE)
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
library("papaja")
r_refs("r-references.bib")
library(needs)
# prepare data (selected from questionnaire data)
demo.data <- read.csv2 ("./data/data_empschul_labor_lehrperson.csv")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
#install.packages("needs")
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
install.packages("rlang")
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# prepare data (selected from questionnaire data)
demo.data <- read.csv2 ("./data/data_empschul_labor_lehrperson.csv")
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/R script/demographic data")
# prepare data (selected from questionnaire data)
demo.data <- read_excel ("./data/data_empschul_labor_lehrperson.xlsx")
>>>>>>> Stashed changes
# select relevant columns
demo.data <- demo.data %>% select(LI02_01_1,
LI03_01,
LI04_01,
LI06_05)
# rename columns
demo.data <- rename(demo.data, c("Group" = "LI06_05",
"Gender" = "LI02_01_1",
"Age" = "LI03_01",
<<<<<<< Updated upstream
"Teaching Experience" = "LI04_01")) %>%
filter(Group %in% c(101:125, 202:217))# filter relevant rows
=======
"Teaching Experience" = "LI04_01"))
>>>>>>> Stashed changes
# define expert and novice with ifelse function
demo.data$Group = ifelse(demo.data$Group < 200, "Novice","Expert")
# changing gender female 2 = 0
demo.data$Gender = ifelse(demo.data$Gender == 2, "0","1")
# changing character into numeric
demo.data$Gender <- as.numeric(demo.data$Gender)
# create a basic table (tibble) using tidyverse functions
demo.table <- demo.data %>%
group_by(Group) %>%
summarise(N=n(),
"Male" = sum(Gender),
"M Age" = round(mean(Age), 2),
"Min Age" = min(Age),
"Max Age" = max(Age),
"SD Age" = round(sd(Age), 2),
"M Exp." = round(mean(`Teaching Experience`), 2),
"Min Exp." = min(`Teaching Experience`),
"Max Exp." = max(`Teaching Experience`),
"SD Exp." = round(sd(`Teaching Experience`), 2),
)
# format and insert table in manuscript
apa_table(
demo.table,
caption = "Demographic Information and Teaching Experience",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
<<<<<<< Updated upstream
View(demo.table)
=======
>>>>>>> Stashed changes
