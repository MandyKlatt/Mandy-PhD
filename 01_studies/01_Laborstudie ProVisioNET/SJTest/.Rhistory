y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold")))
dist_plot
# plotting Disruption factor for all disruptions
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
dist_plot
# plotting Disruption factor for all disruptions
dist_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disruptive was the event for you?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
dist_plot
# plotting Confident factor for all disruptions
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting Confident factor for all disruptions
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.title = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting Confident factor for all disruptions
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.title = element_text("none"),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting Confident factor for all disruptions
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting Confident factor for all disruptions
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.position="none",
axis.text.x = element_text(size = 11),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting confident factor for all disruptions
confi_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Disruption_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Disruption Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_plot
# plotting confident factor for all disruptions
confi_plot <-
ggplot(data = sri_disrup,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_plot
View(confi_plot)
View(confi_group_plot)
# plotting confident factor for all disruptions
confi_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1,
height = 0)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10)+
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 80),
plot.title = element_text(size = 15, face = "bold"))
confi_plot
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.position="none",
axis.text.x = element_text(size = 11),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
# plotting Confident factor for group
confi_group_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "Confident Factor") +
ylim(0,10) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.15,
height = 0)) +
scale_fill_brewer(palette = "Set1") +
ggtitle("How confident did you feel dealing with this event?") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
legend.position="none",
axis.text.x = element_text(size = 11),
plot.title = element_text(size = 15, face = "bold"))
confi_group_plot
View(sri_disrup)
# mean disrup_factor
sri_disrup_mean <- sri_disrup %>%
group_by(Group) %>%
summarise("N"=n_distinct(id),
"M" = round(mean(Disruption_Factor), 2),
"SD" = round(sd(Disruption_Factor), 2))
# mean disrup_factor
sri_disrup_mean <- sri_disrup %>%
group_by(Group) %>%
summarise("M" = round(mean(Disruption_Factor), 2),
"SD" = round(sd(Disruption_Factor), 2))
View(sri_disrup_mean)
# mean ttfr
sri_confi_mean <- sri_confi %>%
group_by(Group) %>%
summarise("M" = round(mean(Confident_Factor), 2),
"SD" = round(sd(Confident_Factor), 2))
View(sri_confi_mean)
setwd("~/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest")
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
View(df_sjt)
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
# define expert and novice with ifelse function
df_sjt_long$Group = ifelse(df_sjt_long$Group < 200, "Novice","Expert")
View(df_sjt_long)
View(df_sjt)
View(df_sjt_long)
View(df_sjt)
# mean ttff
sjt_mean <- df_sjt %>%
select(All) %>%
group_by(Group) %>%
summarise("N"=n_distinct(Group),
"M" = round(mean(All), 2),
"SD" = round(sd(All), 2))
# mean ttff
sjt_mean <- df_sjt %>%
select(Group, All) %>%
group_by(Group) %>%
summarise("N"=n_distinct(Group),
"M" = round(mean(All), 2),
"SD" = round(sd(All), 2))
View(sjt_mean)
View(sjt_mean)
# mean ttff
sjt_mean <- df_sjt_long %>%
select(Group, All) %>%
group_by(Group) %>%
summarise("N"=n_distinct(Group),
"M" = round(mean(All), 2),
"SD" = round(sd(All), 2))
View(df_sjt_long)
# mean SJT
sjt_mean <- df_sjt_long %>%
filter(`Facets Classroom Management` == "All") %>%
group_by(Group) %>%
summarise("M" = round(mean(All), 2),
"SD" = round(sd(All), 2))
sjt_mean <- df_sjt_long %>%
filter(`Facets Classroom Management` == "All")
View(sjt_mean)
# mean SJT
sjt_mean <- df_sjt_long %>%
filter(`Facets Classroom Management` == "All") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
View(sjt_mean)
View(df_sjt_long)
# mean SJT Managing Momentum
sjt_mean <- df_sjt_long %>%
filter(`Facets Classroom Management` == `Managing Momentum`) %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Managing Momentum
sjt_mm <- df_sjt_long %>%
filter(`Facets Classroom Management` == `Managing Momentum`) %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
View(df_sjt_long)
# mean SJT Managing Momentum
sjt_mm <- df_sjt_long %>%
filter(`Facets Classroom Management` == `Managing momentum`) %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Managing Momentum
sjt_mm <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Managing momentum") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
View(sjt_mm)
# mean SJT Monitoring
sjt_m <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Monitoring") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
View(sjt_m)
# mean SJT Rules and routins
sjt_r <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Rules and routines") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
View(sjt_r)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
# define expert and novice with ifelse function
df_sjt_long$Group = ifelse(df_sjt_long$Group < 200, "Novice","Expert")
# plotting mean of all aspects
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "Set1") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_classic()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 12))
mean_plot
# mean SJT ALL
sjt_mean <- df_sjt_long %>%
filter(`Facets Classroom Management` == "All") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Managing Momentum
sjt_mm <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Managing momentum") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Monitoring
sjt_m <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Monitoring") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
# mean SJT Rules and routins
sjt_r <- df_sjt_long %>%
filter(`Facets Classroom Management` == "Rules and routines") %>%
group_by(Group) %>%
summarise("M" = round(mean(Mean), 2),
"SD" = round(sd(Mean), 2))
View(df_sjt)
