viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# plotting mean
mean_plot <- ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(~ "Facets Classroom Management", nrow = 1)+
theme_cowplot()
# plotting mean
#mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(~ "Facets Classroom Management", nrow = 1)+
theme_cowplot()
View(df_sjt_long)
?facet_wrap
# plotting mean
#mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`), nrow = 1)+
theme_cowplot()
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`), nrow = 1)+
theme_cowplot()
mean_plot
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
# define expert and novice with ifelse function
df_sjt_long$Group = ifelse(df_sjt_long$Group < 200, "Novice","Expert")
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1) +
theme_cowplot()
mean_plot
?pivot_longer
View(df_sjt_long)
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(Group, names_to = "Facets Classroom Management", values_to = "Mean")
View(df_sjt_long)
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
View(df_sjt_long)
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
str(df_sjt_long)
### ProVisioNET pilot data
#### intercoder reli eye tracking data 01_01
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
reaction_AP <- read_tsv(file = "data/01_01_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv"
)
reaction_MK <- read_tsv(file = "data/01_01_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv"
)
# select relevant columns
reaction_AP <- reaction_AP %>%
select(TOI,
Time_to_first_Event.Reaction_chatting,
Time_to_first_Event.Reaction_clicking,
Time_to_first_Event.Reaction_drawing,
Time_to_first_Event.Reaction_drumming,
Time_to_first_Event.Reaction_head,
Time_to_first_Event.Reaction_heckling,
Time_to_first_Event.Reaction_phone,
Time_to_first_Event.Reaction_snipping,
Time_to_first_Event.Reaction_whispering
)
reaction_MK <- reaction_MK %>%
select(TOI,
Time_to_first_Event.Reaction_chatting,
Time_to_first_Event.Reaction_clicking,
Time_to_first_Event.Reaction_drawing,
Time_to_first_Event.Reaction_drumming,
Time_to_first_Event.Reaction_head,
Time_to_first_Event.Reaction_heckling,
Time_to_first_Event.Reaction_phone,
Time_to_first_Event.Reaction_snipping,
Time_to_first_Event.Reaction_whispering
)
# filter only for event TOIs
reaction_AP <- reaction_AP %>%
filter(TOI == "Chatting_with_neighbour"|
TOI == "Clicking_pen"|
TOI == "Drawing"|
TOI == "Drumming_with_hands"|
TOI == "Head_on_table"|
TOI == "Heckling"|
TOI == "Looking_at_phone" |
TOI == "Snipping_with_fingers"|
TOI == "Whispering"
)
reaction_MK <- reaction_MK %>%
filter(TOI == "Chatting_with_neighbour"|
TOI == "Clicking_pen"|
TOI == "Drawing"|
TOI == "Drumming_with_hands"|
TOI == "Head_on_table"|
TOI == "Heckling"|
TOI == "Looking_at_phone" |
TOI == "Snipping_with_fingers"|
TOI == "Whispering"
)
library(needs)
needs(tidyverse,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
reaction_AP <- read_tsv(file = "data/01_01_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv"
)
reaction_MK <- read_tsv(file = "data/01_01_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv"
)
# select relevant columns
reaction_AP <- reaction_AP %>%
select(TOI,
Time_to_first_Event.Reaction_chatting,
Time_to_first_Event.Reaction_clicking,
Time_to_first_Event.Reaction_drawing,
Time_to_first_Event.Reaction_drumming,
Time_to_first_Event.Reaction_head,
Time_to_first_Event.Reaction_heckling,
Time_to_first_Event.Reaction_phone,
Time_to_first_Event.Reaction_snipping,
Time_to_first_Event.Reaction_whispering
)
reaction_MK <- reaction_MK %>%
select(TOI,
Time_to_first_Event.Reaction_chatting,
Time_to_first_Event.Reaction_clicking,
Time_to_first_Event.Reaction_drawing,
Time_to_first_Event.Reaction_drumming,
Time_to_first_Event.Reaction_head,
Time_to_first_Event.Reaction_heckling,
Time_to_first_Event.Reaction_phone,
Time_to_first_Event.Reaction_snipping,
Time_to_first_Event.Reaction_whispering
)
# read in data
reaction_AP <- read_tsv(file = "data/01_01_AP_ProVisioNET_study_glasses_Metrics_Intervall based.tsv"
)
reaction_MK <- read_tsv(file = "data/01_01_MK_ProVisioNET_study_glasses_Metrics_Intervall based.tsv"
)
# load packages
library(needs)
needs(tidyverse,
lubridate,
viridis,
grid,
gridExtra,
cowplot,
readxl,
ARTofR)
# read in data
df_sjt <- read_csv2(file = "C:/Users/mk99feta/OneDrive/Dokumente/GitHub/Mandy-PhD/01_studies/01_Laborstudie ProVisioNET/SJTest/data/SJT.csv")
# select relevant columns --> only mean
df_sjt <- df_sjt %>% select(UI06_05, SJT_AL_gek, SJT_ST_gek, SJT_R_gek, SJT_KF_gek)
# rename columns
df_sjt <- rename(df_sjt, c("Group" = "UI06_05",
"Monitoring" = "SJT_AL_gek",
"Managing momentum" = "SJT_ST_gek",
"Rules and routines" = "SJT_R_gek",
"All" = "SJT_KF_gek"))
# changing from wide to long format
df_sjt_long <- df_sjt %>%
pivot_longer(!Group, names_to = "Facets Classroom Management", values_to = "Mean")
# define expert and novice with ifelse function
df_sjt_long$Group = ifelse(df_sjt_long$Group < 200, "Novice","Expert")
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mean_plot
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean))
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group))
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1))
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_cowplot()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "")+
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 12,
angle = 75))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 12))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 12,
angle = 45))
mean_plot
# plotting mean
mean_plot <-
ggplot(data = df_sjt_long,
mapping = aes(x = Group,
y = Mean)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
labs(x = "") +
ylim(0,1) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(`Facets Classroom Management`),
nrow = 1, strip.position = "bottom") +
theme_minimal()+
ggtitle("Situational Judgment Test of Strategic Knowledge of Classroom Management") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 8,
angle = 45))
mean_plot
library(needs)
needs(tidyverse,
ggplot,
psych,
moments,
sjPlot,
DescTools,
irr,
readxl,
gridExtra)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disturbing_Factor, Confident_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disturbing_Factor, Confident_Factor)
# combine the two data frames with novice and expert
sri <- rbind(sri_expert, sri_novice)
# removing all NAs
sri_filter <- na.omit(sri)
# define expert and novice with ifelse function
sri_filter$Group = ifelse(sri_filter$Group < 200, "Novice","Expert")
# create a new data frame with both factors
sri_disturb <- subset.data.frame(sri_filter, select = c(Group, Event, Disturbing_Factor))
sri_confi <- subset.data.frame(sri_filter, select = c(Group, Event, Confident_Factor))
# plotting disturbing factor
dist_plot <-
ggplot(data = sri_disturb,
mapping = aes(x = Group,
y = Disturbing_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
ylim(0,10)+
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How disturbing was the event for you?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
dist_plot
# plotting Confident factor
confi_plot <-
ggplot(data = sri_confi,
mapping = aes(x = Group,
y = Confident_Factor)) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1)) +
scale_fill_brewer(palette = "RdBu") +
facet_wrap(vars(Event),
nrow = 1, strip.position = "bottom") +
ggtitle("How confident did you feel in dealing with this event?") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
confi_plot
# arranging plots
grid.arrange(dist_plot, confi_plot, ncol=2, nrow =1)
# arranging plots
grid.arrange(disturb_plot, confi_plot, ncol=2, nrow =1)
# suppress "summarize" info.
# if this line is ommitted, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
# read in data
sri_novice <- read_excel("./data/coding_sri_novice.xlsx")
sri_expert <- read_excel("./data/coding_sri_expert.xlsx")
# filter relevant rows and select relevant columns
sri_novice <- sri_novice %>% select(Group, Event, Disturbing_Factor, Confident_Factor)
sri_expert <- sri_expert %>% select(Group, Event, Disturbing_Factor, Confident_Factor)
