) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scales = "free")
ggplot(data = filter(df_gri_comp,
name == "Old GRI" |
name == "New GRI" |
name == "New GRI (scaled)"),
mapping = aes(x = TOI,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1
)
) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scales = "free")
ggplot(data = filter(df_gri_comp,
name == "Old GRI" |
name == "New GRI" |
name == "New GRI (scaled)"),
mapping = aes(x = TOI,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1
)
) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scales = "free")
knitr::opts_chunk$set(echo = FALSE)
ggplot(data = filter(df_gri_comp,
name == "Old GRI" |
name == "New GRI" |
name == "New GRI (scaled)"),
mapping = aes(x = TOI,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scales = "free") +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = filter(df_gri_comp,
name == "Old GRI" |
name == "New GRI" |
name == "New GRI (scaled)"),
mapping = aes(x = TOI,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scales = "free") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1))
ggplot(data = filter(df_gri_comp,
name == "Old GRI" |
name == "New GRI" |
name == "New GRI (scaled)"),
mapping = aes(x = TOI,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
labs(x = "",
y = "") +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
theme(axis.text.x = element_text(angle = 45,
hjust = 1
)
) +
facet_wrap(vars(name),
scales = "free")
table(df_gri$NewGRI)
kable(df_gri$TOI)
knitr::kable(df_gri$TOI)
knitr::kable(select(df_gri,
contains("GRI")))
df_table <- tibble(Value = c("GRI","Adj. GRI","Adj. GRI (scale)"),
Mean = c(mean(df_gri$OldGRI),mean(df_gri$NewGRI),mean(df_gri$NewGRI_scale)),
SD = c(sd(df_gri$OldGRI),sd(df_gri$NewGRI),sd(df_gri$NewGRI_scale)),
Median = c(media(df_gri$OldGRI),media(df_gri$NewGRI),median(df_gri$NewGRI_scale)),
Min = c(min(df_gri$OldGRI),min(df_gri$NewGRI),min(df_gri$NewGRI_scale))
)
df_table <- tibble(Value = c("GRI","Adj. GRI","Adj. GRI (scale)"),
Mean = c(mean(df_gri$OldGRI),mean(df_gri$NewGRI),mean(df_gri$NewGRI_scale)),
SD = c(sd(df_gri$OldGRI),sd(df_gri$NewGRI),sd(df_gri$NewGRI_scale)),
Median = c(median(df_gri$OldGRI),median(df_gri$NewGRI),median(df_gri$NewGRI_scale)),
Min = c(min(df_gri$OldGRI),min(df_gri$NewGRI),min(df_gri$NewGRI_scale))
)
knitr::kable(df_table)
test_data <- rnorm(n = length(df_gri),
mean = 0)
cor(test_data, df_gri$OldGRI)
test_data <- rnorm(n = length(df_gri$OldGRI),
mean = 0)
cor(test_data, df_gri$OldGRI)
cor(test_data, df_gri$NewGRI)
cor(test_data, df_gri$NewGRI_scale)
cor(test_data, df_gri$OldGRI)
cor(test_data, df_gri$NewGRI)
cor(test_data, df_gri$NewGRI_scale)
hist(test_data)
View(df_gri_comp)
knitr::opts_chunk$set(echo = FALSE)
ggplot(data = filter(df_gri_comp,
TOI == "Calibration Phase"),
mapping = aes(x = Group,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1
)
) +
labs(y = "",
x = ""
) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scale = "free")
df_table <- tibble(Value = c("GRI","Adj. GRI","Adj. GRI (scale)"),
Mean = c(mean(df_gri$OldGRI),mean(df_gri$NewGRI),mean(df_gri$NewGRI_scale)),
SD = c(sd(df_gri$OldGRI),sd(df_gri$NewGRI),sd(df_gri$NewGRI_scale)),
Median = c(median(df_gri$OldGRI),median(df_gri$NewGRI),median(df_gri$NewGRI_scale))
)
View(df_gri)
unique(df_gri$TOI)
unique(df_gri_comp$TOI)
filter(df_gri_comp,
TOI != "Calibration")
filter(df_gri_comp,
TOI != "Calibration phase")
View(df_gri_comp)
knitr::opts_chunk$set(echo = FALSE)
filter(df_gri_comp,
TOI != "Calibration phase")
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
filter(df_gri_comp,
TOI != "Calibration phase")
View(df_gri_comp)
unique(df_gri_comp$name)
df_gri_comp$value[df_gri_comp$name == "Total dur. of whole fixations (mean)"]
unique(df_gri$ID)
filter(df_gri_comp,
TOI != "Calibration phase")$value
filter(df_gri_comp,
TOI == "Calibration phase") %>% value
filter(df_gri_comp,
TOI == "Calibration phase")$value[df_gri_comp$name == "Total dur. of whole fixations (mean)"]
df_test <- filter(df_gri_comp, TOI == "Calibration phase")
View(df_test)
df_test$value[df_test$name == "Duration TOI","Total dur. of whole fixations (mean)"]
df_test$value[df_test$name == "Total dur. of whole fixations (mean)"]
df_test <- filter(df_test, name = "Total dur. of whole fixations (mean)")
df_test <- filter(df_test, name == "Total dur. of whole fixations (mean)")
View(df_test)
View(df_gri)
df_gri_comp <- select(df_gri,
!ID, !`m Dur Fix`)
df_gri_comp <- select(df_gri,
!ID, !`M Dur Fix`)
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
df_gri_comp <- select(df_gri,
!ID, !`M Dur Fix`)
df_gri_comp <- pivot_longer(data = df_gri,
c("DurTOI","M Dur Fix","Number Fix",
"TimeTOI Dur","OldGRI","NewGRI","NewGRI_scale"))
df_gri_comp$name <- factor(df_gri_comp$name,
levels = c("DurTOI","Number Fix",
"TimeTOI Dur","OldGRI","NewGRI",
"NewGRI_scale"),
labels = c("Duration TOI",
"Number of whole fixations","TimeTOI Dur","Old GRI","Adjusted GRI","Adjusted GRI (scaled)")
)
ggplot(data = filter(df_gri_comp,
TOI != "Calibration phase"),
mapping = aes(x = Group,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1
)
) +
labs(y = "",
x = ""
) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scale = "free")
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
df_gri_comp <- select(df_gri,
!ID, !`M Dur Fix`)
View(df_gri_comp)
?select
df_gri$M_dur_fix <- df_gri$`M Dur Fix`
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
df_gri_comp <- select(df_gri,
c(!ID, !`M Dur Fix`))
View(df_gri_comp)
df_gri_comp <- select(df_gri,
!c(ID,`M Dur Fix`))
df_gri_comp <- pivot_longer(data = df_gri,
c("DurTOI","M Dur Fix","Number Fix",
"TimeTOI Dur","OldGRI","NewGRI","NewGRI_scale"))
View(df_gri_comp)
knitr::opts_chunk$set(echo = FALSE)
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
knitr::opts_chunk$set(echo = FALSE)
library(needs)
needs(tidyverse,
gridExtra,
viridis,
ggthemes)
# prepare data (selected from questionnaire data)
df_gri <- read_delim("data/Aperol_pilot_glasses_raw_metrics_all_TOI.tsv",
delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# converting integer to numeric
df_gri <- mutate(.data = df_gri,
Duration_of_interval = as.numeric(Duration_of_interval),
Total_duration_of_whole_fixations = as.numeric(Total_duration_of_whole_fixations),
Number_of_whole_fixations = as.numeric(Number_of_whole_fixations),
Average_duration_of_whole_fixations = as.numeric(Average_duration_of_whole_fixations)
)
# calculate the GRI
# create a basic table (tibble) using tidyverse functions
df_gri <- df_gri %>%
group_by(TOI) %>%
summarise("ID" = Participant,
"Group" = Variable1,
"DurTOI" = Duration_of_interval,
"M Dur Fix" = mean(Total_duration_of_whole_fixations),
"Number Fix" = Number_of_whole_fixations,
"TimeTOI Dur" = Duration_of_interval/mean(Total_duration_of_whole_fixations),
"OldGRI" = mean(Total_duration_of_whole_fixations)/Number_of_whole_fixations,
"NewGRI" = (Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations,
"NewGRI_scale" = scale((Duration_of_interval/mean(Total_duration_of_whole_fixations))/Number_of_whole_fixations))
df_gri$Group <- as_factor(df_gri$Group)
df_gri_comp <- select(df_gri,
!c(ID,`M Dur Fix`))
View(df_gri_comp)
df_gri_comp <- pivot_longer(data = df_gri_comp,
c("DurTOI","Number Fix",
"TimeTOI Dur","OldGRI","NewGRI","NewGRI_scale"))
View(df_gri_comp)
df_gri_comp$name <- factor(df_gri_comp$name,
levels = c("DurTOI","Number Fix",
"TimeTOI Dur","OldGRI","NewGRI",
"NewGRI_scale"),
labels = c("Duration TOI",
"Number of whole fixations","TimeTOI Dur","Old GRI","Adjusted GRI","Adjusted GRI (scaled)")
)
ggplot(data = filter(df_gri_comp,
TOI != "Calibration phase"),
mapping = aes(x = Group,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1
)
) +
labs(y = "",
x = ""
) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scale = "free")
ggplot(data = filter(df_gri_comp,
TOI == "Calibration phase"),
mapping = aes(x = Group,
y = value
)
) +
geom_boxplot(mapping = aes(fill = Group)) +
geom_point(size = 2,
alpha = 0.4,
position = position_jitter(seed = 1,
width = 0.1
)
) +
labs(y = "",
x = ""
) +
scale_fill_brewer(palette = "RdBu") +
theme_clean() +
facet_wrap(vars(name),
scale = "free")
View(df_gri)
?kable
df_gri_n <- filter(df_gri,
Group == "Novice",
TOI != "Calibration phase")
df_table_n <- tibble(Value = c("GRI","Adj. GRI","Adj. GRI (scale)"),
Mean = c(mean(df_gri_n$OldGRI),mean(df_gri_n$NewGRI),mean(df_gri_n$NewGRI_scale)),
SD = c(sd(df_gri_n$OldGRI),sd(df_gri_n$NewGRI),sd(df_gri_n$NewGRI_scale)),
Median = c(median(df_gri_n$OldGRI),median(df_gri_n$NewGRI),median(df_gri_n$NewGRI_scale))
)
df_gri_e <- filter(df_gri,
Group == "Expert")
df_table_e <- tibble(Value = c("GRI","Adj. GRI","Adj. GRI (scale)"),
Mean = c(mean(df_gri_e$OldGRI),mean(df_gri_e$NewGRI),mean(df_gri_e$NewGRI_scale)),
SD = c(sd(df_gri_e$OldGRI),sd(df_gri_e$NewGRI),sd(df_gri_e$NewGRI_scale)),
Median = c(median(df_gri_e$OldGRI),median(df_gri_e$NewGRI),median(df_gri_e$NewGRI_scale))
)
test_data <- rnorm(n = length(df_gri$OldGRI),
mean = 0)
knitr::kable(df_table_n,
caption = "Experts")
knitr::kable(df_table_e,
caption = "Novice")
