Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
### read in data for 01_01_expert_D
speaking.data.01.01 <- read.table("./data/Aperol_pilot_01_01_expert_D_cam4.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.01 <- speaking.data.01.01  %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.01)
### checking for missing values
is.na(speaking.data.01.01.)
### read in data for 01_01_expert_D
speaking.data.01.01 <- read.table("./data/Aperol_pilot_01_01_expert_D_cam4.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.01 <- speaking.data.01.01  %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.01)
### checking for missing values
is.na(speaking.data.01.01)
which(is.na(speaking.data.01.01))
### filter only speaking time of teacher and "kodiert von Anna" as row
speaking.data.01.01 <- speaking.data.01.01 %>% filter (Code == "speaking time\\teacher",
Dokumentgruppe == "kodiert von Anna")
speaking.data.01.01 <- sum(speaking.data.01.01$Abdeckungsgrad..)
rm(speaking.data)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL", dec=",", sep="\t", header=T)
setwd("~/GitHub/Mandy-PhD/paper_1/data")
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL", dec=",", sep="\t", header=T)
setwd("~/GitHub/Mandy-PhD/paper_1/data")
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL", dec=",", sep="\t", header=T)
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.02)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.02)
### checking for missing values
is.na(speaking.data.01.02)
which(is.na(speaking.data.01.02))
### filter only speaking time of teacher and "kodiert von Anna" as row
speaking.data.01.02 <- speaking.data.01.02 %>% filter (Code == "speaking time\\teacher",
Dokumentgruppe == "kodiert von Anna")
speaking.data.01.02 <- sum(speaking.data.01.02$Abdeckungsgrad..)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.02)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.02)
### checking for missing values
is.na(speaking.data.01.02)
which(is.na(speaking.data.01.02))
### filter only speaking time of teacher as row
speaking.data.01.02 <- speaking.data.01.02 %>% filter (Code == "speaking time\\teacher")
speaking.data.01.02 <- sum(speaking.data.01.02$Abdeckungsgrad..)
view(speaking.data.01.02)
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.02)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.table("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
### read in data for 01_01_expert_D
speaking.data.01.01 <- read.delim("./data/Aperol_pilot_01_01_expert_D_cam4_AL_MK.xlsx", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.01 <- speaking.data.01.01  %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
view(speaking.data.01.01)
``` {r coded speaking time, echo = FALSE}
### read in data for 01_01_expert_D
speaking.data.01.01 <- read.delim("./data/Aperol_pilot_01_01_expert_D_cam4_AL_MK.txt", dec=",", sep="\t", header=T)
### select relevant columns
speaking.data.01.01 <- speaking.data.01.01  %>% select(
Dokumentgruppe,
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.01)
### checking for missing values
is.na(speaking.data.01.01)
which(is.na(speaking.data.01.01))
### filter only speaking time of teacher and "kodiert von Anna" as row
speaking.data.01.01 <- speaking.data.01.01 %>% filter (Code == "speaking time\\teacher",
Dokumentgruppe == "kodiert von Anna")
speaking.data.01.01 <- sum(speaking.data.01.01$Abdeckungsgrad..)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.delim("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.02)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.02)
### checking for missing values
is.na(speaking.data.01.02)
which(is.na(speaking.data.01.02))
### filter only speaking time of teacher as row
speaking.data.01.02 <- speaking.data.01.02 %>% filter (Code == "speaking time\\teacher")
speaking.data.01.02 <- sum(speaking.data.01.02$Abdeckungsgrad..)
which(is.na(speaking.data.01.02))
str(speaking.data.01.02)
## select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.delim("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.02)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.02)
### filter only speaking time of teacher as row
speaking.data.01.02 <- speaking.data.01.02 %>% filter (Code == "speaking time\\teacher")
speaking.data.01.02 <- sum(speaking.data.01.02$Abdeckungsgrad..)
# read in data for 01_03_novice_B
speaking.data.01.03 <- read.delim("./data/Aperol_pilot_01_03_novice_B_cam1.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.03)
### select relevant columns
speaking.data.01.03 <- speaking.data.01.03 %>% select(
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.03)
### checking for missing values
is.na(speaking.data.01.03)
which(is.na(speaking.data.01.03))
### filter only speaking time of teacher as row
speaking.data.01.03 <- speaking.data.01.03 %>% filter (Code == "speaking time\\teacher")
speaking.data.01.03 <- sum(speaking.data.01.03$Abdeckungsgrad..)
speaking.data.01.03 <- read.delim("./data/Aperol_pilot_01_03_novice_B_cam1.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.03)
### select relevant columns
speaking.data.01.03 <- speaking.data.01.03 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.03)
# read in data for 01_03_novice_B
speaking.data.01.03 <- read.delim("./data/Aperol_pilot_01_03_novice_B_cam1.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.03)
### select relevant columns
speaking.data.01.03 <- speaking.data.01.03 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.03)
### checking for missing values
is.na(speaking.data.01.03)
which(is.na(speaking.data.01.03))
### filter only speaking time of teacher as row
speaking.data.01.03 <- speaking.data.01.03 %>% filter (Code == "speaking time\\teachter")
speaking.data.01.03 <- sum(speaking.data.01.03$Abdeckungsgrad..)
# read in data for 01_04_novice_C
speaking.data.01.04 <- read.delim("./data/Aperol_pilot_01_04_novice_C_cam1.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.04)
### select relevant columns
speaking.data.01.04 <- speaking.data.01.04 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.01.04)
### checking for missing values
is.na(speaking.data.01.04)
which(is.na(speaking.data.01.04))
### filter only speaking time of teacher as row
speaking.data.01.04 <- speaking.data.01.04 %>% filter (Code == "speaking time\\teachter")
speaking.data.01.04 <- sum(speaking.data.01.04$Abdeckungsgrad..)
rm(speaking.data.01.01.expert.D)
mr(add.quest.raw.data)
rm(add.quest.raw.data)
rm(add.raw.data)
view(speaking.data.01.02)
speaking.data.01.02 <- read.delim("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.02)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
view(speaking.data.01.02)
view(speaking.data.01.02)
view(speaking.data.01.02)
### filter only speaking time of teacher as row
speaking.data.01.02 <- speaking.data.01.02 %>% filter (Code == "speaking time\\teacher")
view(speaking.data.01.02)
# read in data for 01_02_expert_A
speaking.data.01.02 <- read.delim("./data/Aperol_pilot_01_02_expert_A_cam1_AL.txt", dec=",", sep="\t", header=T)
view(speaking.data.01.02)
### select relevant columns
speaking.data.01.02 <- speaking.data.01.02 %>% select(
Dokumentname,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
### checking for missing values
is.na(speaking.data.01.02)
which(is.na(speaking.data.01.02))
### filter only speaking time of teacher as row
speaking.data.01.02 <- speaking.data.01.02 %>% filter (Code == "speaking time\\teacher")
view(speaking.data.01.02)
speaking.data.01.02 <- sum(speaking.data.01.02$Abdeckungsgrad..)
# read in data for 02_01_novice_A
speaking.data.02.01 <- read.delim("./data/Aperol_pilot_02_01_novice_A_glasses.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.01)
### select relevant columns
speaking.data.02.01 <- speaking.data.02.01 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.01)
### checking for missing values
is.na(speaking.data.02.01)
which(is.na(speaking.data.02.01))
### filter only speaking time of teacher as row
speaking.data.02.01 <- speaking.data.02.01 %>% filter (Code == "speaking time\\teachter")
speaking.data.02.01 <- sum(speaking.data.02.01$Abdeckungsgrad..)
# read in data for 02_01_novice_A
speaking.data.02.01 <- read.delim("./data/Aperol_pilot_02_01_novice_A_glasses.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.01)
### select relevant columns
speaking.data.02.01 <- speaking.data.02.01 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.01)
### checking for missing values
is.na(speaking.data.02.01)
which(is.na(speaking.data.02.01))
### filter only speaking time of teacher as row
speaking.data.02.01 <- speaking.data.02.01 %>% filter (Code == "speaking time\\teacher")
speaking.data.02.01 <- sum(speaking.data.02.01$Abdeckungsgrad..)
# read in data for 02_02_novice_B
speaking.data.02.02 <- read.delim("./data/Aperol_pilot_02_02_novice_B_cam1_AL_MK.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.02)
### select relevant columns
speaking.data.02.02 <- speaking.data.02.02 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.02)
### checking for missing values
is.na(speaking.data.02.02)
which(is.na(speaking.data.02.02))
### filter only speaking time of teacher as row
speaking.data.02.02 <- speaking.data.02.02 %>% filter (Code == "speaking time\\teacher",
Dokumentgruppe == "kodiert von Anna")
# read in data for 02_02_novice_B
speaking.data.02.02 <- read.delim("./data/Aperol_pilot_02_02_novice_B_cam1_AL_MK.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.02)
### select relevant columns
speaking.data.02.02 <- speaking.data.02.02 %>% select(
Dokumentgruppe,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.02)
### checking for missing values
is.na(speaking.data.02.02)
which(is.na(speaking.data.02.02))
### filter only speaking time of teacher as row
speaking.data.02.02 <- speaking.data.02.02 %>% filter (Code == "speaking time\\teacher",
Dokumentgruppe == "kodiert von Anna")
speaking.data.02.02 <- sum(speaking.data.02.02$Abdeckungsgrad..)
speaking.data.02.03 <- read.delim("./data/Aperol_pilot_02_03_novice_C_cam1_AL_MK.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.03)
### select relevant columns
speaking.data.02.03 <- speaking.data.02.03 %>% select(
Dokumentgruppe,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.03)
### checking for missing values
is.na(speaking.data.02.03)
which(is.na(speaking.data.02.03))
### filter only speaking time of teacher as row
speaking.data.02.03 <- speaking.data.02.03 %>% filter (Code == "speaking time\\teachter",
Dokumentgruppe == "kodiert von Anna")
speaking.data.02.03 <- sum(speaking.data.02.03$Abdeckungsgrad..)
# read in data for 02_03_novice_C
speaking.data.02.03 <- read.delim("./data/Aperol_pilot_02_03_novice_C_cam1_AL_MK.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.03)
### select relevant columns
speaking.data.02.03 <- speaking.data.02.03 %>% select(
Dokumentgruppe,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.03)
### checking for missing values
is.na(speaking.data.02.03)
which(is.na(speaking.data.02.03))
### filter only speaking time of teacher as row
speaking.data.02.03 <- speaking.data.02.03 %>% filter (Code == "speaking time\\teachter",
Dokumentgruppe == "02_03_kodiert von Anna
kodiert von Anna")
speaking.data.02.03 <- sum(speaking.data.02.03$Abdeckungsgrad..)
read in data for 02_03_novice_C
# read in data for 02_03_novice_C
speaking.data.02.03 <- read.delim("./data/Aperol_pilot_02_03_novice_C_cam1_AL_MK.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.03)
str(speaking.data.02.03)
### checking for missing values
is.na(speaking.data.02.03)
which(is.na(speaking.data.02.03))
### filter only speaking time of teacher as row
speaking.data.02.03 <- speaking.data.02.03 %>% filter (Code == "speaking time\\teachter",
Dokumentgruppe == "02_03_kodiert von Anna")
speaking.data.02.03 <- sum(speaking.data.02.03$Abdeckungsgrad..)
speaking.data.02.04 <- read.delim("./data/Aperol_pilot_02_04_novice_D_cam1.txt", dec=",", sep="\t", header=T)
view(speaking.data.02.04)
speaking.data.02.04 <- speaking.data.02.04 %>% select(
Dokumentgruppe,
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.04)
### select relevant columns
speaking.data.02.04 <- speaking.data.02.04 %>% select(
Code,
Anfang,
Ende,
Fläche,
Abdeckungsgrad..)
str(speaking.data.02.04)
### checking for missing values
is.na(speaking.data.02.04)
which(is.na(speaking.data.02.04))
### filter only speaking time of teacher as row
speaking.data.02.04 <- speaking.data.02.04 %>% filter (Code == "speaking time\\teachter",
Dokumentgruppe == "02_03_kodiert von Anna")
### checking for missing values
is.na(speaking.data.02.04)
which(is.na(speaking.data.02.04))
### filter only speaking time of teacher as row
speaking.data.02.04 <- speaking.data.02.04 %>% filter (Code == "speaking time\\teachter")
speaking.data.02.04 <- sum(speaking.data.02.04$Abdeckungsgrad..)
speaking.data <- read.delim("./data/plus_coded_speaking_time_questionnaire_data_0802.txt", dec=",", sep="\t", header=T)
# read in table with coded speaking time included
speaking.data <- read.delim("./data/plus_coded_speaking_time_questionnaire_data_0802.txt", dec=",", sep="\t", header=T)
# to compare both sessions filter only Identical items
speaking.data <- speaking.data  %>% filter(str_detect(scale,
paste(c("Duration of speaking time"),
collapse = '|')))view(quest.raw.data)
# read in table with coded speaking time included
speaking.data <- read.delim("./data/plus_coded_speaking_time_questionnaire_data_0802.txt", dec=",", sep="\t", header=T)
# to compare both sessions filter only Identical items
speaking.data <- speaking.data  %>% filter(str_detect(scale,
paste(c("Duration of speaking time"),
collapse = '|')))
view(speaking.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
speaking.data <- speaking.data %>%  mutate(value = as.numeric(value))
speaking.data <- speaking.data %>% mutate (speaking.data)
speaking.plot <- quest.raw.data %>%
ggplot(aes(x='Duration of speaking time', y=value, fill=group)) +
geom_boxplot() +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_light() +
theme(
legend.position="none",
plot.title = element_text(size=11),
axis.text.x = element_text(size = 8)) +
facet_grid(group~perspective) +
ggtitle("Boxplot with individual points for Duration of speaking time") +
xlab("")
speaking.plot
# read in table with coded speaking time included
speaking.data <- read.delim("./data/plus_coded_speaking_time_questionnaire_data_0802.txt", dec=",", sep="\t", header=T)
# to compare both sessions filter only Identical items
speaking.data <- speaking.data  %>% filter(str_detect(scale,
paste(c("Duration of speaking time"),
collapse = '|')))
view(speaking.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
speaking.data <- speaking.data %>%  mutate(value = as.numeric(value))
speaking.plot <- quest.raw.data %>%
ggplot(aes(x='Duration of speaking time', y=value, fill=group)) +
geom_boxplot() +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_light() +
theme(
legend.position="none",
plot.title = element_text(size=11),
axis.text.x = element_text(size = 8)) +
facet_grid(group~perspective) +
ggtitle("Boxplot with individual points for Duration of speaking time") +
xlab("")
speaking.plot
# read in table with coded speaking time included
speaking.data <- read.delim("./data/plus_coded_speaking_time_questionnaire_data_0802.txt", dec=",", sep="\t", header=T)
# to compare both sessions filter only Identical items
speaking.data <- speaking.data  %>% filter(str_detect(scale,
paste(c("Duration of speaking time"),
collapse = '|')))
view(speaking.data)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
speaking.data <- speaking.data %>%  mutate(value = as.numeric(value))
speaking.plot <- speaking.data %>%
ggplot(aes(x='Duration of speaking time', y=value, fill=group)) +
geom_boxplot() +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_light() +
theme(
legend.position="none",
plot.title = element_text(size=11),
axis.text.x = element_text(size = 8)) +
facet_grid(group~perspective) +
ggtitle("Boxplot with individual points for Duration of speaking time") +
xlab("")
speaking.plot
