# "min experience" = min(experience),
# "max experience" = max(experience),
# "SD experience" = round(sd(experience), 2),
) %>%
# format and insert table in manuscript
apa_table(
demo.quest.table,
caption = "Demographic Information",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(papaja)) install.packages('papaja'); library(papaja)
r_refs("r-references.bib")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
knitr::include_graphics("./pictures/thisisdialectical.png", dpi = 108)
# # How to insert images in papaja
# - pictures must be png
# - I created a pictures folder in the main folder, just dumb pictures there
# - you just need to hand the name and path of the picture to the knitr::: function (see above)
# - the dpi argument is for adjusting the size on the page in pixels
# in order to write the caption, you have to use the line just above the code chunk (ref:YOURTEXT-caption) and then just write behing it
# the code chunk then opens and after "r" it needs to provide a name for the code chunk, must be unique in the document
# the fig.cap = then calls the text from the line just above
# fig.align allows to position the pic on page, center ist probablby best
# echo = false ensures that the code chunk does not occur in the pdf
# Now, go and try putting your own images in the paper
#
# TIP = check line 46 in this manuscript. THis section ets global properties for how graphs are put in the paper.
#         if floatsintext      : yes  --> pics, graphs, tables will be put where the code chunk is
#         if floatsintext      : no   --> pics, graphs, tables will be put at the end as is required by some journals
# TIP: check the folder "papaja_example&tutorial" that I put in this folder for paper1
# Tip: make a bookmark of this and skim through it: http://frederikaust.com/papaja_man/
# prepare data (selected from questionnaire data)
quest.raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# knock out NAs
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA")
# converting numbers to numeric
quest.raw.data <- quest.raw.data %>%  mutate(experience = as.numeric(as.character(factor(experience))))
# create a basic table (tibble) using tidyverse functions
demo.quest.table <- quest.raw.data %>%
filter(what == "head") %>%
group_by(group) %>%
summarise(N=n(),
"male" = sum(gender),
"M age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"SD age" = round(sd(age), 2),
# "M experience" = round(mean(experience), 2),
# "min experience" = min(experience),
# "max experience" = max(experience),
# "SD experience" = round(sd(experience), 2),
) %>%
# format and insert table in manuscript
apa_table(
demo.quest.table,
caption = "Demographic Information",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# create a table of all sclaes
scale.table <- raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(scale), 2),
"min scale" = min(scale),
"max sclae" = max(scale),
"SD scale" = round(sd(scale), 2),
)
View(raw.data)
# create a table of all scales
scale.table <- raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
# import: never forget to insert "dec="," for replacing values with "," by "."
raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# loading packages
# install.packages("stringr") # install stringr to use the filter() function with text data
library(stringr)
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
# view (raw.data)
# str(raw.data)
# years of experience
class(raw.data$experience)
# converting numbers to numeric
raw.data <- raw.data %>%  mutate(experience = as.numeric(as.character(factor(experience))))
# demographics and years of experience, grouped by group (N, gender, M age, max, min age)
raw.data %>%
filter(what == "head") %>%
group_by(group) %>%
summarise(N=n(),
"male" = sum(gender),
"M age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"SD age" = round(sd(age), 2),
"M experience" = round(mean(experience), 2),
"min experience" = min(experience),
"max experience" = max(experience),
"SD experience" = round(sd(experience), 2),
) %>%
knitr::kable(digits = 2)
# to compare both sessions filter only Identical items
raw.data <- raw.data  %>% filter(str_detect(shortID,
paste(c("km_mitbekommen",
"km_klar",
"km_ungestört",
"km_aktiv",
"lkm_freundlich",
"lkm_interesse",
"lkm_kritik",
"lkm_ausreden",
"lkm_überlegen",
"lkm_rückmeldungen",
"ks_funktion",
"ks_verständlich",
"ks_sichtbar",
"af_beiträge",
"af_wechselseitig",
"af_nachdenken",
"phb_stand",
"phb_augen",
"phb_blick",
"phb_vorsichgeht",
"phb_raum",
"phb_gestik",
"phb_alleangesehen",
"ps_deutlich",
"ps_klar",
"ps_impulse",
"pi_nonverbal",
"pi_zubewegen",
"pi_direkt",
"redeanteil",
"m_natürlich",
"m_fiktiv",
"m_verhalten"),
collapse = '|')))
# value sometimes contained text before filtering, we have to convert the numbers to numeric
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a table of all scales
scale.table <- raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
# create a table of all scales
scale.table <- raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a table of all scales
scale.table <- raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
# value sometimes contained text before filtering, we have to convert the numbers to numeric
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
apply(is.na(raw.data), 2, which)
sapply(is.na(raw.data), 2, which)
apply(is.na(raw.data), which)
apply(is.na(raw.data), 2, which)
# years of experience
class(raw.data$experience)
# converting numbers to numeric
raw.data <- raw.data %>%  mutate(experience = as.numeric(as.character(factor(experience))))
# demographics and years of experience, grouped by group (N, gender, M age, max, min age)
raw.data %>%
filter(what == "head") %>%
group_by(group) %>%
summarise(N=n(),
"male" = sum(gender),
"M age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"SD age" = round(sd(age), 2),
"M experience" = round(mean(experience), 2),
"min experience" = min(experience),
"max experience" = max(experience),
"SD experience" = round(sd(experience), 2),
) %>%
knitr::kable(digits = 2)
# years of experience
class(raw.data$experience)
# converting numbers to numeric
raw.data <- raw.data %>%  mutate(experience = as.numeric(as.character(factor(experience))))
# demographics and years of experience, grouped by group (N, gender, M age, max, min age)
raw.data %>%
filter(what == "head") %>%
group_by(group) %>%
summarise(N=n(),
"male" = sum(gender),
"M age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"SD age" = round(sd(age), 2),
"M experience" = round(mean(experience), 2),
"min experience" = min(experience),
"max experience" = max(experience),
"SD experience" = round(sd(experience), 2),
) %>%
knitr::kable(digits = 2)
# create a table of all scales
raw.data %>% # select data
filter(perspective == "teacher")
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
# create a table of all scales
raw.data %>% # select data
filter(perspective == "teacher") %>%
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
sum(is.na(raw.data$scale))
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a table of all scales
raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
sum(is.na(raw.data$scale == "Aktivierung und Förderung"))
knitr::opts_chunk$set(echo = TRUE)
### HOW TO PREPARE DATA IN EXCEL ###
# use filter to select only lines with an ID in it
# (i.e. exclude all empty lines or lines with na, ?, x, etc)
# select all columns except the columns for comments
# copy/paste into a new spreadsheet
# click "save as" and choose file type "tab-delimited-text"
####################################
# load tab delimited text file into R;
# file should be in a subfolder named "data" for the script to select it
# import: never forget to insert "dec="," for replacing values with "," by "."
raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# loading packages
# install.packages("stringr") # install stringr to use the filter() function with text data
library(stringr)
# if a package is not installed on the current machine, it will install it
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
# suppress "summarize" info.
# if this line is committed, each table using the summarize function will be accompanied with a warning from the console
options(dplyr.summarise.inform = FALSE)
### checking for missing values
apply(is.na(raw.data), 2, which)
# knock out NAs
raw.data <- raw.data  %>% filter(
personID != "NA")
# view (raw.data)
# str(raw.data)
# years of experience
class(raw.data$experience)
# converting numbers to numeric
raw.data <- raw.data %>%  mutate(experience = as.numeric(as.character(factor(experience))))
# demographics and years of experience, grouped by group (N, gender, M age, max, min age)
raw.data %>%
filter(what == "head") %>%
group_by(group) %>%
summarise(N=n(),
"male" = sum(gender),
"M age" = round(mean(age), 2),
"min age" = min(age),
"max age" = max(age),
"SD age" = round(sd(age), 2),
"M experience" = round(mean(experience), 2),
"min experience" = min(experience),
"max experience" = max(experience),
"SD experience" = round(sd(experience), 2),
) %>%
knitr::kable(digits = 2)
sum(is.na(raw.data$scale == "Aktivierung und Förderung"))
# value sometimes contained text before filtering, we have to convert the numbers to numeric
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a table of all scales
raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
# to compare both sessions filter only Identical items
raw.data <- raw.data  %>% filter(str_detect(shortID,
paste(c("km_mitbekommen",
"km_klar",
"km_ungestört",
"km_aktiv",
"lkm_freundlich",
"lkm_interesse",
"lkm_kritik",
"lkm_ausreden",
"lkm_überlegen",
"lkm_rückmeldungen",
"ks_funktion",
"ks_verständlich",
"ks_sichtbar",
"af_beiträge",
"af_wechselseitig",
"af_nachdenken",
"phb_stand",
"phb_augen",
"phb_blick",
"phb_vorsichgeht",
"phb_raum",
"phb_gestik",
"phb_alleangesehen",
"ps_deutlich",
"ps_klar",
"ps_impulse",
"pi_nonverbal",
"pi_zubewegen",
"pi_direkt",
"redeanteil",
"m_natürlich",
"m_fiktiv",
"m_verhalten"),
collapse = '|')))
sum(is.na(raw.data$scale == "Aktivierung und Förderung"))
# value sometimes contained text before filtering, we have to convert the numbers to numeric
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a table of all scales
raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
knitr::include_graphics("./pictures/data_collection.png", dpi = 108)
# create a basic table (tibble) using tidyverse functions
scale.quest.data <- quest.raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
# format and insert table in manuscript
apa_table(
scale.quest.table,
caption = "Mean values of all scales",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# prepare data (selected from questionnaire data)
quest.raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# knock out NAs
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA")
# create a basic table (tibble) using tidyverse functions
scale.quest.data <- quest.raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
# format and insert table in manuscript
apa_table(
scale.quest.table,
caption = "Mean values of all scales",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# prepare data (selected from questionnaire data)
quest.raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# knock out NAs
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA")
# create a basic table (tibble) using tidyverse functions
scale.quest.tabel <- quest.raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
# format and insert table in manuscript
apa_table(
scale.quest.table,
caption = "Mean values of all scales",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
# prepare data (selected from questionnaire data)
quest.raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# knock out NAs
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA")
# create a basic table (tibble) using tidyverse functions
scale.quest.table <- quest.raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
# format and insert table in manuscript
apa_table(
scale.quest.table,
caption = "Mean values of all scales",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
sum(is.na(raw.data$scale == "Aktivierung und Förderung"))
# value sometimes contained text before filtering, we have to convert the numbers to numeric
raw.data <- raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a table of all scales
raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
) %>%
knitr::kable(digits = 2)
# prepare data (selected from questionnaire data)
quest.raw.data<-read.table("./data/short_questionnaire_data_2101211.txt", dec=",", sep="\t", header=T)
# knock out NAs
quest.raw.data <- quest.raw.data  %>% filter(
personID != "NA")
# value sometimes contained text before filtering, we have to convert the numbers to numeric
quest.raw.data <- quest.raw.data %>%  mutate(value = as.numeric(as.character(factor(value))))
# create a basic table (tibble) using tidyverse functions
scale.quest.table <- quest.raw.data %>% # select data
group_by(group, scale) %>%
summarise("M scale" = round(mean(value), 2),
"min scale" = min(value),
"max sclae" = max(value),
"SD scale" = round(sd(value), 2),
)
# format and insert table in manuscript
apa_table(
scale.quest.table,
caption = "Mean values of all scales",
# note = "Write Note here",
escape = TRUE, # if TRUE special Latex characters are escaped; if this is turned to F captions cannot be rendered. I don't know why...
placement = "h", # position of table in page:  exact location (h), at the top (t), bottom (b)
font_size = "small" # options are tiny, scriptsize, footnotesize, small, normalsize (default), large, Large, LARGE, huge, Huge
)
